{"id": "91b1fafd-2d79-49f2-bbfd-ff32072c6e15", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for c4: cargo c4 is at location l0?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "d10cd2c7-ab6b-45ef-a917-6342f3118817", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for c4: cargo c4 is at location l1, cargo c4 is situated at location l0 and vehicle v0 contains cargo c4?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "a482e155-1a0e-42ca-8832-6892b662fa41", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f2: location l0 does not have a fuel-level of f2 and location l1 does not have fuel f2?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "83f28ee6-1f28-4c70-9454-2ca763527455", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for c1: cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c1 is not situated at location l0 and vehicle v0 does not contain cargo c1?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "0a9bd233-994f-41b1-8503-a1487fed699f", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for c7: cargo c7 is not at location l1cargo c7 is not present at location l1, cargo c7 is not in vehicle v0 and cargo c7 is present at location l0?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "4a8ad2d9-b22a-4a35-95b1-8841f4eb014f", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f2: fuel f2 exists in location l0 and location l1 does not have fuel f2?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "2730188a-a82c-4081-9e79-99db757a8cd9", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_19", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f1: fuel level f0 neighbors fuel level f1 and fuel-levels f1 and f2 are neighbors?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "d88beb88-45ce-4da4-b3d6-5962481d472a", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_20", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for s0: space s0 neighbors space s1, space s0 neighbors space s2, space s1 neighbors space s0 and spaces s2 and s0 are neighbors?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "79d86080-34d0-442f-ad48-9c115b708434", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_21", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for s0: space s0 does not neighbour space s2, spaces s1 and s0 are not neighbors and spaces s2 and s0 are not neighbors?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "a507e7d9-1b7d-44df-8cfc-6faab0dc4a08", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_22", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f1: fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f2, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f1, fuel-levels f0 and f1 are not neighbors, fuel-levels f2 and f1 are not neighbors and fuel-levels f4 and f1 are not neighbors?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "d6f716e0-ce36-40a2-a05b-657c5d671807", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_23", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for s2: space s0 does not neighbour space s2, space s1 neighbors space s2, space s2 does not neighbour space s0 and spaces s2 and s1 are not neighbors?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "dddf52bd-817a-4504-9126-b808a623efcc", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_24", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l1: location l0 is not connected to location l1 and location l1 is connected to location l0?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "47663ec3-ee91-4b27-904e-00ccf26e786b", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, list all objects associated with type space. Write None if there are none.", "answer": "s0, s1 and s2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "2ef5eb13-0f8c-43f4-99f2-205b8116bbf0", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, what is the object type for v0. Write None if there are none.", "answer": "vehicle", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "e8d49140-b4c4-4d5d-b96b-52c94b567b63", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for c4: cargo c4 is present at location l0?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "2c80746f-c3ca-4910-9f41-ac7fd74bd9c3", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l1: cargo c0 is present at location l1, cargo c1 is at location l1, cargo c2 is situated at location l1, cargo c3 is situated at location l1, cargo c4 is present at location l1, cargo c5 is at location l1, cargo c6 is situated at location l1, cargo c7 is situated at location l1, cargo c8 is situated at location l1, cargo c9 is present at location l1, cargo v0 is at location l1, fuel f2 exists in location l1, fuel f4 exists in location l1, fuel f5 exists in location l1, location l1 has a fuel-level of f3, location l1 has fuel f0 and location l1 has fuel f1?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "4a55bc9f-4a4a-4f23-9551-2fbea8a5f376", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for c2: cargo c2 is not situated at location l0 and cargo c2 is not situated at location l1?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "a50c94db-500b-4667-8e83-942a874247ab", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f2: fuel f2 does not exist in location l1 and location l0 does not have fuel f2?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "7bb7755a-4895-4c50-a85c-27d738f8ebe0", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for c5: cargo c5 is not located in vehicle v0, cargo c5 is not situated at location l1 and cargo c5 is present at location l0?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "7772e29c-8b60-4720-9c79-53a9521a3217", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f1: fuel f1 exists in location l1 and location l0 does not have fuel f1?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "03095295-b7ee-4c74-b0a8-17c64275c0c6", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_19", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for s2: space s1 neighbors space s2?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "d520eedd-4a30-4e56-8000-e7a79e96039f", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_20", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f0: fuel level f0 neighbors fuel level f2, fuel level f0 neighbors fuel level f3, fuel level f1 neighbors fuel level f0, fuel level f3 neighbors fuel level f0, fuel-levels f0 and f1 are neighbors, fuel-levels f0 and f4 are neighbors, fuel-levels f0 and f5 are neighbors, fuel-levels f2 and f0 are neighbors, fuel-levels f4 and f0 are neighbors and fuel-levels f5 and f0 are neighbors?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "de7e4261-c8c4-48d7-8e62-e204246092b0", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_21", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for s2: space s0 does not neighbour space s2, space s2 does not neighbour space s1 and spaces s2 and s0 are not neighbors?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "1bd57878-b769-4bc9-b582-b8299b57febe", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_22", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f5: fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f4, fuel-levels f0 and f5 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f4 and f5 are not neighbors and fuel-levels f5 and f2 are not neighbors?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "6aa669bb-24bc-42b6-8743-13ae9925a192", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_23", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for s2: space s2 does not neighbour space s1, spaces s0 and s2 are not neighbors, spaces s1 and s2 are neighbors and spaces s2 and s0 are not neighbors?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "81fb7042-c852-4c71-8812-94f1067646c0", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_24", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f5: fuel level f1 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f5, fuel level f4 neighbors fuel level f5, fuel level f5 does not neighbour fuel level f2, fuel level f5 neighbors fuel level f3, fuel level f5 neighbors fuel level f4, fuel-levels f0 and f5 are neighbors, fuel-levels f5 and f0 are neighbors and fuel-levels f5 and f1 are neighbors?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "108905c4-6830-4617-9c1a-6f4d895c680c", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, list all objects associated with type fuel. Write None if there are none.", "answer": "f0, f1, f2, f3, f4 and f5", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "79a34865-04eb-419a-9db8-d462a897d029", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, what is the object type for f0, f1, f2, f3 and f5. Write None if there are none.", "answer": "fuel", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "4a503e03-3afc-4cd8-9035-7e2b39107726", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l1: cargo c0 is at location l1, cargo c2 is present at location l1, cargo c3 is at location l1 and fuel f2 exists in location l1?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "c59791d8-1f28-43f3-869b-2f33cc24935f", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for c4: cargo c4 is at location l1, cargo c4 is located in vehicle v0 and cargo c4 is present at location l0?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "f86c07b8-e2dc-4340-b271-99a217f4a9c0", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for c5: cargo c5 is not situated at location l0 and cargo c5 is not situated at location l1?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "12e0b0ee-8577-4801-8877-5fa61e321535", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for c6: cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not at location l1cargo c6 is not present at location l1 and cargo c6 is not located in vehicle v0?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "6b947634-cdef-4a99-be4f-99e751990f8d", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l1: cargo c0 is situated at location l1, cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c2 is situated at location l1, cargo c3 is situated at location l1, cargo c4 is not situated at location l1, cargo c5 is not situated at location l1, cargo c6 is not situated at location l1, cargo c7 is not at location l1cargo c7 is not present at location l1, cargo c8 is not at location l1cargo c8 is not present at location l1, cargo c9 is not at location l1cargo c9 is not present at location l1, cargo v0 is not situated at location l1, fuel f2 exists in location l1, location l1 does not have fuel f0, location l1 does not have fuel f1, location l1 does not have fuel f3, location l1 does not have fuel f4 and location l1 does not have fuel f5?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "e7cc97c8-f4e8-4852-b704-1fd39bb9c5eb", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for c5: cargo c5 is in vehicle v0, cargo c5 is not at location l1cargo c5 is not present at location l1 and cargo c5 is situated at location l0?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "54f41fc3-57db-4fd5-abef-9b622f27b6b3", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_19", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f2: fuel level f1 neighbors fuel level f2 and fuel-levels f2 and f3 are neighbors?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "46ff2cc6-946b-480d-b6a6-7eca62d09a7a", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_20", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f3: fuel level f2 neighbors fuel level f3, fuel level f3 neighbors fuel level f0, fuel level f3 neighbors fuel level f4, fuel level f5 neighbors fuel level f3, fuel-levels f0 and f3 are neighbors, fuel-levels f1 and f3 are neighbors, fuel-levels f3 and f1 are neighbors, fuel-levels f3 and f2 are neighbors, fuel-levels f3 and f5 are neighbors and fuel-levels f4 and f3 are neighbors?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "f032e0a7-da53-475b-8a44-7e7acefcc841", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_21", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f4: fuel level f0 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f4, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f4, fuel-levels f1 and f4 are not neighbors and fuel-levels f4 and f1 are not neighbors?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "1e757362-ce7f-439f-ab6f-4c95d758925a", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_22", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f2: fuel level f0 does not neighbour fuel level f2, fuel level f1 does not neighbour fuel level f2, fuel level f2 does not neighbour fuel level f3, fuel level f2 does not neighbour fuel level f4, fuel level f3 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f2, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f5 are not neighbors and fuel-levels f4 and f2 are not neighbors?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "02bc6937-77c9-4138-b76c-1c3cf3e5bd2c", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_23", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l1: location l0 is connected to location l1 and location l1 is connected to location l0?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "bdb382b4-2f9a-4901-a602-24fb80fc2264", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_24", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f0: fuel level f0 does not neighbour fuel level f1, fuel level f0 does not neighbour fuel level f4, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f3 are neighbors, fuel-levels f0 and f5 are neighbors, fuel-levels f1 and f0 are neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f3 and f0 are neighbors, fuel-levels f4 and f0 are not neighbors and fuel-levels f5 and f0 are not neighbors?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "72706ec4-5dba-427a-80fb-ca9608e981b0", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, list all objects associated with type space. Write None if there are none.", "answer": "s0, s1 and s2", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "0484f09f-630a-43aa-9bde-b2f328850ece", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, what is the object type for s0 and s2. Write None if there are none.", "answer": "space", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "438fde97-188d-4d99-b9be-1ec4459c53a6", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for c5: cargo c5 is present at location l1?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "d4b65297-dd15-4483-9fe2-1165691b63ba", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for c9: cargo c9 is present at location l0, cargo c9 is situated at location l1 and vehicle v0 contains cargo c9?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "10eded3d-fdd9-4306-8346-5f1cd487f19d", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for c9: cargo c9 is not at location l1cargo c9 is not present at location l1 and vehicle v0 does not contain cargo c9?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "d7f8bb26-abec-4192-aecb-bb4cbdb9d1cc", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for c8: cargo c8 is not at location l0cargo c8 is not present at location l0, cargo c8 is not in vehicle v0 and cargo c8 is not situated at location l1?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "dcb87c29-0058-4559-8ab7-e36a914949bd", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for c7: cargo c7 is at location l0, cargo c7 is not at location l1cargo c7 is not present at location l1 and cargo c7 is not located in vehicle v0?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "fac58088-1a13-4cee-8692-6e388870887b", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for c6: cargo c6 is at location l0, cargo c6 is not in vehicle v0 and cargo c6 is situated at location l1?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "3e9eb199-f311-48b8-986f-006e8db40b00", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_19", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for s0: spaces s0 and s1 are neighbors?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "008fe234-0e72-452a-a881-c0a97af292ac", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_20", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f5: fuel level f3 neighbors fuel level f5, fuel level f5 neighbors fuel level f0, fuel level f5 neighbors fuel level f2, fuel level f5 neighbors fuel level f3, fuel level f5 neighbors fuel level f4, fuel-levels f0 and f5 are neighbors, fuel-levels f1 and f5 are neighbors, fuel-levels f2 and f5 are neighbors, fuel-levels f4 and f5 are neighbors and fuel-levels f5 and f1 are neighbors?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "c588e743-2143-493a-bba4-1b4d54ac820e", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_21", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f3: fuel level f0 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f3, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f3, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f5 are not neighbors and fuel-levels f5 and f3 are not neighbors?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "1be88120-302d-467b-9aee-c2a2234bb60f", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_22", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for s2: space s2 does not neighbour space s0, space s2 does not neighbour space s1, spaces s0 and s2 are not neighbors and spaces s1 and s2 are not neighbors?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "0673c30b-0b15-454b-a56b-3b565679ec7a", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_23", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f4: fuel level f2 does not neighbour fuel level f4, fuel level f4 does not neighbour fuel level f3, fuel level f4 neighbors fuel level f5, fuel level f5 does not neighbour fuel level f4, fuel-levels f0 and f4 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f1 are not neighbors and fuel-levels f4 and f2 are not neighbors?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "e56a27de-68f7-4901-949e-2d938bacbec2", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_24", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for s0: space s0 neighbors space s1, spaces s0 and s2 are not neighbors, spaces s1 and s0 are neighbors and spaces s2 and s0 are neighbors?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "f461f821-b8a2-46c1-9893-37154fb3800f", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, list all objects associated with type vehicle. Write None if there are none.", "answer": "v0", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "61cc4688-1854-456e-9d51-e6d595183d4c", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, what is the object type for l1. Write None if there are none.", "answer": "location", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "86297fd9-2641-4c25-88e5-c9066e2a6114", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for c3: cargo c3 is situated at location l0?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "5f2a3605-5147-4f8b-a469-042b40d6d9a9", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f0: fuel f0 exists in location l1 and location l0 has a fuel-level of f0?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "041d9f25-d48b-4636-bc86-ca8394f15ab8", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f2: location l0 does not have a fuel-level of f2 and location l1 does not have a fuel-level of f2?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "ed9dcbf1-ff12-4970-aa30-90c5dc3bbf5c", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for c9: cargo c9 is not at location l0cargo c9 is not present at location l0, cargo c9 is not at location l1cargo c9 is not present at location l1 and cargo c9 is not located in vehicle v0?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "45421d86-0ea7-4829-9d37-5a5a57bcb257", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f4: fuel f4 does not exist in location l0 and location l1 does not have a fuel-level of f4?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "1951bc4b-4f68-4a16-b7f4-825de79d069c", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f4: location l0 has fuel f4 and location l1 does not have a fuel-level of f4?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "8771da2b-fd2e-46a1-856c-415f26d89a19", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_19", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f0: fuel level f0 neighbors fuel level f1?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "aeac9f6a-c907-41e8-b3b5-68de310be87c", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_20", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for s2: space s0 neighbors space s2, space s1 neighbors space s2, spaces s2 and s0 are neighbors and spaces s2 and s1 are neighbors?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "3d069cf3-3de8-4ff3-83b1-15d7cbc4ec69", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_21", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f1: fuel level f1 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f1, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f3 and f1 are not neighbors and fuel-levels f5 and f1 are not neighbors?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "b4d280d7-4f08-4e55-9b48-10ba86e438ba", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_22", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f5: fuel level f2 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f5, fuel level f5 does not neighbour fuel level f1, fuel-levels f0 and f5 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f4 and f5 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f3 are not neighbors and fuel-levels f5 and f4 are not neighbors?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "4363a6f0-6f42-4bee-8a45-711e1194c837", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_23", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f4: fuel level f3 neighbors fuel level f4, fuel level f4 does not neighbour fuel level f2, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f4 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f3 are not neighbors and fuel-levels f5 and f4 are not neighbors?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "d0bc5b37-8401-4106-b689-a81ae0f2ed23", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "iter_1_question_24", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l0: location l0 and location l1 are connected and location l1 is not connected to location l0?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "7d65ff5e-cee7-4e67-ac23-b0485bc31a39", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, list all objects associated with type space. Write None if there are none.", "answer": "s0, s1 and s2", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "51fb0a4b-8928-417d-bf81-4049f3bc74e9", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, what is the object type for c0, c3, c4, c5, c6, c7, c8 and c9. Write None if there are none.", "answer": "cargo", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f3, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "e6a13e4b-5139-47bf-a5ee-242f50e03b65", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, is it True or False that location l0 has fuel f3?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "16a0bd55-44fa-4dff-87c4-1a9126a623c7", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, is it True or False that cargo v0 is not situated at location l0?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "3aa68933-c3e9-4508-96f0-7d28d55de8b3", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, is it True or False that vehicle v0 does not contain cargo c8?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "fe7f775f-a787-4d16-9401-53de4ede6d03", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_1_question_13", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, is it True or False that there is a connection between locations l0 and l1?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "718ca04d-b312-4fcb-ad41-c3b48fde5161", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_1_question_14", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, is it True or False that fuel-levels f1 and f2 are not neighbors?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "e3b17e09-7915-4a24-9c91-90ad65c579de", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_1_question_15", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, is it True or False that fuel level f3 does not neighbour fuel level f1?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "200e5c6c-0c93-405e-ba3a-324c635fad79", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is in vehicle v0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is at location l0, cargo c8 is situated at location l0, cargo c9 is at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, location l1 has a fuel-level of f3 and vehicle v0 has space s1?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "b7a5ca9a-871f-4371-b3a6-333eac8d354b", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is at location l0, cargo c0 is at location l1, cargo c0 is located in vehicle v0, cargo c1 is at location l1, cargo c1 is in vehicle v0, cargo c1 is present at location l0, cargo c2 is at location l0, cargo c2 is at location l1, cargo c2 is in vehicle v0, cargo c3 is located in vehicle v0, cargo c3 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c5 is at location l1, cargo c5 is located in vehicle v0, cargo c6 is situated at location l0, cargo c6 is situated at location l1, cargo c7 is at location l0, cargo c7 is situated at location l1, cargo c8 is at location l0, cargo c8 is present at location l1, cargo c9 is located in vehicle v0, cargo c9 is situated at location l0, cargo c9 is situated at location l1, cargo v0 is at location l0, cargo v0 is at location l1, location l0 has a fuel-level of f2, location l0 has a fuel-level of f3, location l0 has a fuel-level of f5, location l0 has fuel f0, location l0 has fuel f1, location l0 has fuel f4, location l1 has a fuel-level of f2, location l1 has fuel f0, location l1 has fuel f1, location l1 has fuel f3, location l1 has fuel f4, location l1 has fuel f5, vehicle v0 contains cargo c4, vehicle v0 contains cargo c6, vehicle v0 contains cargo c7, vehicle v0 contains cargo c8, vehicle v0 contains space s1, vehicle v0 has space s0 and vehicle v0 has space s2?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "70c161bc-9862-4fa1-bda2-ad88ed087e8e", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c0 is not situated at location l1, cargo c1 is not situated at location l0, cargo c2 is not at location l1cargo c2 is not present at location l1, cargo c3 is not at location l0cargo c3 is not present at location l0, cargo c3 is not located in vehicle v0, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c4 is not located in vehicle v0, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c6 is not in vehicle v0, cargo c6 is not situated at location l1, cargo c7 is not located in vehicle v0, cargo c7 is not situated at location l1, cargo c8 is not at location l1cargo c8 is not present at location l1, cargo c8 is not located in vehicle v0, cargo c9 is not at location l1cargo c9 is not present at location l1, cargo v0 is not at location l1cargo v0 is not present at location l1, fuel f0 does not exist in location l0, fuel f2 does not exist in location l0, fuel f4 does not exist in location l1, fuel f5 does not exist in location l1, location l0 does not have fuel f1, location l0 does not have fuel f4, location l0 does not have fuel f5, location l1 does not have a fuel-level of f2, location l1 does not have fuel f0, location l1 does not have fuel f1, vehicle v0 does not contain cargo c1, vehicle v0 does not contain cargo c2, vehicle v0 does not contain cargo c5, vehicle v0 does not contain cargo c9, vehicle v0 does not contain space s2 and vehicle v0 does not have space s0?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "142b9041-b482-4738-a4fd-c3481195d8e5", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c0 is not at location l1cargo c0 is not present at location l1, cargo c0 is not located in vehicle v0, cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c1 is not situated at location l0, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c2 is not at location l1cargo c2 is not present at location l1, cargo c3 is not at location l1cargo c3 is not present at location l1, cargo c3 is not in vehicle v0, cargo c3 is not situated at location l0, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c4 is not situated at location l0, cargo c5 is not located in vehicle v0, cargo c5 is not situated at location l0, cargo c5 is not situated at location l1, cargo c6 is not at location l1cargo c6 is not present at location l1, cargo c6 is not located in vehicle v0, cargo c6 is not situated at location l0, cargo c7 is not located in vehicle v0, cargo c7 is not situated at location l0, cargo c7 is not situated at location l1, cargo c8 is not at location l0cargo c8 is not present at location l0, cargo c8 is not in vehicle v0, cargo c8 is not situated at location l1, cargo c9 is not located in vehicle v0, cargo c9 is not situated at location l0, cargo c9 is not situated at location l1, cargo v0 is not situated at location l0, cargo v0 is not situated at location l1, fuel f1 does not exist in location l0, fuel f2 does not exist in location l0, fuel f4 does not exist in location l0, location l0 does not have a fuel-level of f3, location l0 does not have fuel f0, location l0 does not have fuel f5, location l1 does not have a fuel-level of f0, location l1 does not have a fuel-level of f1, location l1 does not have a fuel-level of f2, location l1 does not have a fuel-level of f3, location l1 does not have a fuel-level of f4, location l1 does not have fuel f5, vehicle v0 does not contain cargo c1, vehicle v0 does not contain cargo c2, vehicle v0 does not contain cargo c4, vehicle v0 does not contain space s0, vehicle v0 does not contain space s1 and vehicle v0 does not have space s2?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "e0057296-ff45-40b1-a620-1cce15edf1ea", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c0 is not situated at location l1, cargo c1 is not at location l0cargo c1 is not present at location l0, cargo c1 is not in vehicle v0, cargo c1 is situated at location l1, cargo c2 is not in vehicle v0, cargo c2 is not situated at location l1, cargo c2 is situated at location l0, cargo c3 is not located in vehicle v0, cargo c3 is not situated at location l0, cargo c3 is present at location l1, cargo c4 is at location l0, cargo c4 is not in vehicle v0, cargo c4 is not situated at location l1, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c5 is situated at location l0, cargo c6 is at location l0, cargo c6 is not at location l1cargo c6 is not present at location l1, cargo c6 is not located in vehicle v0, cargo c7 is not in vehicle v0, cargo c7 is not situated at location l1, cargo c7 is situated at location l0, cargo c8 is not at location l1cargo c8 is not present at location l1, cargo c8 is not located in vehicle v0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo c9 is not at location l1cargo c9 is not present at location l1, cargo v0 is at location l0, cargo v0 is not situated at location l1, fuel f0 does not exist in location l0, fuel f2 does not exist in location l0, fuel f2 does not exist in location l1, fuel f4 does not exist in location l0, location l0 does not have a fuel-level of f1, location l0 does not have a fuel-level of f5, location l0 has a fuel-level of f3, location l1 does not have fuel f0, location l1 does not have fuel f1, location l1 does not have fuel f4, location l1 does not have fuel f5, location l1 has fuel f3, vehicle v0 contains cargo c0, vehicle v0 contains space s1, vehicle v0 does not contain cargo c5, vehicle v0 does not contain cargo c9, vehicle v0 does not contain space s2 and vehicle v0 does not have space s0?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "0c832775-31fd-40e8-8589-9da736cc5712", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is in vehicle v0, cargo c0 is present at location l0, cargo c0 is present at location l1, cargo c1 is in vehicle v0, cargo c1 is present at location l0, cargo c1 is situated at location l1, cargo c2 is not at location l1cargo c2 is not present at location l1, cargo c2 is situated at location l0, cargo c3 is not at location l1cargo c3 is not present at location l1, cargo c3 is not situated at location l0, cargo c4 is at location l0, cargo c4 is located in vehicle v0, cargo c4 is not situated at location l1, cargo c5 is at location l1, cargo c5 is not at location l0cargo c5 is not present at location l0, cargo c6 is in vehicle v0, cargo c6 is present at location l1, cargo c6 is situated at location l0, cargo c7 is not at location l0cargo c7 is not present at location l0, cargo c7 is not situated at location l1, cargo c8 is at location l1, cargo c8 is located in vehicle v0, cargo c8 is not at location l0cargo c8 is not present at location l0, cargo c9 is at location l0, cargo c9 is not at location l1cargo c9 is not present at location l1, cargo v0 is not situated at location l0, cargo v0 is not situated at location l1, fuel f1 does not exist in location l0, fuel f2 does not exist in location l1, fuel f4 does not exist in location l0, fuel f5 does not exist in location l0, fuel f5 exists in location l1, location l0 does not have fuel f0, location l0 does not have fuel f2, location l0 has a fuel-level of f3, location l1 does not have fuel f1, location l1 has a fuel-level of f0, location l1 has fuel f3, location l1 has fuel f4, vehicle v0 contains cargo c2, vehicle v0 contains cargo c5, vehicle v0 contains cargo c9, vehicle v0 contains space s1, vehicle v0 contains space s2, vehicle v0 does not contain cargo c3, vehicle v0 does not contain cargo c7 and vehicle v0 has space s0?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "eb619e11-4be0-4ee8-99a0-556fd0805cb9", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_19", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 and location l1 are connected, location l1 is connected to location l0, space s1 neighbors space s2 and spaces s0 and s1 are neighbors?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "377804db-a678-4263-a46f-34358659ad6d", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_20", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 neighbors fuel level f3, fuel level f0 neighbors fuel level f5, fuel level f1 neighbors fuel level f0, fuel level f1 neighbors fuel level f2, fuel level f1 neighbors fuel level f3, fuel level f1 neighbors fuel level f4, fuel level f1 neighbors fuel level f5, fuel level f2 neighbors fuel level f5, fuel level f3 neighbors fuel level f0, fuel level f3 neighbors fuel level f1, fuel level f3 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f3, fuel level f5 neighbors fuel level f2, fuel level f5 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f0 and f2 are neighbors, fuel-levels f0 and f4 are neighbors, fuel-levels f2 and f0 are neighbors, fuel-levels f2 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f2 and f4 are neighbors, fuel-levels f3 and f5 are neighbors, fuel-levels f4 and f0 are neighbors, fuel-levels f4 and f1 are neighbors, fuel-levels f4 and f2 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f0 are neighbors, fuel-levels f5 and f1 are neighbors, fuel-levels f5 and f3 are neighbors, space s0 neighbors space s2, space s2 neighbors space s0, space s2 neighbors space s1, spaces s0 and s1 are neighbors, spaces s1 and s0 are neighbors, spaces s1 and s2 are neighbors, there is a connection between locations l0 and l1 and there is a connection between locations l1 and l0?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "a0544885-07eb-4bde-9f4f-b640f0599bbb", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_21", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f3, fuel level f0 does not neighbour fuel level f4, fuel level f0 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f4, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f5, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f4, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f3 are not neighbors, space s0 does not neighbour space s2, space s1 does not neighbour space s0, spaces s2 and s0 are not neighbors and spaces s2 and s1 are not neighbors?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "bbc0eb6e-b648-48ed-a12f-168d042b74a4", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_22", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f4, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f3, fuel level f4 does not neighbour fuel level f5, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f4, fuel-levels f0 and f1 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f1 and f2 are not neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f3 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f3 are not neighbors, location l0 is not connected to location l1, location l1 and location l0 are not connected, space s0 does not neighbour space s2, space s1 does not neighbour space s2, space s2 does not neighbour space s0, spaces s0 and s1 are not neighbors, spaces s1 and s0 are not neighbors and spaces s2 and s1 are not neighbors?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "20bb1560-c757-4e67-9b7b-861cf5e4055b", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_23", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 does not neighbour fuel level f3, fuel level f0 does not neighbour fuel level f5, fuel level f0 neighbors fuel level f1, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f5, fuel level f1 neighbors fuel level f2, fuel level f2 does not neighbour fuel level f1, fuel level f2 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f5, fuel level f2 neighbors fuel level f3, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f4, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f3 are not neighbors, location l0 and location l1 are connected, location l1 is connected to location l0, space s0 neighbors space s1, space s2 does not neighbour space s1, spaces s0 and s2 are not neighbors, spaces s1 and s0 are not neighbors, spaces s1 and s2 are neighbors and spaces s2 and s0 are not neighbors?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "d91561ca-842c-4c58-8bdd-d8d54c1a914b", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_24", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 does not neighbour fuel level f3, fuel level f0 neighbors fuel level f4, fuel level f1 neighbors fuel level f3, fuel level f1 neighbors fuel level f4, fuel level f2 neighbors fuel level f3, fuel level f2 neighbors fuel level f4, fuel level f2 neighbors fuel level f5, fuel level f3 does not neighbour fuel level f1, fuel level f3 neighbors fuel level f0, fuel level f3 neighbors fuel level f5, fuel level f4 does not neighbour fuel level f3, fuel level f4 neighbors fuel level f0, fuel level f4 neighbors fuel level f1, fuel level f5 neighbors fuel level f3, fuel level f5 neighbors fuel level f4, fuel-levels f0 and f1 are not neighbors, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f2 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f2 and f0 are neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f3 and f4 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f5 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f2 are neighbors, location l0 and location l1 are connected, space s2 neighbors space s1, spaces s0 and s1 are neighbors, spaces s0 and s2 are neighbors, spaces s1 and s0 are not neighbors, spaces s1 and s2 are neighbors, spaces s2 and s0 are not neighbors and there is a connection between locations l1 and l0?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "a75dd265-2e34-48c2-a91a-21fe4597e4b3", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_3_question_7", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state,. What are the self constraint properties of the state for c4? Write None if there are none", "answer": "cargo c4 is at location l0", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "7eb02a3b-9768-476a-8865-38e75e44c1d8", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_3_question_8", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state,. What are the self constraint properties of the state for f1? Write None if there are none", "answer": "fuel f1 does not exist in location l1 and location l0 does not have fuel f1", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "7ebdb5aa-5841-408e-9285-fbd00166c59c", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_3_question_9", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state,. What are the self constraint properties of the state for c5? Write None if there are none", "answer": "cargo c5 is not located in vehicle v0, cargo c5 is not situated at location l1 and cargo c5 is situated at location l0", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "c2ade751-282b-40a5-9224-0e630c4841f1", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_3_question_10", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state,. What are the static properties of the state for f5? Write None if there are none", "answer": "fuel-levels f4 and f5 are neighbors", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "f1cc204a-9c04-47e7-b8d4-3f93a325510d", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_3_question_11", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state,. What are the static properties of the state for f2? Write None if there are none", "answer": "fuel level f2 does not neighbour fuel level f4, fuel-levels f0 and f2 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f4 and f2 are not neighbors and fuel-levels f5 and f2 are not neighbors", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "bf14561a-cadd-4347-8264-ca987409e8f0", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_3_question_12", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state,. What are the static properties of the state for l0? Write None if there are none", "answer": "location l0 and location l1 are connected and location l1 and location l0 are connected", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "d96d8ee2-146f-4d37-89c3-8138f87a24a4", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is it True or False that cargo c9 is present at location l0?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "57d03410-6129-4167-a01a-190372239baa", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is it True or False that cargo c9 is not at location l0cargo c9 is not present at location l0?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "a08ec724-b82a-416f-a943-8f5e68cce5a7", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is it True or False that location l0 does not have a fuel-level of f4?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "e8f12279-ffea-4c8e-9b2d-cf6eed95b3ce", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_1_question_13", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, is it True or False that fuel-levels f2 and f3 are neighbors?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "902a6998-095c-4b3f-a5a5-c267dc1e121f", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_1_question_14", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is it True or False that fuel level f2 does not neighbour fuel level f3?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "ef54937e-31ce-4ac7-96da-b7cdabd47583", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_1_question_15", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is it True or False that spaces s2 and s1 are not neighbors?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "2f296e5b-67d4-40f6-96f5-ba1ff9fc6949", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is at location l1, cargo c2 is located in vehicle v0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is present at location l0, cargo v0 is present at location l1, location l0 has fuel f2, location l1 has a fuel-level of f3, vehicle v0 contains cargo c1 and vehicle v0 has space s0?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "a49968c2-e864-485a-9afc-f57470750c5a", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is at location l1, cargo c0 is in vehicle v0, cargo c0 is present at location l0, cargo c1 is in vehicle v0, cargo c1 is present at location l1, cargo c1 is situated at location l0, cargo c2 is at location l0, cargo c2 is situated at location l1, cargo c3 is located in vehicle v0, cargo c3 is present at location l0, cargo c3 is situated at location l1, cargo c4 is at location l0, cargo c4 is located in vehicle v0, cargo c4 is present at location l1, cargo c5 is at location l0, cargo c5 is at location l1, cargo c6 is at location l1, cargo c6 is in vehicle v0, cargo c6 is present at location l0, cargo c7 is in vehicle v0, cargo c7 is situated at location l0, cargo c7 is situated at location l1, cargo c8 is at location l0, cargo c8 is present at location l1, cargo c9 is at location l0, cargo c9 is at location l1, cargo v0 is present at location l0, cargo v0 is situated at location l1, fuel f1 exists in location l0, fuel f1 exists in location l1, fuel f3 exists in location l0, fuel f3 exists in location l1, fuel f5 exists in location l0, location l0 has a fuel-level of f0, location l0 has a fuel-level of f2, location l0 has a fuel-level of f4, location l1 has a fuel-level of f0, location l1 has a fuel-level of f2, location l1 has a fuel-level of f4, location l1 has a fuel-level of f5, vehicle v0 contains cargo c2, vehicle v0 contains cargo c5, vehicle v0 contains cargo c8, vehicle v0 contains cargo c9, vehicle v0 contains space s1, vehicle v0 has space s0 and vehicle v0 has space s2?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "5145b14f-8639-43e4-9b75-b7481071ea08", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is not located in vehicle v0, cargo c0 is not situated at location l0, cargo c1 is not situated at location l0, cargo c1 is not situated at location l1, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c2 is not at location l1cargo c2 is not present at location l1, cargo c3 is not at location l0cargo c3 is not present at location l0, cargo c3 is not in vehicle v0, cargo c4 is not in vehicle v0, cargo c4 is not situated at location l1, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c5 is not in vehicle v0, cargo c6 is not in vehicle v0, cargo c6 is not situated at location l1, cargo c7 is not at location l1cargo c7 is not present at location l1, cargo c7 is not located in vehicle v0, cargo c8 is not at location l1cargo c8 is not present at location l1, cargo c8 is not located in vehicle v0, cargo c9 is not in vehicle v0, cargo c9 is not situated at location l1, cargo v0 is not situated at location l0, fuel f1 does not exist in location l1, fuel f3 does not exist in location l0, fuel f5 does not exist in location l1, location l0 does not have a fuel-level of f0, location l0 does not have a fuel-level of f4, location l0 does not have fuel f1, location l0 does not have fuel f5, location l1 does not have a fuel-level of f2, location l1 does not have a fuel-level of f4, location l1 does not have fuel f0, vehicle v0 does not contain space s1 and vehicle v0 does not contain space s2?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "bf7ba685-3372-4fde-b28a-fdf13303dcdf", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c0 is not situated at location l1, cargo c1 is not situated at location l0, cargo c1 is not situated at location l1, cargo c2 is not in vehicle v0, cargo c2 is not situated at location l0, cargo c2 is not situated at location l1, cargo c3 is not at location l0cargo c3 is not present at location l0, cargo c3 is not at location l1cargo c3 is not present at location l1, cargo c3 is not in vehicle v0, cargo c4 is not at location l0cargo c4 is not present at location l0, cargo c4 is not in vehicle v0, cargo c4 is not situated at location l1, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c5 is not in vehicle v0, cargo c5 is not situated at location l0, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not at location l1cargo c6 is not present at location l1, cargo c6 is not located in vehicle v0, cargo c7 is not at location l0cargo c7 is not present at location l0, cargo c7 is not at location l1cargo c7 is not present at location l1, cargo c7 is not in vehicle v0, cargo c8 is not at location l0cargo c8 is not present at location l0, cargo c8 is not in vehicle v0, cargo c8 is not situated at location l1, cargo c9 is not situated at location l0, cargo c9 is not situated at location l1, cargo v0 is not at location l0cargo v0 is not present at location l0, cargo v0 is not situated at location l1, fuel f1 does not exist in location l0, fuel f3 does not exist in location l1, fuel f4 does not exist in location l1, fuel f5 does not exist in location l1, location l0 does not have a fuel-level of f2, location l0 does not have a fuel-level of f5, location l0 does not have fuel f0, location l0 does not have fuel f3, location l0 does not have fuel f4, location l1 does not have a fuel-level of f2, location l1 does not have fuel f0, location l1 does not have fuel f1, vehicle v0 does not contain cargo c0, vehicle v0 does not contain cargo c1, vehicle v0 does not contain cargo c9, vehicle v0 does not contain space s0, vehicle v0 does not have space s1 and vehicle v0 does not have space s2?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "add7a25f-14b4-4604-9173-3e9b475db344", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c0 is not in vehicle v0, cargo c0 is present at location l1, cargo c1 is in vehicle v0, cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c1 is not situated at location l0, cargo c2 is in vehicle v0, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c2 is not situated at location l1, cargo c3 is not at location l0cargo c3 is not present at location l0, cargo c3 is not located in vehicle v0, cargo c3 is situated at location l1, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c4 is not located in vehicle v0, cargo c4 is situated at location l0, cargo c5 is at location l0, cargo c5 is not in vehicle v0, cargo c5 is not situated at location l1, cargo c6 is at location l0, cargo c6 is not situated at location l1, cargo c7 is at location l0, cargo c7 is not situated at location l1, cargo c8 is not in vehicle v0, cargo c8 is not situated at location l1, cargo c8 is present at location l0, cargo c9 is not located in vehicle v0, cargo c9 is not situated at location l1, cargo c9 is situated at location l0, cargo v0 is at location l1, cargo v0 is not situated at location l0, fuel f2 exists in location l0, fuel f3 does not exist in location l0, fuel f4 does not exist in location l0, location l0 does not have a fuel-level of f1, location l0 does not have fuel f0, location l0 does not have fuel f5, location l1 does not have a fuel-level of f1, location l1 does not have a fuel-level of f2, location l1 does not have a fuel-level of f4, location l1 does not have a fuel-level of f5, location l1 does not have fuel f0, location l1 has a fuel-level of f3, vehicle v0 does not contain cargo c6, vehicle v0 does not contain cargo c7, vehicle v0 does not contain space s1, vehicle v0 does not have space s2 and vehicle v0 has space s0?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "10570dc0-728d-4230-938a-d29ff008b373", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is at location l1, cargo c0 is located in vehicle v0, cargo c0 is not situated at location l0, cargo c1 is at location l1, cargo c1 is not situated at location l0, cargo c2 is not at location l1cargo c2 is not present at location l1, cargo c2 is not situated at location l0, cargo c3 is at location l0, cargo c3 is located in vehicle v0, cargo c3 is not situated at location l1, cargo c4 is at location l0, cargo c4 is at location l1, cargo c4 is not located in vehicle v0, cargo c5 is at location l1, cargo c5 is not located in vehicle v0, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c6 is not located in vehicle v0, cargo c6 is present at location l0, cargo c7 is not at location l1cargo c7 is not present at location l1, cargo c7 is not situated at location l0, cargo c8 is not located in vehicle v0, cargo c8 is situated at location l0, cargo c8 is situated at location l1, cargo c9 is at location l1, cargo c9 is in vehicle v0, cargo c9 is not situated at location l0, cargo v0 is present at location l0, cargo v0 is present at location l1, fuel f0 exists in location l0, fuel f0 exists in location l1, fuel f1 does not exist in location l1, fuel f3 does not exist in location l0, location l0 does not have a fuel-level of f1, location l0 does not have a fuel-level of f4, location l0 does not have fuel f2, location l0 has a fuel-level of f5, location l1 does not have a fuel-level of f3, location l1 does not have fuel f2, location l1 has a fuel-level of f4, location l1 has a fuel-level of f5, vehicle v0 contains cargo c1, vehicle v0 contains cargo c2, vehicle v0 does not contain cargo c7, vehicle v0 does not contain space s0, vehicle v0 does not contain space s2 and vehicle v0 has space s1?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "67446b1c-4879-4f23-894f-be428d055677", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_19", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f3 neighbors fuel level f4, fuel-levels f4 and f5 are neighbors, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and there is a connection between locations l0 and l1?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "801e017b-29db-4a3b-96d8-d8fb9686345e", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_20", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 neighbors fuel level f1, fuel level f0 neighbors fuel level f3, fuel level f0 neighbors fuel level f4, fuel level f1 neighbors fuel level f0, fuel level f1 neighbors fuel level f2, fuel level f1 neighbors fuel level f3, fuel level f1 neighbors fuel level f4, fuel level f1 neighbors fuel level f5, fuel level f2 neighbors fuel level f0, fuel level f2 neighbors fuel level f1, fuel level f2 neighbors fuel level f5, fuel level f3 neighbors fuel level f2, fuel level f4 neighbors fuel level f3, fuel level f5 neighbors fuel level f0, fuel level f5 neighbors fuel level f1, fuel level f5 neighbors fuel level f2, fuel level f5 neighbors fuel level f3, fuel-levels f0 and f2 are neighbors, fuel-levels f0 and f5 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f2 and f4 are neighbors, fuel-levels f3 and f0 are neighbors, fuel-levels f3 and f1 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f3 and f5 are neighbors, fuel-levels f4 and f0 are neighbors, fuel-levels f4 and f1 are neighbors, fuel-levels f4 and f2 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f4 are neighbors, location l0 is connected to location l1, space s0 neighbors space s1, space s1 neighbors space s0, space s2 neighbors space s0, space s2 neighbors space s1, spaces s0 and s2 are neighbors, spaces s1 and s2 are neighbors and there is a connection between locations l1 and l0?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "9a4c9ce9-d730-4264-8930-240f35d0f39a", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_21", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f4, fuel level f0 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f2, fuel-levels f0 and f3 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f5 and f4 are not neighbors, space s0 does not neighbour space s2, space s2 does not neighbour space s0, space s2 does not neighbour space s1 and spaces s1 and s0 are not neighbors?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "e6a773e1-8e20-44fb-acb2-13b4e5a30887", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_22", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f1 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f3, fuel level f2 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f4, fuel level f3 does not neighbour fuel level f5, fuel level f4 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f5, fuel level f5 does not neighbour fuel level f2, fuel-levels f0 and f1 are not neighbors, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f2 are not neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f5 and f4 are not neighbors, location l1 is not connected to location l0, space s1 does not neighbour space s0, space s1 does not neighbour space s2, space s2 does not neighbour space s1, spaces s0 and s1 are not neighbors, spaces s0 and s2 are not neighbors, spaces s2 and s0 are not neighbors and there is no connection between locations l0 and l1?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "57d1ec44-9592-499b-bdb9-a607551c6c00", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_23", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f3, fuel level f0 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f1, fuel level f2 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f5, fuel level f3 neighbors fuel level f4, fuel level f4 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f2 are not neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, space s0 does not neighbour space s2, spaces s0 and s1 are neighbors, spaces s1 and s0 are not neighbors, spaces s1 and s2 are neighbors, spaces s2 and s0 are not neighbors and spaces s2 and s1 are not neighbors?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "490e4dfa-b74b-47f4-9602-5354fb1fc26a", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_24", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 does not neighbour fuel level f5, fuel level f0 neighbors fuel level f1, fuel level f0 neighbors fuel level f2, fuel level f0 neighbors fuel level f4, fuel level f1 does not neighbour fuel level f0, fuel level f1 neighbors fuel level f3, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f4, fuel level f2 neighbors fuel level f1, fuel level f3 neighbors fuel level f0, fuel level f3 neighbors fuel level f4, fuel level f3 neighbors fuel level f5, fuel level f4 does not neighbour fuel level f3, fuel level f4 does not neighbour fuel level f5, fuel level f5 neighbors fuel level f1, fuel level f5 neighbors fuel level f2, fuel-levels f0 and f3 are not neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f1 and f5 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f2 and f5 are neighbors, fuel-levels f3 and f1 are neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f1 are neighbors, fuel-levels f4 and f2 are neighbors, fuel-levels f5 and f0 are neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f5 and f4 are neighbors, location l0 is connected to location l1, space s0 does not neighbour space s2, space s1 does not neighbour space s0, space s2 neighbors space s0, spaces s0 and s1 are not neighbors, spaces s1 and s2 are neighbors, spaces s2 and s1 are not neighbors and there is no connection between locations l1 and l0?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "e033bd62-e179-43a4-bf9c-f7a5032ad869", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_3_question_7", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state,. What are the self constraint properties of the state for c1? Write None if there are none", "answer": "cargo c1 is located in vehicle v0", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "e23e7256-98a5-4a5e-b6e3-7575493e73e3", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_3_question_8", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state,. What are the self constraint properties of the state for c4? Write None if there are none", "answer": "cargo c4 is not at location l1cargo c4 is not present at location l1 and vehicle v0 does not contain cargo c4", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "d94a3a92-55a6-4581-b033-7b49f1623075", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_3_question_9", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state,. What are the self constraint properties of the state for s0? Write None if there are none", "answer": "vehicle v0 has space s0", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "7305614c-c3df-4d92-a4ba-cd98171991db", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_3_question_10", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state,. What are the static properties of the state for f5? Write None if there are none", "answer": "fuel level f4 neighbors fuel level f5", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "41bad521-b67a-468b-a6f6-e533fe0ee547", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_3_question_11", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state,. What are the static properties of the state for f4? Write None if there are none", "answer": "fuel level f2 does not neighbour fuel level f4, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f4, fuel-levels f0 and f4 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f4 and f0 are not neighbors and fuel-levels f4 and f3 are not neighbors", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "d72578fc-b121-4989-ba9b-3fbae1a03069", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_3_question_12", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state,. What are the static properties of the state for f4? Write None if there are none", "answer": "fuel level f0 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f4, fuel level f4 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f4, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f1 are not neighbors and fuel-levels f4 and f5 are neighbors", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "628a0104-5c99-43f6-b165-3cc055ad06a2", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is it True or False that cargo c1 is present at location l0?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "fedbd97b-2d1a-4e96-b912-338c25e211ba", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is it True or False that cargo c3 is not at location l1cargo c3 is not present at location l1?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "37ec84ff-1be8-400a-bd95-a36f1cfae29e", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is it True or False that vehicle v0 does not contain space s2?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "5143dcb3-7e33-49c4-aefc-ad596bd52dd4", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_1_question_13", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, is it True or False that fuel-levels f4 and f5 are neighbors?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "047f340e-2c05-428b-b75d-5c42cc19d690", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_1_question_14", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, is it True or False that there is no connection between locations l1 and l0?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "2c557469-6538-47b8-95ea-5e7fc90a85af", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_1_question_15", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, is it True or False that fuel level f4 does not neighbour fuel level f3?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "a618fe95-0645-4d06-92e4-a249ecbd93d9", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is situated at location l1, cargo c1 is situated at location l0, cargo c2 is at location l1, cargo c3 is at location l1, cargo c4 is present at location l0, cargo c5 is located in vehicle v0, cargo c6 is in vehicle v0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is present at location l0, location l0 has a fuel-level of f2, location l1 has fuel f2 and vehicle v0 contains space s0?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "c4d86bfc-12ed-45f0-a05b-d9e1f5ecc24e", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is located in vehicle v0, cargo c0 is present at location l0, cargo c0 is situated at location l1, cargo c1 is located in vehicle v0, cargo c1 is present at location l0, cargo c1 is present at location l1, cargo c2 is present at location l0, cargo c2 is situated at location l1, cargo c3 is located in vehicle v0, cargo c3 is present at location l1, cargo c3 is situated at location l0, cargo c4 is at location l0, cargo c4 is situated at location l1, cargo c5 is situated at location l0, cargo c5 is situated at location l1, cargo c6 is at location l0, cargo c6 is present at location l1, cargo c7 is at location l1, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c8 is located in vehicle v0, cargo c8 is present at location l1, cargo c9 is present at location l1, cargo c9 is situated at location l0, cargo v0 is at location l0, cargo v0 is present at location l1, fuel f2 exists in location l1, fuel f3 exists in location l1, location l0 has a fuel-level of f1, location l0 has a fuel-level of f3, location l0 has fuel f0, location l0 has fuel f2, location l0 has fuel f4, location l0 has fuel f5, location l1 has a fuel-level of f4, location l1 has fuel f0, location l1 has fuel f1, location l1 has fuel f5, vehicle v0 contains cargo c2, vehicle v0 contains cargo c4, vehicle v0 contains cargo c5, vehicle v0 contains cargo c6, vehicle v0 contains cargo c7, vehicle v0 contains cargo c9, vehicle v0 contains space s0, vehicle v0 contains space s1 and vehicle v0 has space s2?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "2598bf3e-d53e-4656-b5b5-85f2683c1c1e", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is not in vehicle v0, cargo c0 is not situated at location l0, cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c3 is not situated at location l0, cargo c4 is not located in vehicle v0, cargo c4 is not situated at location l1, cargo c5 is not at location l0cargo c5 is not present at location l0, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c6 is not at location l1cargo c6 is not present at location l1, cargo c6 is not situated at location l0, cargo c7 is not at location l1cargo c7 is not present at location l1, cargo c7 is not located in vehicle v0, cargo c8 is not at location l1cargo c8 is not present at location l1, cargo c9 is not at location l1cargo c9 is not present at location l1, cargo v0 is not situated at location l1, fuel f1 does not exist in location l1, location l0 does not have a fuel-level of f0, location l0 does not have a fuel-level of f4, location l0 does not have fuel f1, location l0 does not have fuel f3, location l0 does not have fuel f5, location l1 does not have a fuel-level of f0, location l1 does not have a fuel-level of f5, location l1 does not have fuel f3, location l1 does not have fuel f4, vehicle v0 does not contain cargo c1, vehicle v0 does not contain cargo c2, vehicle v0 does not contain cargo c3, vehicle v0 does not contain cargo c8, vehicle v0 does not contain cargo c9, vehicle v0 does not have space s1 and vehicle v0 does not have space s2?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "e01de8c7-6eb6-4468-89df-84a278653a06", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c0 is not at location l1cargo c0 is not present at location l1, cargo c0 is not in vehicle v0, cargo c1 is not at location l0cargo c1 is not present at location l0, cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c1 is not in vehicle v0, cargo c2 is not located in vehicle v0, cargo c2 is not situated at location l0, cargo c2 is not situated at location l1, cargo c3 is not at location l0cargo c3 is not present at location l0, cargo c3 is not located in vehicle v0, cargo c3 is not situated at location l1, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c4 is not in vehicle v0, cargo c4 is not situated at location l0, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c5 is not located in vehicle v0, cargo c5 is not situated at location l0, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not at location l1cargo c6 is not present at location l1, cargo c7 is not at location l0cargo c7 is not present at location l0, cargo c7 is not located in vehicle v0, cargo c7 is not situated at location l1, cargo c8 is not at location l0cargo c8 is not present at location l0, cargo c8 is not situated at location l1, cargo c9 is not at location l0cargo c9 is not present at location l0, cargo c9 is not in vehicle v0, cargo c9 is not situated at location l1, cargo v0 is not at location l1cargo v0 is not present at location l1, cargo v0 is not situated at location l0, fuel f0 does not exist in location l1, fuel f1 does not exist in location l0, fuel f2 does not exist in location l0, fuel f3 does not exist in location l0, fuel f4 does not exist in location l0, fuel f4 does not exist in location l1, location l0 does not have a fuel-level of f0, location l0 does not have fuel f5, location l1 does not have a fuel-level of f1, location l1 does not have a fuel-level of f2, location l1 does not have fuel f3, location l1 does not have fuel f5, vehicle v0 does not contain cargo c6, vehicle v0 does not contain cargo c8, vehicle v0 does not have space s0, vehicle v0 does not have space s1 and vehicle v0 does not have space s2?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "eadbdbf9-2491-4bf7-9fff-f53f3bec4189", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c0 is present at location l1, cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c1 is not located in vehicle v0, cargo c1 is present at location l0, cargo c2 is at location l1, cargo c2 is not located in vehicle v0, cargo c2 is not situated at location l0, cargo c3 is not located in vehicle v0, cargo c3 is not situated at location l0, cargo c3 is present at location l1, cargo c4 is not in vehicle v0, cargo c4 is not situated at location l1, cargo c4 is present at location l0, cargo c5 is not at location l0cargo c5 is not present at location l0, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not situated at location l1, cargo c7 is at location l0, cargo c7 is not situated at location l1, cargo c8 is not located in vehicle v0, cargo c8 is not situated at location l1, cargo c8 is present at location l0, cargo c9 is not at location l1cargo c9 is not present at location l1, cargo c9 is not located in vehicle v0, cargo c9 is situated at location l0, cargo v0 is not situated at location l1, cargo v0 is situated at location l0, fuel f0 does not exist in location l0, fuel f0 does not exist in location l1, fuel f2 exists in location l0, fuel f3 does not exist in location l0, fuel f4 does not exist in location l0, fuel f5 does not exist in location l0, location l0 does not have a fuel-level of f1, location l1 does not have a fuel-level of f1, location l1 does not have a fuel-level of f4, location l1 does not have a fuel-level of f5, location l1 does not have fuel f3, location l1 has fuel f2, vehicle v0 contains cargo c5, vehicle v0 contains cargo c6, vehicle v0 contains space s0, vehicle v0 does not contain cargo c0, vehicle v0 does not contain cargo c7, vehicle v0 does not have space s1 and vehicle v0 does not have space s2?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "e7b55dec-e1ad-430c-9478-9f6a91547d17", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is present at location l0, cargo c0 is present at location l1, cargo c1 is not at location l0cargo c1 is not present at location l0, cargo c1 is not located in vehicle v0, cargo c1 is not situated at location l1, cargo c2 is at location l1, cargo c2 is in vehicle v0, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c3 is at location l1, cargo c3 is present at location l0, cargo c4 is not situated at location l0, cargo c4 is present at location l1, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c5 is not in vehicle v0, cargo c5 is not situated at location l0, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not situated at location l1, cargo c7 is not located in vehicle v0, cargo c7 is not situated at location l0, cargo c7 is situated at location l1, cargo c8 is situated at location l0, cargo c8 is situated at location l1, cargo c9 is not situated at location l0, cargo c9 is present at location l1, cargo v0 is present at location l0, cargo v0 is present at location l1, fuel f1 does not exist in location l1, fuel f2 does not exist in location l0, fuel f3 does not exist in location l0, fuel f4 exists in location l0, fuel f5 exists in location l0, location l0 does not have fuel f0, location l0 has fuel f1, location l1 does not have fuel f3, location l1 has a fuel-level of f2, location l1 has fuel f0, location l1 has fuel f4, location l1 has fuel f5, vehicle v0 contains cargo c0, vehicle v0 contains cargo c9, vehicle v0 does not contain cargo c3, vehicle v0 does not contain cargo c4, vehicle v0 does not contain cargo c6, vehicle v0 does not contain cargo c8, vehicle v0 does not have space s1, vehicle v0 does not have space s2 and vehicle v0 has space s0?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "c017c472-224a-4d24-a35c-dac408b0d1f5", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_19", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, spaces s0 and s1 are neighbors and spaces s1 and s2 are neighbors?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "cb352ef8-3e1d-475c-ab05-76a538fb4d59", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_20", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 neighbors fuel level f1, fuel level f0 neighbors fuel level f4, fuel level f0 neighbors fuel level f5, fuel level f1 neighbors fuel level f0, fuel level f1 neighbors fuel level f3, fuel level f1 neighbors fuel level f4, fuel level f2 neighbors fuel level f1, fuel level f2 neighbors fuel level f4, fuel level f3 neighbors fuel level f0, fuel level f3 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f3 neighbors fuel level f5, fuel level f4 neighbors fuel level f1, fuel level f4 neighbors fuel level f2, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f0, fuel level f5 neighbors fuel level f1, fuel level f5 neighbors fuel level f3, fuel level f5 neighbors fuel level f4, fuel-levels f0 and f2 are neighbors, fuel-levels f0 and f3 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f1 and f5 are neighbors, fuel-levels f2 and f0 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f2 and f5 are neighbors, fuel-levels f3 and f1 are neighbors, fuel-levels f4 and f0 are neighbors, fuel-levels f4 and f3 are neighbors, fuel-levels f5 and f2 are neighbors, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, space s0 neighbors space s2, space s1 neighbors space s2, spaces s1 and s0 are neighbors, spaces s2 and s0 are neighbors and spaces s2 and s1 are neighbors?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "460b255b-bbb0-478c-987a-5f157768d98f", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_21", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 does not neighbour fuel level f3, fuel level f0 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f1, fuel level f2 does not neighbour fuel level f4, fuel level f3 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f0, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f5 and f4 are not neighbors, spaces s0 and s2 are not neighbors, spaces s1 and s0 are not neighbors, spaces s2 and s0 are not neighbors and spaces s2 and s1 are not neighbors?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "fc0ef92f-7710-435f-83cb-eafbc6f901c6", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_22", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 does not neighbour fuel level f1, fuel level f0 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f2, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f3, fuel level f2 does not neighbour fuel level f4, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f5, fuel level f4 does not neighbour fuel level f5, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f3, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f3 and f4 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f4 are not neighbors, location l0 and location l1 are not connected, location l1 and location l0 are not connected, space s1 does not neighbour space s0, space s1 does not neighbour space s2, spaces s0 and s1 are not neighbors, spaces s0 and s2 are not neighbors, spaces s2 and s0 are not neighbors and spaces s2 and s1 are not neighbors?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "b7223643-f161-4aa2-adc1-1efeabe04d88", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_23", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 does not neighbour fuel level f3, fuel level f0 does not neighbour fuel level f5, fuel level f0 neighbors fuel level f1, fuel level f1 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f1, fuel level f2 does not neighbour fuel level f5, fuel level f2 neighbors fuel level f3, fuel level f3 neighbors fuel level f4, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f3, fuel level f4 neighbors fuel level f5, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f4, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f5 and f2 are not neighbors, location l0 and location l1 are connected, space s0 does not neighbour space s2, space s1 does not neighbour space s0, space s1 neighbors space s2, space s2 does not neighbour space s1, spaces s0 and s1 are neighbors, spaces s2 and s0 are not neighbors and there is a connection between locations l1 and l0?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "cd057c26-22ee-4734-b03b-3af73bb1c378", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_24", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 does not neighbour fuel level f1, fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f5, fuel level f1 neighbors fuel level f3, fuel level f2 does not neighbour fuel level f3, fuel level f2 neighbors fuel level f1, fuel level f2 neighbors fuel level f5, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f2, fuel level f3 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f0, fuel level f4 neighbors fuel level f1, fuel level f4 neighbors fuel level f2, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f4, fuel level f5 neighbors fuel level f0, fuel level f5 neighbors fuel level f1, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f2 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f2 and f0 are neighbors, fuel-levels f2 and f4 are neighbors, fuel-levels f3 and f5 are neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f4 and f5 are neighbors, location l1 is not connected to location l0, space s0 does not neighbour space s2, space s1 neighbors space s0, spaces s0 and s1 are not neighbors, spaces s1 and s2 are neighbors, spaces s2 and s0 are neighbors, spaces s2 and s1 are not neighbors and there is a connection between locations l0 and l1?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "c63b47a2-08b1-4683-824d-331503bfebb5", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_3_question_7", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state,. What are the self constraint properties of the state for c9? Write None if there are none", "answer": "cargo c9 is situated at location l0", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "489f2e2f-e84b-4fd4-9842-f74322c8c82f", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_3_question_8", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state,. What are the self constraint properties of the state for c8? Write None if there are none", "answer": "cargo c8 is not at location l1cargo c8 is not present at location l1 and cargo c8 is not located in vehicle v0", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "c44c80e9-02c2-48fe-b2e5-dca2dd44e739", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_3_question_9", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state,. What are the self constraint properties of the state for c0? Write None if there are none", "answer": "cargo c0 is at location l1, cargo c0 is not located in vehicle v0 and cargo c0 is not situated at location l0", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "b4aa375a-d8de-41e8-ac2a-9a44ab06a9b2", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_3_question_10", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state,. What are the static properties of the state for f5? Write None if there are none", "answer": "fuel-levels f4 and f5 are neighbors", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "b04e1894-215b-4b28-b70a-0896cbb05d19", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_3_question_11", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state,. What are the static properties of the state for s2? Write None if there are none", "answer": "space s0 does not neighbour space s2, spaces s2 and s0 are not neighbors and spaces s2 and s1 are not neighbors", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "31f99d0a-1fa6-4b7d-b136-a09361ff3ba0", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_3_question_12", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state,. What are the static properties of the state for l1? Write None if there are none", "answer": "location l1 is connected to location l0 and there is a connection between locations l0 and l1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "6cf2b78f-09ed-4e97-9f0a-c35b6c9b9f66", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, is it True or False that cargo c4 is at location l0?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "6da45272-24ed-48fe-9e10-b63d98c066be", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, is it True or False that cargo c0 is not at location l1cargo c0 is not present at location l1?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "1e09279d-6cc9-4dbe-a35f-37d4a47675f3", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, is it True or False that location l1 does not have fuel f2?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "300306c5-6552-43b7-bc1d-0510e96251d8", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_1_question_13", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, is it True or False that there is a connection between locations l1 and l0?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "7c945748-9c4f-4783-96ac-3f1d6bd61ff7", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_1_question_14", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, is it True or False that space s0 does not neighbour space s1?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "f76581f0-0805-45ec-8cee-7fde8c128201", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_1_question_15", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, is it True or False that fuel level f3 does not neighbour fuel level f0?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "88004c6d-52f3-4dcd-9368-e0d76368843f", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is situated at location l1, cargo c1 is at location l0, cargo c2 is at location l1, cargo c4 is situated at location l0, cargo c5 is at location l1, cargo c6 is present at location l1, cargo c7 is at location l0, cargo c8 is situated at location l0, cargo c9 is present at location l0, cargo v0 is present at location l0, location l0 has fuel f1, location l1 has fuel f1, vehicle v0 contains cargo c3 and vehicle v0 has space s1?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "081847a9-e6c1-4608-b048-d1f64d2cf11d", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is at location l0, cargo c0 is located in vehicle v0, cargo c0 is present at location l1, cargo c1 is located in vehicle v0, cargo c1 is situated at location l0, cargo c1 is situated at location l1, cargo c2 is in vehicle v0, cargo c2 is situated at location l0, cargo c2 is situated at location l1, cargo c3 is at location l1, cargo c3 is in vehicle v0, cargo c3 is present at location l0, cargo c4 is located in vehicle v0, cargo c4 is present at location l0, cargo c4 is present at location l1, cargo c5 is located in vehicle v0, cargo c5 is present at location l0, cargo c5 is situated at location l1, cargo c6 is at location l0, cargo c6 is at location l1, cargo c6 is in vehicle v0, cargo c7 is at location l1, cargo c7 is located in vehicle v0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c8 is situated at location l1, cargo c9 is at location l1, cargo c9 is located in vehicle v0, cargo c9 is present at location l0, cargo v0 is present at location l0, cargo v0 is present at location l1, fuel f0 exists in location l0, fuel f2 exists in location l0, location l0 has fuel f1, location l0 has fuel f3, location l0 has fuel f4, location l0 has fuel f5, location l1 has a fuel-level of f2, location l1 has a fuel-level of f5, location l1 has fuel f0, location l1 has fuel f1, location l1 has fuel f3, location l1 has fuel f4, vehicle v0 contains cargo c8, vehicle v0 contains space s1, vehicle v0 contains space s2 and vehicle v0 has space s0?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "96cb0ede-2f47-4df7-9f67-962527a395ad", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c1 is not in vehicle v0, cargo c1 is not situated at location l1, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c2 is not in vehicle v0, cargo c3 is not at location l0cargo c3 is not present at location l0, cargo c3 is not situated at location l1, cargo c4 is not in vehicle v0, cargo c4 is not situated at location l1, cargo c5 is not at location l0cargo c5 is not present at location l0, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not located in vehicle v0, cargo c7 is not situated at location l1, cargo c8 is not situated at location l1, cargo c9 is not in vehicle v0, cargo c9 is not situated at location l1, cargo v0 is not situated at location l1, location l0 does not have a fuel-level of f0, location l0 does not have a fuel-level of f2, location l0 does not have a fuel-level of f3, location l0 does not have a fuel-level of f4, location l0 does not have a fuel-level of f5, location l1 does not have a fuel-level of f0, location l1 does not have a fuel-level of f4, location l1 does not have fuel f2, location l1 does not have fuel f3, location l1 does not have fuel f5, vehicle v0 does not contain cargo c0, vehicle v0 does not contain cargo c5, vehicle v0 does not contain cargo c7, vehicle v0 does not contain cargo c8, vehicle v0 does not contain space s0 and vehicle v0 does not contain space s2?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "8aa59b23-e238-40ec-a11a-c8075e50267b", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c0 is not at location l1cargo c0 is not present at location l1, cargo c0 is not located in vehicle v0, cargo c1 is not located in vehicle v0, cargo c1 is not situated at location l0, cargo c1 is not situated at location l1, cargo c2 is not located in vehicle v0, cargo c2 is not situated at location l0, cargo c2 is not situated at location l1, cargo c3 is not at location l1cargo c3 is not present at location l1, cargo c3 is not located in vehicle v0, cargo c3 is not situated at location l0, cargo c4 is not at location l0cargo c4 is not present at location l0, cargo c4 is not in vehicle v0, cargo c4 is not situated at location l1, cargo c5 is not at location l0cargo c5 is not present at location l0, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not at location l1cargo c6 is not present at location l1, cargo c7 is not at location l1cargo c7 is not present at location l1, cargo c7 is not situated at location l0, cargo c8 is not in vehicle v0, cargo c8 is not situated at location l0, cargo c8 is not situated at location l1, cargo c9 is not situated at location l0, cargo c9 is not situated at location l1, cargo v0 is not at location l0cargo v0 is not present at location l0, cargo v0 is not at location l1cargo v0 is not present at location l1, fuel f2 does not exist in location l0, fuel f4 does not exist in location l0, fuel f5 does not exist in location l0, location l0 does not have fuel f0, location l0 does not have fuel f1, location l0 does not have fuel f3, location l1 does not have a fuel-level of f0, location l1 does not have a fuel-level of f3, location l1 does not have fuel f1, location l1 does not have fuel f2, location l1 does not have fuel f4, location l1 does not have fuel f5, vehicle v0 does not contain cargo c5, vehicle v0 does not contain cargo c6, vehicle v0 does not contain cargo c7, vehicle v0 does not contain cargo c9, vehicle v0 does not contain space s0, vehicle v0 does not have space s1 and vehicle v0 does not have space s2?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "adfe4a86-d3ce-4dee-8895-5cb093be72ab", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c0 is situated at location l1, cargo c1 is not in vehicle v0, cargo c1 is not situated at location l1, cargo c1 is situated at location l0, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c2 is not located in vehicle v0, cargo c2 is situated at location l1, cargo c3 is in vehicle v0, cargo c3 is not situated at location l0, cargo c3 is not situated at location l1, cargo c4 is at location l0, cargo c4 is not located in vehicle v0, cargo c4 is not situated at location l1, cargo c5 is not located in vehicle v0, cargo c5 is not situated at location l0, cargo c5 is situated at location l1, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not in vehicle v0, cargo c6 is present at location l1, cargo c7 is not at location l1cargo c7 is not present at location l1, cargo c7 is situated at location l0, cargo c8 is at location l0, cargo c8 is not situated at location l1, cargo c9 is not in vehicle v0, cargo c9 is not situated at location l1, cargo c9 is present at location l0, cargo v0 is not at location l1cargo v0 is not present at location l1, cargo v0 is situated at location l0, fuel f0 does not exist in location l1, fuel f3 does not exist in location l1, fuel f4 does not exist in location l0, fuel f5 does not exist in location l0, fuel f5 does not exist in location l1, location l0 does not have a fuel-level of f2, location l0 does not have fuel f0, location l0 does not have fuel f3, location l0 has a fuel-level of f1, location l1 does not have a fuel-level of f2, location l1 does not have fuel f4, location l1 has fuel f1, vehicle v0 does not contain cargo c0, vehicle v0 does not contain cargo c7, vehicle v0 does not contain cargo c8, vehicle v0 does not contain space s2, vehicle v0 does not have space s0 and vehicle v0 has space s1?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "f0724314-1258-49b4-9eae-04aad26b221d", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is at location l0, cargo c0 is at location l1, cargo c1 is not at location l0cargo c1 is not present at location l0, cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c1 is not in vehicle v0, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c2 is not in vehicle v0, cargo c2 is situated at location l1, cargo c3 is located in vehicle v0, cargo c3 is not situated at location l0, cargo c3 is not situated at location l1, cargo c4 is at location l1, cargo c4 is located in vehicle v0, cargo c4 is not at location l0cargo c4 is not present at location l0, cargo c5 is located in vehicle v0, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c5 is not situated at location l0, cargo c6 is located in vehicle v0, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not situated at location l1, cargo c7 is at location l1, cargo c7 is not located in vehicle v0, cargo c7 is situated at location l0, cargo c8 is at location l1, cargo c8 is not located in vehicle v0, cargo c8 is situated at location l0, cargo c9 is in vehicle v0, cargo c9 is not situated at location l1, cargo c9 is present at location l0, cargo v0 is not situated at location l0, cargo v0 is present at location l1, fuel f0 does not exist in location l1, fuel f1 exists in location l1, fuel f2 exists in location l1, location l0 does not have a fuel-level of f3, location l0 does not have fuel f1, location l0 does not have fuel f2, location l0 has a fuel-level of f0, location l0 has a fuel-level of f4, location l0 has fuel f5, location l1 does not have fuel f4, location l1 has a fuel-level of f3, location l1 has fuel f5, vehicle v0 contains space s0, vehicle v0 does not contain cargo c0, vehicle v0 has space s1 and vehicle v0 has space s2?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "bc502f59-6d0f-417e-963e-6f03f03bd905", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_19", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 neighbors fuel level f1, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l1 is connected to location l0, space s0 neighbors space s1, space s1 neighbors space s2 and there is a connection between locations l0 and l1?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "b97e9511-d1f7-4c80-bae2-1babba1823b6", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_20", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 neighbors fuel level f1, fuel level f0 neighbors fuel level f5, fuel level f1 neighbors fuel level f0, fuel level f1 neighbors fuel level f3, fuel level f1 neighbors fuel level f4, fuel level f2 neighbors fuel level f0, fuel level f2 neighbors fuel level f3, fuel level f2 neighbors fuel level f4, fuel level f2 neighbors fuel level f5, fuel level f3 neighbors fuel level f5, fuel level f4 neighbors fuel level f2, fuel level f4 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f1, fuel level f5 neighbors fuel level f3, fuel level f5 neighbors fuel level f4, fuel-levels f0 and f2 are neighbors, fuel-levels f0 and f3 are neighbors, fuel-levels f0 and f4 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f1 and f5 are neighbors, fuel-levels f2 and f1 are neighbors, fuel-levels f3 and f0 are neighbors, fuel-levels f3 and f1 are neighbors, fuel-levels f3 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f0 are neighbors, fuel-levels f4 and f1 are neighbors, fuel-levels f5 and f0 are neighbors, fuel-levels f5 and f2 are neighbors, location l0 is connected to location l1, space s0 neighbors space s2, space s2 neighbors space s0, spaces s0 and s1 are neighbors, spaces s1 and s0 are neighbors, spaces s1 and s2 are neighbors, spaces s2 and s1 are neighbors and there is a connection between locations l1 and l0?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "6f3bc10f-fbdb-4b52-accc-637a8abce07d", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_21", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f4, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f3 are not neighbors, space s0 does not neighbour space s2, space s1 does not neighbour space s0, space s2 does not neighbour space s0 and space s2 does not neighbour space s1?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "7315fb95-23ab-418d-92b2-7a30b5232ec5", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_22", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 does not neighbour fuel level f4, fuel level f0 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f2, fuel level f1 does not neighbour fuel level f3, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f1, fuel level f2 does not neighbour fuel level f3, fuel level f2 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f4, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f5, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f4, fuel-levels f0 and f1 are not neighbors, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f3 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f3 are not neighbors, location l0 and location l1 are not connected, location l1 is not connected to location l0, space s0 does not neighbour space s2, spaces s0 and s1 are not neighbors, spaces s1 and s0 are not neighbors, spaces s1 and s2 are not neighbors, spaces s2 and s0 are not neighbors and spaces s2 and s1 are not neighbors?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "975b242d-9661-4630-af10-1de979bb7c8b", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_23", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f4, fuel level f0 does not neighbour fuel level f5, fuel level f0 neighbors fuel level f1, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f1, fuel level f2 does not neighbour fuel level f4, fuel level f2 neighbors fuel level f3, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f4, fuel-levels f0 and f3 are not neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f5 and f3 are not neighbors, location l0 is connected to location l1, space s0 neighbors space s1, space s1 does not neighbour space s0, space s2 does not neighbour space s0, spaces s0 and s2 are not neighbors, spaces s1 and s2 are neighbors, spaces s2 and s1 are not neighbors and there is a connection between locations l1 and l0?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "3ce4f0a6-e79d-4b3f-a6b2-2311ab604a12", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_24", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 does not neighbour fuel level f5, fuel level f0 neighbors fuel level f3, fuel level f0 neighbors fuel level f4, fuel level f1 does not neighbour fuel level f5, fuel level f1 neighbors fuel level f2, fuel level f1 neighbors fuel level f3, fuel level f2 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f5, fuel level f2 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel level f3 neighbors fuel level f5, fuel level f4 neighbors fuel level f1, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f4, fuel level f5 neighbors fuel level f2, fuel-levels f0 and f1 are not neighbors, fuel-levels f0 and f2 are neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f4 are neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f0 are neighbors, fuel-levels f3 and f1 are neighbors, fuel-levels f3 and f2 are neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f3 are neighbors, location l0 is not connected to location l1, location l1 is not connected to location l0, space s1 neighbors space s2, space s2 does not neighbour space s1, spaces s0 and s1 are neighbors, spaces s0 and s2 are neighbors, spaces s1 and s0 are neighbors and spaces s2 and s0 are not neighbors?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "f5c7fd30-f0d5-4634-a9ff-c85c4964dc76", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_3_question_7", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state,. What are the self constraint properties of the state for f2? Write None if there are none", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "4ac66896-55cd-44ec-afea-39bf80824467", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_3_question_8", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state,. What are the self constraint properties of the state for f5? Write None if there are none", "answer": "location l0 does not have a fuel-level of f5 and location l1 does not have a fuel-level of f5", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "620a238b-f448-4a5b-83bb-0e4046570c70", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_3_question_9", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state,. What are the self constraint properties of the state for c6? Write None if there are none", "answer": "cargo c6 is not situated at location l0, cargo c6 is situated at location l1 and vehicle v0 does not contain cargo c6", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "3b5ca843-c2a5-42b9-8143-08b7b6f0ffe8", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_3_question_10", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state,. What are the static properties of the state for l1? Write None if there are none", "answer": "location l0 and location l1 are connected and location l1 and location l0 are connected", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "571d5383-ee1c-420a-8912-6cc170d1ad88", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_3_question_11", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state,. What are the static properties of the state for f2? Write None if there are none", "answer": "fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f1, fuel level f2 does not neighbour fuel level f5, fuel level f4 does not neighbour fuel level f2, fuel-levels f0 and f2 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f3 and f2 are not neighbors and fuel-levels f5 and f2 are not neighbors", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "7950cebc-d543-413d-b85d-8e694e15d3f4", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_3_question_12", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state,. What are the static properties of the state for s1? Write None if there are none", "answer": "space s1 neighbors space s2, spaces s0 and s1 are neighbors, spaces s1 and s0 are not neighbors and spaces s2 and s1 are not neighbors", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "91d52fcd-394b-4b76-83d7-281e45b0310e", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, is it True or False that cargo c0 is situated at location l1?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "53f83050-e66b-4fdc-8763-f10942d447b5", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, is it True or False that cargo c6 is not at location l1cargo c6 is not present at location l1?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "7e2b2d65-6911-4b1a-9331-5c1b0a735dd8", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, is it True or False that cargo c4 is not situated at location l1?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "77333522-80f1-4f0d-bcbd-040eedde6474", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_1_question_13", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, is it True or False that fuel level f1 neighbors fuel level f2?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "3f15ad31-4a4c-4d19-b70a-7aad507bb21f", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_1_question_14", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, is it True or False that fuel-levels f2 and f3 are not neighbors?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "4014101d-0d17-46f8-9923-57a40bc09663", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_1_question_15", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, is it True or False that fuel level f5 does not neighbour fuel level f4?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "28fcedcd-8e6c-4284-9c4e-f8efecde6c99", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is situated at location l1, cargo c1 is situated at location l0, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is present at location l0, cargo c5 is at location l1, cargo c6 is situated at location l1, cargo c7 is located in vehicle v0, cargo c9 is situated at location l0, cargo v0 is situated at location l1, fuel f0 exists in location l0, location l1 has a fuel-level of f1, vehicle v0 contains cargo c8 and vehicle v0 has space s0?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "506eca55-4322-42d2-af79-e6e89cbbbf01", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is in vehicle v0, cargo c0 is present at location l0, cargo c0 is present at location l1, cargo c1 is situated at location l0, cargo c1 is situated at location l1, cargo c2 is in vehicle v0, cargo c2 is present at location l1, cargo c2 is situated at location l0, cargo c3 is in vehicle v0, cargo c3 is present at location l0, cargo c3 is situated at location l1, cargo c4 is in vehicle v0, cargo c4 is present at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c5 is situated at location l1, cargo c6 is at location l1, cargo c6 is situated at location l0, cargo c7 is at location l1, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c8 is present at location l1, cargo c9 is at location l1, cargo c9 is present at location l0, cargo v0 is at location l1, cargo v0 is situated at location l0, fuel f0 exists in location l1, fuel f1 exists in location l0, fuel f1 exists in location l1, fuel f2 exists in location l0, fuel f2 exists in location l1, fuel f4 exists in location l0, fuel f5 exists in location l1, location l0 has a fuel-level of f0, location l0 has a fuel-level of f3, location l0 has a fuel-level of f5, location l1 has a fuel-level of f4, location l1 has fuel f3, vehicle v0 contains cargo c1, vehicle v0 contains cargo c5, vehicle v0 contains cargo c6, vehicle v0 contains cargo c7, vehicle v0 contains cargo c8, vehicle v0 contains cargo c9, vehicle v0 contains space s0, vehicle v0 has space s1 and vehicle v0 has space s2?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "d856b88e-8c5b-422b-a1bf-0d08069eb7e6", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c0 is not located in vehicle v0, cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c2 is not in vehicle v0, cargo c2 is not situated at location l0, cargo c3 is not located in vehicle v0, cargo c3 is not situated at location l1, cargo c4 is not situated at location l1, cargo c5 is not at location l0cargo c5 is not present at location l0, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not in vehicle v0, cargo c7 is not at location l0cargo c7 is not present at location l0, cargo c7 is not situated at location l1, cargo c8 is not situated at location l0, cargo c8 is not situated at location l1, cargo c9 is not located in vehicle v0, cargo c9 is not situated at location l1, cargo v0 is not at location l0cargo v0 is not present at location l0, fuel f4 does not exist in location l0, fuel f5 does not exist in location l0, location l0 does not have a fuel-level of f1, location l0 does not have a fuel-level of f3, location l0 does not have fuel f2, location l1 does not have a fuel-level of f0, location l1 does not have a fuel-level of f4, location l1 does not have a fuel-level of f5, location l1 does not have fuel f2, location l1 does not have fuel f3, vehicle v0 does not contain cargo c1, vehicle v0 does not contain cargo c4, vehicle v0 does not contain cargo c5, vehicle v0 does not contain space s1 and vehicle v0 does not have space s2?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "b2cefc70-7c3e-4ba5-8679-cd152bd87b01", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is not at location l1cargo c0 is not present at location l1, cargo c0 is not situated at location l0, cargo c1 is not situated at location l0, cargo c1 is not situated at location l1, cargo c2 is not at location l1cargo c2 is not present at location l1, cargo c2 is not located in vehicle v0, cargo c2 is not situated at location l0, cargo c3 is not situated at location l0, cargo c3 is not situated at location l1, cargo c4 is not at location l0cargo c4 is not present at location l0, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c4 is not located in vehicle v0, cargo c5 is not at location l0cargo c5 is not present at location l0, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c5 is not in vehicle v0, cargo c6 is not situated at location l0, cargo c6 is not situated at location l1, cargo c7 is not situated at location l0, cargo c7 is not situated at location l1, cargo c8 is not at location l0cargo c8 is not present at location l0, cargo c8 is not situated at location l1, cargo c9 is not at location l1cargo c9 is not present at location l1, cargo c9 is not situated at location l0, cargo v0 is not at location l0cargo v0 is not present at location l0, cargo v0 is not at location l1cargo v0 is not present at location l1, fuel f1 does not exist in location l0, fuel f3 does not exist in location l1, fuel f4 does not exist in location l0, location l0 does not have a fuel-level of f3, location l0 does not have fuel f0, location l0 does not have fuel f2, location l0 does not have fuel f5, location l1 does not have a fuel-level of f0, location l1 does not have a fuel-level of f1, location l1 does not have a fuel-level of f5, location l1 does not have fuel f2, location l1 does not have fuel f4, vehicle v0 does not contain cargo c0, vehicle v0 does not contain cargo c1, vehicle v0 does not contain cargo c3, vehicle v0 does not contain cargo c6, vehicle v0 does not contain cargo c7, vehicle v0 does not contain cargo c8, vehicle v0 does not contain cargo c9, vehicle v0 does not have space s0, vehicle v0 does not have space s1 and vehicle v0 does not have space s2?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "99000c86-b204-4044-ba8a-fbbfd284cd2d", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is at location l1, cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c0 is not located in vehicle v0, cargo c1 is not situated at location l1, cargo c1 is present at location l0, cargo c2 is at location l1, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c2 is not in vehicle v0, cargo c3 is not located in vehicle v0, cargo c3 is not situated at location l1, cargo c3 is situated at location l0, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c4 is not located in vehicle v0, cargo c4 is situated at location l0, cargo c5 is not in vehicle v0, cargo c5 is not situated at location l0, cargo c5 is present at location l1, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not in vehicle v0, cargo c6 is present at location l1, cargo c7 is located in vehicle v0, cargo c7 is not situated at location l0, cargo c7 is not situated at location l1, cargo c8 is in vehicle v0, cargo c8 is not situated at location l0, cargo c8 is not situated at location l1, cargo c9 is not located in vehicle v0, cargo c9 is not situated at location l1, cargo c9 is present at location l0, cargo v0 is not at location l0cargo v0 is not present at location l0, cargo v0 is present at location l1, fuel f1 does not exist in location l0, fuel f2 does not exist in location l1, location l0 does not have a fuel-level of f2, location l0 does not have a fuel-level of f4, location l0 does not have fuel f3, location l0 does not have fuel f5, location l0 has fuel f0, location l1 does not have a fuel-level of f0, location l1 does not have a fuel-level of f4, location l1 does not have fuel f3, location l1 does not have fuel f5, location l1 has fuel f1, vehicle v0 contains space s0, vehicle v0 does not contain cargo c1, vehicle v0 does not contain space s1 and vehicle v0 does not contain space s2?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "15250140-f766-48f9-811f-347ad8b1037e", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is at location l1, cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c1 is at location l1, cargo c1 is not at location l0cargo c1 is not present at location l0, cargo c2 is at location l1, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c2 is not in vehicle v0, cargo c3 is located in vehicle v0, cargo c3 is present at location l0, cargo c3 is situated at location l1, cargo c4 is at location l1, cargo c4 is located in vehicle v0, cargo c4 is situated at location l0, cargo c5 is in vehicle v0, cargo c5 is not at location l0cargo c5 is not present at location l0, cargo c5 is present at location l1, cargo c6 is at location l1, cargo c6 is not located in vehicle v0, cargo c6 is situated at location l0, cargo c7 is located in vehicle v0, cargo c7 is not at location l1cargo c7 is not present at location l1, cargo c7 is situated at location l0, cargo c8 is not located in vehicle v0, cargo c8 is not situated at location l0, cargo c8 is present at location l1, cargo c9 is not at location l1cargo c9 is not present at location l1, cargo c9 is not located in vehicle v0, cargo c9 is situated at location l0, cargo v0 is not at location l0cargo v0 is not present at location l0, cargo v0 is not at location l1cargo v0 is not present at location l1, fuel f1 does not exist in location l1, fuel f2 exists in location l1, fuel f3 does not exist in location l1, fuel f4 exists in location l0, location l0 does not have a fuel-level of f1, location l0 has a fuel-level of f0, location l0 has a fuel-level of f2, location l0 has fuel f3, location l0 has fuel f5, location l1 does not have a fuel-level of f4, location l1 does not have a fuel-level of f5, location l1 has a fuel-level of f0, vehicle v0 contains cargo c0, vehicle v0 contains cargo c1, vehicle v0 contains space s1, vehicle v0 has space s0 and vehicle v0 has space s2?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "62af6eb2-7583-4638-924a-5d05b2ad536a", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_19", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, location l1 and location l0 are connected, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors and there is a connection between locations l0 and l1?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "51e89071-6757-479d-a6a0-b7670d9d5656", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_20", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 neighbors fuel level f1, fuel level f0 neighbors fuel level f3, fuel level f0 neighbors fuel level f4, fuel level f0 neighbors fuel level f5, fuel level f1 neighbors fuel level f0, fuel level f1 neighbors fuel level f2, fuel level f1 neighbors fuel level f4, fuel level f2 neighbors fuel level f0, fuel level f2 neighbors fuel level f4, fuel level f2 neighbors fuel level f5, fuel level f3 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f0, fuel level f4 neighbors fuel level f1, fuel level f4 neighbors fuel level f2, fuel level f4 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f0, fuel level f5 neighbors fuel level f1, fuel-levels f0 and f2 are neighbors, fuel-levels f1 and f3 are neighbors, fuel-levels f1 and f5 are neighbors, fuel-levels f2 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f0 are neighbors, fuel-levels f3 and f1 are neighbors, fuel-levels f3 and f5 are neighbors, fuel-levels f5 and f2 are neighbors, fuel-levels f5 and f3 are neighbors, fuel-levels f5 and f4 are neighbors, location l0 and location l1 are connected, space s0 neighbors space s1, space s0 neighbors space s2, space s1 neighbors space s2, space s2 neighbors space s1, spaces s1 and s0 are neighbors, spaces s2 and s0 are neighbors and there is a connection between locations l1 and l0?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "cecc1f38-e13a-4188-b6d3-942bddbd4902", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_21", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f4, fuel level f0 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f3, fuel-levels f0 and f3 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f4 are not neighbors, space s1 does not neighbour space s0, space s2 does not neighbour space s0, spaces s0 and s2 are not neighbors and spaces s2 and s1 are not neighbors?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "a06f4bd2-9800-4e7f-9d4c-1f189e83aaf6", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_22", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f2, fuel level f2 does not neighbour fuel level f1, fuel level f2 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f4, fuel level f4 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f4, fuel-levels f0 and f1 are not neighbors, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f3 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f4 and f5 are not neighbors, fuel-levels f5 and f3 are not neighbors, location l1 is not connected to location l0, space s1 does not neighbour space s0, space s1 does not neighbour space s2, spaces s0 and s1 are not neighbors, spaces s0 and s2 are not neighbors, spaces s2 and s0 are not neighbors, spaces s2 and s1 are not neighbors and there is no connection between locations l0 and l1?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "42762469-501d-40d4-b01f-ec1e696201cb", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_23", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 does not neighbour fuel level f3, fuel level f0 does not neighbour fuel level f4, fuel level f0 does not neighbour fuel level f5, fuel level f0 neighbors fuel level f1, fuel level f1 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f1, fuel level f2 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f5, fuel level f3 neighbors fuel level f4, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f4, fuel-levels f0 and f2 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f5 and f0 are not neighbors, location l0 is connected to location l1, location l1 is connected to location l0, space s0 does not neighbour space s2, space s0 neighbors space s1, space s1 does not neighbour space s0, space s1 neighbors space s2, spaces s2 and s0 are not neighbors and spaces s2 and s1 are not neighbors?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "0a45e151-8ab8-4f16-93d6-2bb45c09bba5", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_2_question_24", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 does not neighbour fuel level f1, fuel level f0 neighbors fuel level f2, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f2, fuel level f1 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f3, fuel level f2 neighbors fuel level f5, fuel level f3 does not neighbour fuel level f1, fuel level f3 neighbors fuel level f0, fuel level f4 neighbors fuel level f1, fuel level f4 neighbors fuel level f2, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f3, fuel level f5 neighbors fuel level f4, fuel-levels f0 and f3 are neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f3 and f2 are neighbors, fuel-levels f3 and f4 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f4 and f0 are neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f4 and f5 are not neighbors, fuel-levels f5 and f0 are not neighbors, location l0 and location l1 are connected, location l1 is not connected to location l0, space s1 does not neighbour space s0, space s1 does not neighbour space s2, spaces s0 and s1 are not neighbors, spaces s0 and s2 are not neighbors, spaces s2 and s0 are neighbors and spaces s2 and s1 are neighbors?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "63e50644-2b28-4471-80c9-23cc5eac050c", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_3_question_7", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state,. What are the self constraint properties of the state for c7? Write None if there are none", "answer": "vehicle v0 contains cargo c7", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "53d7cd6a-18d1-480e-b4ba-405f45369632", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_3_question_8", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state,. What are the self constraint properties of the state for l0? Write None if there are none", "answer": "cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c5 is not situated at location l0, cargo c6 is not situated at location l0, cargo c7 is not situated at location l0, cargo c8 is not at location l0cargo c8 is not present at location l0, cargo v0 is not situated at location l0, fuel f4 does not exist in location l0, fuel f5 does not exist in location l0, location l0 does not have a fuel-level of f2, location l0 does not have fuel f1 and location l0 does not have fuel f3", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "5a807e94-19de-431d-a178-7fc9996d4ef7", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_3_question_9", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state,. What are the self constraint properties of the state for f2? Write None if there are none", "answer": "fuel f2 does not exist in location l0 and location l1 does not have fuel f2", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "f8a45bb7-31b9-4111-bfb3-41426d276e12", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_3_question_10", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state,. What are the static properties of the state for f4? Write None if there are none", "answer": "fuel-levels f3 and f4 are neighbors and fuel-levels f4 and f5 are neighbors", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "af052589-624b-4bbc-908c-4f88183ffd2e", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_3_question_11", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state,. What are the static properties of the state for f5? Write None if there are none", "answer": "fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f4, fuel-levels f0 and f5 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f5 and f1 are not neighbors and fuel-levels f5 and f3 are not neighbors", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "a25804c7-5782-475b-a0c4-44db1a2678d4", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "iter_3_question_12", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state,. What are the static properties of the state for f0? Write None if there are none", "answer": "fuel level f0 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f0, fuel-levels f0 and f1 are neighbors, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f2 and f0 are not neighbors and fuel-levels f5 and f0 are not neighbors", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel level f0 neighbors fuel level f1, fuel level f3 neighbors fuel level f4, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f3, location l0 is connected to location l1, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s1 neighbors space s2, spaces s0 and s1 are neighbors and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "c5abbf52-cd40-4028-8378-e5002ed8dbf8", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, are all of the following properties: cargo c0 is in vehicle v0, cargo c0 is not situated at location l0, cargo c0 is not situated at location l1, cargo c1 is not situated at location l0, cargo c1 is situated at location l1, cargo c2 is not at location l1cargo c2 is not present at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c3 is not situated at location l0, cargo c4 is at location l0, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c5 is not located in vehicle v0, cargo c5 is not situated at location l1, cargo c5 is situated at location l0, cargo c6 is at location l0, cargo c6 is not at location l1cargo c6 is not present at location l1, cargo c7 is not at location l1cargo c7 is not present at location l1, cargo c7 is situated at location l0, cargo c8 is at location l0, cargo c8 is not situated at location l1, cargo c9 is not located in vehicle v0, cargo c9 is not situated at location l1, cargo c9 is present at location l0, cargo v0 is not at location l1cargo v0 is not present at location l1, cargo v0 is situated at location l0, fuel f0 does not exist in location l0, fuel f0 does not exist in location l1, fuel f1 does not exist in location l0, fuel f2 does not exist in location l0, fuel f2 does not exist in location l1, fuel f4 does not exist in location l0, fuel f5 does not exist in location l1, fuel level f0 does not neighbour fuel level f3, fuel level f0 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f0, fuel level f2 neighbors fuel level f3, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f3, fuel-levels f0 and f1 are neighbors, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f4 are not neighbors, location l0 does not have a fuel-level of f5, location l0 has fuel f3, location l1 does not have a fuel-level of f4, location l1 does not have fuel f1, location l1 has fuel f3, space s1 does not neighbour space s0, space s1 neighbors space s2, spaces s0 and s1 are neighbors, spaces s0 and s2 are not neighbors, spaces s2 and s0 are not neighbors, spaces s2 and s1 are not neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 contains space s1, vehicle v0 does not contain cargo c1, vehicle v0 does not contain cargo c2, vehicle v0 does not contain cargo c3, vehicle v0 does not contain cargo c4, vehicle v0 does not contain cargo c6, vehicle v0 does not contain cargo c7, vehicle v0 does not contain cargo c8, vehicle v0 does not have space s0 and vehicle v0 does not have space s2, correct? Respond with True or False.", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is situated at location l0, cargo c6 is situated at location l0, cargo c7 is situated at location l0, cargo c8 is situated at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f4 neighbors fuel level f5, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors, there is a connection between locations l0 and l1 and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "47e97d57-8727-4933-80b0-da33dc535d88", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, are all of the following properties: cargo c0 is not at location l1cargo c0 is not present at location l1, cargo c0 is not located in vehicle v0, cargo c0 is situated at location l0, cargo c1 is at location l1, cargo c1 is not in vehicle v0, cargo c1 is present at location l0, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c2 is not at location l1cargo c2 is not present at location l1, cargo c2 is not in vehicle v0, cargo c3 is not at location l0cargo c3 is not present at location l0, cargo c3 is not at location l1cargo c3 is not present at location l1, cargo c3 is not in vehicle v0, cargo c4 is not located in vehicle v0, cargo c4 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l1, cargo c5 is not in vehicle v0, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c6 is situated at location l0, cargo c7 is not situated at location l0, cargo c7 is not situated at location l1, cargo c8 is not situated at location l0, cargo c8 is situated at location l1, cargo c9 is not situated at location l1, cargo c9 is present at location l0, cargo v0 is present at location l0, cargo v0 is situated at location l1, fuel f0 does not exist in location l0, fuel f2 exists in location l0, fuel f4 does not exist in location l1, fuel f5 does not exist in location l0, fuel level f0 neighbors fuel level f2, fuel level f0 neighbors fuel level f3, fuel level f0 neighbors fuel level f4, fuel level f0 neighbors fuel level f5, fuel level f1 does not neighbour fuel level f2, fuel level f1 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f5, fuel level f2 neighbors fuel level f3, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f5, fuel level f3 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 does not neighbour fuel level f5, fuel level f4 neighbors fuel level f1, fuel level f5 does not neighbour fuel level f1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f0 are neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f5 are neighbors, fuel-levels f2 and f0 are neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f3 and f0 are neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f2 are neighbors, fuel-levels f4 and f3 are neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f2 are neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f5 and f4 are neighbors, location l0 has a fuel-level of f3, location l0 has fuel f1, location l0 has fuel f4, location l0 is not connected to location l1, location l1 does not have a fuel-level of f2, location l1 does not have fuel f1, location l1 has a fuel-level of f3, location l1 has fuel f0, location l1 has fuel f5, space s0 neighbors space s2, space s2 does not neighbour space s1, spaces s0 and s1 are neighbors, spaces s1 and s0 are neighbors, spaces s1 and s2 are not neighbors, spaces s2 and s0 are neighbors, there is no connection between locations l1 and l0, vehicle v0 contains cargo c8, vehicle v0 does not contain cargo c6, vehicle v0 does not contain cargo c7, vehicle v0 does not contain cargo c9, vehicle v0 does not contain space s0, vehicle v0 does not contain space s1 and vehicle v0 has space s2, correct? Respond with True or False.", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is situated at location l0, cargo c6 is situated at location l0, cargo c7 is situated at location l0, cargo c8 is situated at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f4 neighbors fuel level f5, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors, there is a connection between locations l0 and l1 and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "64b00841-910f-4cd1-96e7-4ca8ead9e658", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "cargo c0 is in vehicle v0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is at location l0, cargo c8 is present at location l0, cargo c9 is present at location l0, cargo v0 is present at location l0, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l1 has a fuel-level of f3, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 contains space s1", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is situated at location l0, cargo c6 is situated at location l0, cargo c7 is situated at location l0, cargo c8 is situated at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f4 neighbors fuel level f5, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors, there is a connection between locations l0 and l1 and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "2740d607-0178-4c0b-8e89-2fb8a1bd9c4e", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c0 is not at location l1cargo c0 is not present at location l1, cargo c1 is not in vehicle v0, cargo c1 is not situated at location l0, cargo c2 is not at location l1cargo c2 is not present at location l1, cargo c2 is not in vehicle v0, cargo c3 is not situated at location l0, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c4 is not located in vehicle v0, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c5 is not located in vehicle v0, cargo c6 is not at location l1cargo c6 is not present at location l1, cargo c7 is not at location l1cargo c7 is not present at location l1, cargo c7 is not in vehicle v0, cargo c8 is not situated at location l1, cargo c9 is not at location l1cargo c9 is not present at location l1, cargo v0 is not situated at location l1, fuel f0 does not exist in location l0, fuel f2 does not exist in location l1, fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f1, fuel level f2 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f5, fuel level f4 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f3, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f5 and f4 are not neighbors, location l0 does not have a fuel-level of f2, location l0 does not have fuel f1, location l0 does not have fuel f4, location l0 does not have fuel f5, location l1 does not have a fuel-level of f0, location l1 does not have a fuel-level of f5, location l1 does not have fuel f1, location l1 does not have fuel f4, space s1 does not neighbour space s0, space s2 does not neighbour space s0, spaces s0 and s2 are not neighbors, spaces s2 and s1 are not neighbors, vehicle v0 does not contain cargo c3, vehicle v0 does not contain cargo c6, vehicle v0 does not contain cargo c8, vehicle v0 does not contain cargo c9, vehicle v0 does not contain space s0 and vehicle v0 does not contain space s2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is situated at location l0, cargo c6 is situated at location l0, cargo c7 is situated at location l0, cargo c8 is situated at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f4 neighbors fuel level f5, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors, there is a connection between locations l0 and l1 and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "ce693376-1b53-4136-b4cd-ce8318275b2a", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "cargo c0 is not at location l1cargo c0 is not present at location l1, cargo c0 is not situated at location l0, cargo c1 is not in vehicle v0, cargo c1 is not situated at location l0, cargo c2 is not in vehicle v0, cargo c2 is not situated at location l1, cargo c3 is not at location l0cargo c3 is not present at location l0, cargo c3 is not located in vehicle v0, cargo c4 is not situated at location l1, cargo c5 is not situated at location l1, cargo c6 is not in vehicle v0, cargo c6 is not situated at location l1, cargo c7 is not at location l1cargo c7 is not present at location l1, cargo c7 is not in vehicle v0, cargo c8 is not located in vehicle v0, cargo c8 is not situated at location l1, cargo c9 is not at location l1cargo c9 is not present at location l1, cargo c9 is not in vehicle v0, cargo v0 is not at location l1cargo v0 is not present at location l1, fuel f0 does not exist in location l0, fuel f1 does not exist in location l1, fuel f4 does not exist in location l0, fuel f4 does not exist in location l1, fuel f5 does not exist in location l1, fuel level f0 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f4, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f5, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f3, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f4 are not neighbors, location l0 does not have a fuel-level of f2, location l0 does not have a fuel-level of f5, location l0 does not have fuel f1, location l1 does not have fuel f0, location l1 does not have fuel f2, space s0 does not neighbour space s2, space s1 does not neighbour space s0, space s2 does not neighbour space s0, spaces s2 and s1 are not neighbors, vehicle v0 does not contain cargo c4, vehicle v0 does not contain cargo c5, vehicle v0 does not contain space s0 and vehicle v0 does not have space s2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is situated at location l0, cargo c6 is situated at location l0, cargo c7 is situated at location l0, cargo c8 is situated at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f4 neighbors fuel level f5, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors, there is a connection between locations l0 and l1 and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "587a2f5d-f9bc-465e-85ba-cb97d993a81b", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, are all of the following properties: cargo c0 is at location l1, cargo c0 is not located in vehicle v0, cargo c0 is not situated at location l0, cargo c1 is not at location l0cargo c1 is not present at location l0, cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c2 is in vehicle v0, cargo c2 is not at location l1cargo c2 is not present at location l1, cargo c2 is not situated at location l0, cargo c3 is not at location l0cargo c3 is not present at location l0, cargo c3 is not in vehicle v0, cargo c3 is present at location l1, cargo c4 is at location l0, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c5 is at location l0, cargo c5 is not located in vehicle v0, cargo c5 is not situated at location l1, cargo c6 is at location l0, cargo c6 is not in vehicle v0, cargo c6 is not situated at location l1, cargo c7 is not located in vehicle v0, cargo c7 is not situated at location l1, cargo c7 is situated at location l0, cargo c8 is not at location l1cargo c8 is not present at location l1, cargo c8 is not located in vehicle v0, cargo c8 is present at location l0, cargo c9 is not at location l1cargo c9 is not present at location l1, cargo c9 is situated at location l0, cargo v0 is not situated at location l0, cargo v0 is present at location l1, fuel f0 does not exist in location l0, fuel f1 does not exist in location l0, fuel f2 exists in location l0, fuel f5 does not exist in location l1, fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f3, fuel level f0 does not neighbour fuel level f4, fuel level f0 does not neighbour fuel level f5, fuel level f0 neighbors fuel level f1, fuel level f1 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f5, fuel level f2 neighbors fuel level f3, fuel level f3 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f4, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f3 are not neighbors, location l0 does not have a fuel-level of f4, location l0 does not have fuel f3, location l0 does not have fuel f5, location l1 does not have a fuel-level of f0, location l1 does not have a fuel-level of f4, location l1 does not have fuel f1, location l1 does not have fuel f2, location l1 has fuel f3, space s0 does not neighbour space s2, space s0 neighbors space s1, space s1 neighbors space s2, space s2 does not neighbour space s1, spaces s1 and s0 are not neighbors, spaces s2 and s0 are not neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 contains cargo c1, vehicle v0 does not contain cargo c4, vehicle v0 does not contain cargo c9, vehicle v0 does not contain space s1, vehicle v0 does not have space s2 and vehicle v0 has space s0, correct? Respond with True or False.", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is situated at location l0, cargo c6 is situated at location l0, cargo c7 is situated at location l0, cargo c8 is situated at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f4 neighbors fuel level f5, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors, there is a connection between locations l0 and l1 and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "9700a7ce-1ced-4b50-8d2b-b195ee1a4084", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, are all of the following properties: cargo c0 is not in vehicle v0, cargo c0 is present at location l1, cargo c0 is situated at location l0, cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c1 is not in vehicle v0, cargo c1 is not situated at location l0, cargo c2 is not located in vehicle v0, cargo c2 is not situated at location l0, cargo c2 is not situated at location l1, cargo c3 is not at location l1cargo c3 is not present at location l1, cargo c3 is not in vehicle v0, cargo c3 is not situated at location l0, cargo c4 is not at location l0cargo c4 is not present at location l0, cargo c4 is situated at location l1, cargo c5 is in vehicle v0, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c5 is not situated at location l0, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not located in vehicle v0, cargo c6 is not situated at location l1, cargo c7 is at location l1, cargo c7 is in vehicle v0, cargo c7 is not at location l0cargo c7 is not present at location l0, cargo c8 is at location l0, cargo c8 is not located in vehicle v0, cargo c8 is situated at location l1, cargo c9 is not at location l0cargo c9 is not present at location l0, cargo c9 is not located in vehicle v0, cargo c9 is present at location l1, cargo v0 is not situated at location l0, cargo v0 is present at location l1, fuel f0 exists in location l0, fuel f1 exists in location l0, fuel f3 does not exist in location l1, fuel level f0 does not neighbour fuel level f4, fuel level f0 neighbors fuel level f1, fuel level f0 neighbors fuel level f5, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f4, fuel level f1 neighbors fuel level f2, fuel level f1 neighbors fuel level f3, fuel level f2 does not neighbour fuel level f1, fuel level f2 neighbors fuel level f3, fuel level f3 neighbors fuel level f1, fuel level f3 neighbors fuel level f2, fuel level f4 neighbors fuel level f2, fuel level f5 neighbors fuel level f0, fuel level f5 neighbors fuel level f3, fuel-levels f0 and f2 are neighbors, fuel-levels f0 and f3 are neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f3 and f5 are neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f3 are neighbors, fuel-levels f4 and f5 are not neighbors, fuel-levels f5 and f1 are neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f4 are not neighbors, location l0 does not have a fuel-level of f5, location l0 does not have fuel f3, location l0 has a fuel-level of f2, location l0 has a fuel-level of f4, location l0 is connected to location l1, location l1 and location l0 are not connected, location l1 does not have a fuel-level of f2, location l1 does not have a fuel-level of f5, location l1 does not have fuel f0, location l1 has fuel f1, location l1 has fuel f4, space s0 does not neighbour space s1, space s1 neighbors space s0, space s2 does not neighbour space s1, space s2 neighbors space s0, spaces s0 and s2 are neighbors, spaces s1 and s2 are not neighbors, vehicle v0 contains space s1, vehicle v0 does not contain cargo c4, vehicle v0 does not contain space s0 and vehicle v0 does not have space s2, correct? Respond with True or False.", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is situated at location l0, cargo c6 is situated at location l0, cargo c7 is situated at location l0, cargo c8 is situated at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f4 neighbors fuel level f5, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors, there is a connection between locations l0 and l1 and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "2e03e1a3-7117-47a5-b6bd-337206a4df18", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "cargo c0 is situated at location l1, cargo c1 is in vehicle v0, cargo c2 is in vehicle v0, cargo c3 is situated at location l1, cargo c4 is at location l0, cargo c5 is situated at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is present at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l1, fuel level f2 neighbors fuel level f3, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f2, location l1 and location l0 are connected, location l1 has a fuel-level of f3, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors, there is a connection between locations l0 and l1 and vehicle v0 contains space s0", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is situated at location l0, cargo c6 is situated at location l0, cargo c7 is situated at location l0, cargo c8 is situated at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f4 neighbors fuel level f5, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors, there is a connection between locations l0 and l1 and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "b714814f-6b62-45b7-a62e-a82c42d2901b", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c0 is not located in vehicle v0, cargo c1 is not at location l0cargo c1 is not present at location l0, cargo c1 is not situated at location l1, cargo c2 is not situated at location l0, cargo c2 is not situated at location l1, cargo c3 is not situated at location l0, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c4 is not located in vehicle v0, cargo c5 is not located in vehicle v0, cargo c5 is not situated at location l1, cargo c6 is not at location l1cargo c6 is not present at location l1, cargo c6 is not in vehicle v0, cargo c7 is not at location l1cargo c7 is not present at location l1, cargo c7 is not in vehicle v0, cargo c8 is not in vehicle v0, cargo c8 is not situated at location l1, cargo c9 is not in vehicle v0, cargo c9 is not situated at location l1, cargo v0 is not at location l0cargo v0 is not present at location l0, fuel f1 does not exist in location l0, fuel f1 does not exist in location l1, fuel f3 does not exist in location l0, fuel f4 does not exist in location l1, fuel f5 does not exist in location l0, fuel f5 does not exist in location l1, fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f1, fuel level f2 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f5, fuel level f4 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f4, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f5 and f1 are not neighbors, location l0 does not have fuel f0, location l0 does not have fuel f4, location l1 does not have fuel f0, location l1 does not have fuel f2, space s0 does not neighbour space s2, space s2 does not neighbour space s0, space s2 does not neighbour space s1, spaces s1 and s0 are not neighbors, vehicle v0 does not contain cargo c3, vehicle v0 does not contain space s1 and vehicle v0 does not contain space s2", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is situated at location l0, cargo c6 is situated at location l0, cargo c7 is situated at location l0, cargo c8 is situated at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f4 neighbors fuel level f5, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors, there is a connection between locations l0 and l1 and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "890082f8-f352-4d3a-8248-eafe03e4dc42", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "cargo c0 is not in vehicle v0, cargo c0 is not situated at location l0, cargo c1 is not situated at location l0, cargo c1 is not situated at location l1, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c2 is not at location l1cargo c2 is not present at location l1, cargo c3 is not at location l0cargo c3 is not present at location l0, cargo c3 is not located in vehicle v0, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c4 is not located in vehicle v0, cargo c5 is not in vehicle v0, cargo c5 is not situated at location l1, cargo c6 is not situated at location l1, cargo c7 is not at location l1cargo c7 is not present at location l1, cargo c7 is not located in vehicle v0, cargo c8 is not at location l1cargo c8 is not present at location l1, cargo c9 is not at location l1cargo c9 is not present at location l1, cargo v0 is not at location l0cargo v0 is not present at location l0, fuel f3 does not exist in location l0, fuel f4 does not exist in location l1, fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f3, fuel level f0 does not neighbour fuel level f4, fuel level f0 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f5, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f4, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f2 are not neighbors, location l0 does not have fuel f0, location l0 does not have fuel f1, location l0 does not have fuel f4, location l0 does not have fuel f5, location l1 does not have a fuel-level of f0, location l1 does not have a fuel-level of f1, location l1 does not have a fuel-level of f2, location l1 does not have fuel f5, space s2 does not neighbour space s0, space s2 does not neighbour space s1, spaces s0 and s2 are not neighbors, spaces s1 and s0 are not neighbors, vehicle v0 does not contain cargo c6, vehicle v0 does not contain cargo c8, vehicle v0 does not contain cargo c9, vehicle v0 does not contain space s1 and vehicle v0 does not contain space s2", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is situated at location l0, cargo c6 is situated at location l0, cargo c7 is situated at location l0, cargo c8 is situated at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f4 neighbors fuel level f5, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors, there is a connection between locations l0 and l1 and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "bd139904-c753-4005-beea-7c415a587ef3", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, are all of the following properties: cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c0 is not in vehicle v0, cargo c0 is present at location l1, cargo c1 is at location l0, cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c1 is not in vehicle v0, cargo c2 is at location l1, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c2 is not located in vehicle v0, cargo c3 is not located in vehicle v0, cargo c3 is not situated at location l0, cargo c3 is situated at location l1, cargo c4 is at location l0, cargo c4 is not located in vehicle v0, cargo c4 is not situated at location l1, cargo c5 is in vehicle v0, cargo c5 is not at location l0cargo c5 is not present at location l0, cargo c5 is not situated at location l1, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not situated at location l1, cargo c7 is at location l0, cargo c7 is not located in vehicle v0, cargo c7 is not situated at location l1, cargo c8 is at location l0, cargo c8 is not in vehicle v0, cargo c8 is not situated at location l1, cargo c9 is not at location l1cargo c9 is not present at location l1, cargo c9 is situated at location l0, cargo v0 is not situated at location l1, cargo v0 is present at location l0, fuel f0 does not exist in location l0, fuel f1 does not exist in location l1, fuel f3 does not exist in location l1, fuel f5 does not exist in location l0, fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f3, fuel level f0 does not neighbour fuel level f4, fuel level f0 does not neighbour fuel level f5, fuel level f0 neighbors fuel level f1, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f5, fuel level f1 neighbors fuel level f2, fuel level f2 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f4, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f1 are not neighbors, location l0 and location l1 are connected, location l0 does not have a fuel-level of f3, location l0 does not have fuel f1, location l0 does not have fuel f4, location l0 has fuel f2, location l1 does not have a fuel-level of f5, location l1 does not have fuel f0, location l1 does not have fuel f4, location l1 has fuel f2, space s0 does not neighbour space s2, space s0 neighbors space s1, space s1 neighbors space s2, spaces s1 and s0 are not neighbors, spaces s2 and s0 are not neighbors, spaces s2 and s1 are not neighbors, there is a connection between locations l1 and l0, vehicle v0 contains cargo c6, vehicle v0 contains space s0, vehicle v0 does not contain cargo c9, vehicle v0 does not contain space s1 and vehicle v0 does not contain space s2, correct? Respond with True or False.", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is situated at location l0, cargo c6 is situated at location l0, cargo c7 is situated at location l0, cargo c8 is situated at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f4 neighbors fuel level f5, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors, there is a connection between locations l0 and l1 and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "04dddc59-056b-444b-ba19-3c064e9a2264", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, are all of the following properties: cargo c0 is in vehicle v0, cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c0 is not situated at location l1, cargo c1 is at location l0, cargo c1 is at location l1, cargo c2 is at location l0, cargo c2 is not at location l1cargo c2 is not present at location l1, cargo c2 is not located in vehicle v0, cargo c3 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is in vehicle v0, cargo c4 is not situated at location l0, cargo c4 is not situated at location l1, cargo c5 is at location l0, cargo c5 is not in vehicle v0, cargo c5 is situated at location l1, cargo c6 is located in vehicle v0, cargo c6 is not situated at location l1, cargo c6 is present at location l0, cargo c7 is not at location l1cargo c7 is not present at location l1, cargo c7 is not situated at location l0, cargo c8 is not at location l1cargo c8 is not present at location l1, cargo c8 is not situated at location l0, cargo c9 is not at location l0cargo c9 is not present at location l0, cargo c9 is not at location l1cargo c9 is not present at location l1, cargo v0 is at location l0, cargo v0 is present at location l1, fuel f2 exists in location l0, fuel level f0 neighbors fuel level f2, fuel level f0 neighbors fuel level f3, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f2, fuel level f1 does not neighbour fuel level f5, fuel level f1 neighbors fuel level f3, fuel level f2 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f5, fuel level f3 neighbors fuel level f0, fuel level f4 neighbors fuel level f0, fuel level f4 neighbors fuel level f1, fuel level f4 neighbors fuel level f3, fuel level f5 does not neighbour fuel level f1, fuel level f5 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f1 and f4 are neighbors, fuel-levels f2 and f0 are neighbors, fuel-levels f2 and f1 are neighbors, fuel-levels f2 and f3 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f3 and f4 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f0 are neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f3 are neighbors, location l0 does not have fuel f0, location l0 does not have fuel f1, location l0 does not have fuel f3, location l0 has a fuel-level of f4, location l0 has a fuel-level of f5, location l0 is connected to location l1, location l1 and location l0 are not connected, location l1 does not have a fuel-level of f3, location l1 does not have fuel f0, location l1 does not have fuel f2, location l1 does not have fuel f4, location l1 has a fuel-level of f1, location l1 has a fuel-level of f5, space s0 does not neighbour space s1, space s2 does not neighbour space s0, space s2 neighbors space s1, spaces s0 and s2 are not neighbors, spaces s1 and s0 are not neighbors, spaces s1 and s2 are neighbors, vehicle v0 contains cargo c1, vehicle v0 contains cargo c9, vehicle v0 contains space s0, vehicle v0 does not contain cargo c3, vehicle v0 does not contain cargo c7, vehicle v0 does not contain cargo c8, vehicle v0 does not contain space s1 and vehicle v0 does not contain space s2, correct? Respond with True or False.", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is situated at location l0, cargo c6 is situated at location l0, cargo c7 is situated at location l0, cargo c8 is situated at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f4 neighbors fuel level f5, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors, there is a connection between locations l0 and l1 and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "ca7edf49-cc84-4147-9e88-94e9a4f6b40c", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "cargo c0 is present at location l1, cargo c1 is situated at location l0, cargo c2 is situated at location l1, cargo c3 is present at location l1, cargo c4 is situated at location l0, cargo c6 is in vehicle v0, cargo c7 is present at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is at location l0, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, location l0 has fuel f2, location l1 has fuel f2, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains cargo c5 and vehicle v0 has space s0", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is situated at location l0, cargo c6 is situated at location l0, cargo c7 is situated at location l0, cargo c8 is situated at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f4 neighbors fuel level f5, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors, there is a connection between locations l0 and l1 and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "5a582eb9-e18d-4989-a5c7-e992a955f99f", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c1 is not situated at location l1, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c2 is not in vehicle v0, cargo c3 is not at location l0cargo c3 is not present at location l0, cargo c3 is not located in vehicle v0, cargo c4 is not situated at location l1, cargo c5 is not at location l0cargo c5 is not present at location l0, cargo c5 is not situated at location l1, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not situated at location l1, cargo c7 is not at location l1cargo c7 is not present at location l1, cargo c7 is not in vehicle v0, cargo c8 is not located in vehicle v0, cargo c8 is not situated at location l1, cargo c9 is not in vehicle v0, cargo c9 is not situated at location l1, cargo v0 is not at location l1cargo v0 is not present at location l1, fuel f1 does not exist in location l0, fuel level f0 does not neighbour fuel level f3, fuel level f0 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f4, fuel level f3 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f3, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f5 and f4 are not neighbors, location l0 does not have a fuel-level of f0, location l0 does not have a fuel-level of f4, location l0 does not have a fuel-level of f5, location l0 does not have fuel f3, location l1 does not have a fuel-level of f0, location l1 does not have a fuel-level of f1, location l1 does not have a fuel-level of f5, location l1 does not have fuel f3, location l1 does not have fuel f4, space s1 does not neighbour space s0, spaces s0 and s2 are not neighbors, spaces s2 and s0 are not neighbors, spaces s2 and s1 are not neighbors, vehicle v0 does not contain cargo c0, vehicle v0 does not contain cargo c1, vehicle v0 does not contain cargo c4, vehicle v0 does not contain space s1 and vehicle v0 does not have space s2", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is situated at location l0, cargo c6 is situated at location l0, cargo c7 is situated at location l0, cargo c8 is situated at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f4 neighbors fuel level f5, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors, there is a connection between locations l0 and l1 and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "761daa99-5ad8-472b-b971-3d24c4129686", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c0 is not located in vehicle v0, cargo c1 is not located in vehicle v0, cargo c1 is not situated at location l1, cargo c2 is not located in vehicle v0, cargo c2 is not situated at location l0, cargo c3 is not located in vehicle v0, cargo c3 is not situated at location l0, cargo c4 is not located in vehicle v0, cargo c4 is not situated at location l1, cargo c5 is not situated at location l0, cargo c5 is not situated at location l1, cargo c6 is not situated at location l0, cargo c6 is not situated at location l1, cargo c7 is not located in vehicle v0, cargo c7 is not situated at location l1, cargo c8 is not at location l1cargo c8 is not present at location l1, cargo c8 is not located in vehicle v0, cargo c9 is not at location l1cargo c9 is not present at location l1, cargo v0 is not at location l1cargo v0 is not present at location l1, fuel f0 does not exist in location l1, fuel f1 does not exist in location l0, fuel f3 does not exist in location l1, fuel f4 does not exist in location l1, fuel f5 does not exist in location l0, fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f4, fuel level f0 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f4, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f4, fuel-levels f0 and f3 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f3 are not neighbors, location l0 does not have a fuel-level of f4, location l0 does not have fuel f0, location l0 does not have fuel f3, location l1 does not have a fuel-level of f1, location l1 does not have a fuel-level of f5, space s0 does not neighbour space s2, space s2 does not neighbour space s0, spaces s1 and s0 are not neighbors, spaces s2 and s1 are not neighbors, vehicle v0 does not contain cargo c9, vehicle v0 does not have space s1 and vehicle v0 does not have space s2", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is situated at location l0, cargo c6 is situated at location l0, cargo c7 is situated at location l0, cargo c8 is situated at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f4 neighbors fuel level f5, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors, there is a connection between locations l0 and l1 and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "f1b904c1-8b63-4412-996d-a319b9d31747", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, are all of the following properties: cargo c0 is not situated at location l0, cargo c0 is present at location l1, cargo c1 is at location l0, cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c1 is not in vehicle v0, cargo c2 is at location l1, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c3 is in vehicle v0, cargo c3 is not at location l0cargo c3 is not present at location l0, cargo c3 is not at location l1cargo c3 is not present at location l1, cargo c4 is at location l0, cargo c4 is not in vehicle v0, cargo c4 is not situated at location l1, cargo c5 is not at location l0cargo c5 is not present at location l0, cargo c5 is not in vehicle v0, cargo c5 is present at location l1, cargo c6 is at location l1, cargo c6 is not located in vehicle v0, cargo c6 is not situated at location l0, cargo c7 is not at location l1cargo c7 is not present at location l1, cargo c7 is not located in vehicle v0, cargo c7 is situated at location l0, cargo c8 is not located in vehicle v0, cargo c8 is not situated at location l1, cargo c8 is situated at location l0, cargo c9 is not at location l1cargo c9 is not present at location l1, cargo c9 is situated at location l0, cargo v0 is at location l0, cargo v0 is not situated at location l1, fuel f1 exists in location l0, fuel f2 does not exist in location l0, fuel f2 does not exist in location l1, fuel f4 does not exist in location l1, fuel level f0 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f5, fuel level f1 neighbors fuel level f2, fuel level f2 does not neighbour fuel level f1, fuel level f2 does not neighbour fuel level f5, fuel level f2 neighbors fuel level f3, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f5, fuel level f3 neighbors fuel level f4, fuel level f4 does not neighbour fuel level f0, fuel level f4 neighbors fuel level f5, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f5 and f2 are not neighbors, location l0 does not have a fuel-level of f5, location l0 does not have fuel f0, location l0 does not have fuel f3, location l0 does not have fuel f4, location l1 does not have fuel f0, location l1 does not have fuel f3, location l1 does not have fuel f5, location l1 has fuel f1, location l1 is connected to location l0, space s1 does not neighbour space s0, spaces s0 and s1 are neighbors, spaces s0 and s2 are not neighbors, spaces s1 and s2 are neighbors, spaces s2 and s0 are not neighbors, spaces s2 and s1 are not neighbors, there is a connection between locations l0 and l1, vehicle v0 does not contain cargo c0, vehicle v0 does not contain cargo c2, vehicle v0 does not contain cargo c9, vehicle v0 does not contain space s2, vehicle v0 does not have space s0 and vehicle v0 has space s1, correct? Respond with True or False.", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is situated at location l0, cargo c6 is situated at location l0, cargo c7 is situated at location l0, cargo c8 is situated at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f4 neighbors fuel level f5, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors, there is a connection between locations l0 and l1 and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "e5047913-0dbb-43aa-9b43-92fe7a224f50", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, are all of the following properties: cargo c0 is at location l0, cargo c0 is not situated at location l1, cargo c1 is at location l1, cargo c1 is not in vehicle v0, cargo c1 is present at location l0, cargo c2 is in vehicle v0, cargo c2 is not situated at location l0, cargo c2 is not situated at location l1, cargo c3 is in vehicle v0, cargo c3 is not at location l0cargo c3 is not present at location l0, cargo c3 is not situated at location l1, cargo c4 is at location l0, cargo c4 is in vehicle v0, cargo c4 is not situated at location l1, cargo c5 is at location l0, cargo c5 is in vehicle v0, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c6 is at location l0, cargo c6 is present at location l1, cargo c7 is located in vehicle v0, cargo c7 is not at location l1cargo c7 is not present at location l1, cargo c7 is situated at location l0, cargo c8 is not at location l0cargo c8 is not present at location l0, cargo c8 is not at location l1cargo c8 is not present at location l1, cargo c9 is in vehicle v0, cargo c9 is not at location l0cargo c9 is not present at location l0, cargo c9 is situated at location l1, cargo v0 is not situated at location l1, cargo v0 is present at location l0, fuel f2 exists in location l1, fuel f3 does not exist in location l0, fuel f4 exists in location l0, fuel level f0 does not neighbour fuel level f5, fuel level f0 neighbors fuel level f1, fuel level f0 neighbors fuel level f2, fuel level f0 neighbors fuel level f3, fuel level f0 neighbors fuel level f4, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f4, fuel level f1 neighbors fuel level f2, fuel level f2 does not neighbour fuel level f0, fuel level f2 neighbors fuel level f4, fuel level f2 neighbors fuel level f5, fuel level f3 does not neighbour fuel level f0, fuel level f3 neighbors fuel level f1, fuel level f3 neighbors fuel level f2, fuel level f4 neighbors fuel level f0, fuel level f4 neighbors fuel level f5, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f2, fuel level f5 neighbors fuel level f3, fuel-levels f1 and f3 are neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f2 and f1 are neighbors, fuel-levels f2 and f3 are not neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f3 and f5 are neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f4 are not neighbors, location l0 does not have a fuel-level of f5, location l0 has a fuel-level of f1, location l0 has a fuel-level of f2, location l0 has fuel f0, location l0 is not connected to location l1, location l1 does not have a fuel-level of f0, location l1 does not have a fuel-level of f5, location l1 has a fuel-level of f1, location l1 has fuel f3, location l1 has fuel f4, location l1 is connected to location l0, space s0 neighbors space s1, space s1 neighbors space s0, spaces s0 and s2 are neighbors, spaces s1 and s2 are not neighbors, spaces s2 and s0 are not neighbors, spaces s2 and s1 are not neighbors, vehicle v0 contains cargo c0, vehicle v0 contains cargo c8, vehicle v0 contains space s1, vehicle v0 contains space s2, vehicle v0 does not contain cargo c6 and vehicle v0 has space s0, correct? Respond with True or False.", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is situated at location l0, cargo c6 is situated at location l0, cargo c7 is situated at location l0, cargo c8 is situated at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f4 neighbors fuel level f5, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors, there is a connection between locations l0 and l1 and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "90bc13fd-08e5-41d2-880f-d14cd1e85d2f", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "cargo c0 is present at location l1, cargo c1 is present at location l0, cargo c2 is present at location l1, cargo c4 is at location l0, cargo c5 is present at location l1, cargo c6 is present at location l1, cargo c7 is at location l0, cargo c8 is situated at location l0, cargo c9 is present at location l0, cargo v0 is at location l0, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has a fuel-level of f1, location l1 has fuel f1, space s0 neighbors space s1, spaces s1 and s2 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 contains cargo c3 and vehicle v0 has space s1", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is situated at location l0, cargo c6 is situated at location l0, cargo c7 is situated at location l0, cargo c8 is situated at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f4 neighbors fuel level f5, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors, there is a connection between locations l0 and l1 and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "f6077d0d-7133-4132-9430-f1998a5aaf74", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "cargo c0 is not located in vehicle v0, cargo c0 is not situated at location l0, cargo c1 is not situated at location l1, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c2 is not in vehicle v0, cargo c3 is not situated at location l0, cargo c3 is not situated at location l1, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c4 is not located in vehicle v0, cargo c5 is not in vehicle v0, cargo c5 is not situated at location l0, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c7 is not situated at location l1, cargo c8 is not at location l1cargo c8 is not present at location l1, cargo c8 is not located in vehicle v0, cargo c9 is not at location l1cargo c9 is not present at location l1, cargo c9 is not located in vehicle v0, cargo v0 is not at location l1cargo v0 is not present at location l1, fuel f2 does not exist in location l1, fuel f3 does not exist in location l0, fuel f4 does not exist in location l1, fuel f5 does not exist in location l0, fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f4, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f1 are not neighbors, location l0 does not have a fuel-level of f0, location l0 does not have a fuel-level of f4, location l0 does not have fuel f2, location l1 does not have a fuel-level of f0, location l1 does not have a fuel-level of f3, location l1 does not have a fuel-level of f5, space s1 does not neighbour space s0, spaces s0 and s2 are not neighbors, spaces s2 and s0 are not neighbors, spaces s2 and s1 are not neighbors, vehicle v0 does not contain cargo c1, vehicle v0 does not contain cargo c6, vehicle v0 does not contain cargo c7, vehicle v0 does not have space s0 and vehicle v0 does not have space s2", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is situated at location l0, cargo c6 is situated at location l0, cargo c7 is situated at location l0, cargo c8 is situated at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f4 neighbors fuel level f5, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors, there is a connection between locations l0 and l1 and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "fac2d807-1223-4ccf-b3eb-b578cdc968b3", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c0 is not located in vehicle v0, cargo c1 is not located in vehicle v0, cargo c1 is not situated at location l1, cargo c2 is not in vehicle v0, cargo c2 is not situated at location l0, cargo c3 is not at location l0cargo c3 is not present at location l0, cargo c3 is not at location l1cargo c3 is not present at location l1, cargo c4 is not situated at location l1, cargo c5 is not in vehicle v0, cargo c5 is not situated at location l0, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not located in vehicle v0, cargo c7 is not at location l1cargo c7 is not present at location l1, cargo c8 is not situated at location l1, cargo c9 is not at location l1cargo c9 is not present at location l1, cargo c9 is not in vehicle v0, cargo v0 is not situated at location l1, fuel f3 does not exist in location l1, fuel f5 does not exist in location l1, fuel level f0 does not neighbour fuel level f4, fuel level f0 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f5, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f3, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f3 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f4 are not neighbors, location l0 does not have fuel f0, location l0 does not have fuel f2, location l0 does not have fuel f3, location l0 does not have fuel f4, location l0 does not have fuel f5, location l1 does not have fuel f0, location l1 does not have fuel f2, location l1 does not have fuel f4, space s1 does not neighbour space s0, space s2 does not neighbour space s1, spaces s0 and s2 are not neighbors, spaces s2 and s0 are not neighbors, vehicle v0 does not contain cargo c4, vehicle v0 does not contain cargo c7, vehicle v0 does not contain cargo c8, vehicle v0 does not have space s0 and vehicle v0 does not have space s2", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is situated at location l0, cargo c6 is situated at location l0, cargo c7 is situated at location l0, cargo c8 is situated at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f4 neighbors fuel level f5, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors, there is a connection between locations l0 and l1 and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "29744fd4-ea21-4178-ae0c-a748385a018d", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, are all of the following properties: cargo c0 is not situated at location l0, cargo c0 is present at location l1, cargo c1 is at location l0, cargo c1 is not situated at location l1, cargo c2 is not situated at location l0, cargo c2 is situated at location l1, cargo c3 is not in vehicle v0, cargo c3 is not situated at location l1, cargo c3 is present at location l0, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c4 is not located in vehicle v0, cargo c4 is present at location l0, cargo c5 is not at location l0cargo c5 is not present at location l0, cargo c5 is not in vehicle v0, cargo c5 is situated at location l1, cargo c6 is not in vehicle v0, cargo c6 is not situated at location l0, cargo c6 is situated at location l1, cargo c7 is in vehicle v0, cargo c7 is not at location l0cargo c7 is not present at location l0, cargo c7 is not at location l1cargo c7 is not present at location l1, cargo c8 is located in vehicle v0, cargo c8 is not at location l0cargo c8 is not present at location l0, cargo c8 is not situated at location l1, cargo c9 is not at location l1cargo c9 is not present at location l1, cargo c9 is not in vehicle v0, cargo c9 is situated at location l0, cargo v0 is at location l1, cargo v0 is not situated at location l0, fuel f0 exists in location l0, fuel f2 does not exist in location l0, fuel f4 does not exist in location l0, fuel f5 does not exist in location l0, fuel f5 does not exist in location l1, fuel level f0 does not neighbour fuel level f4, fuel level f0 does not neighbour fuel level f5, fuel level f0 neighbors fuel level f1, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f5, fuel level f1 neighbors fuel level f2, fuel level f2 does not neighbour fuel level f5, fuel level f2 neighbors fuel level f3, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 does not neighbour fuel level f3, fuel level f4 neighbors fuel level f5, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f3, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f3 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f5 and f4 are not neighbors, location l0 does not have fuel f1, location l0 does not have fuel f3, location l0 is connected to location l1, location l1 does not have a fuel-level of f0, location l1 does not have a fuel-level of f2, location l1 does not have fuel f3, location l1 does not have fuel f4, location l1 has fuel f1, space s0 neighbors space s1, space s1 does not neighbour space s0, space s2 does not neighbour space s0, space s2 does not neighbour space s1, spaces s0 and s2 are not neighbors, spaces s1 and s2 are neighbors, there is a connection between locations l1 and l0, vehicle v0 does not contain cargo c0, vehicle v0 does not contain cargo c1, vehicle v0 does not contain cargo c2, vehicle v0 does not contain space s2, vehicle v0 does not have space s1 and vehicle v0 has space s0, correct? Respond with True or False.", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is situated at location l0, cargo c6 is situated at location l0, cargo c7 is situated at location l0, cargo c8 is situated at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f4 neighbors fuel level f5, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors, there is a connection between locations l0 and l1 and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "778e30e3-85d3-411a-970c-b794a6524461", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, are all of the following properties: cargo c0 is not at location l1cargo c0 is not present at location l1, cargo c0 is not situated at location l0, cargo c1 is in vehicle v0, cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c1 is not situated at location l0, cargo c2 is not situated at location l0, cargo c2 is not situated at location l1, cargo c3 is at location l1, cargo c3 is not situated at location l0, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c4 is not located in vehicle v0, cargo c4 is not situated at location l0, cargo c5 is at location l0, cargo c5 is in vehicle v0, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not located in vehicle v0, cargo c6 is not situated at location l1, cargo c7 is located in vehicle v0, cargo c7 is not at location l0cargo c7 is not present at location l0, cargo c7 is not situated at location l1, cargo c8 is not situated at location l0, cargo c8 is not situated at location l1, cargo c9 is not at location l0cargo c9 is not present at location l0, cargo c9 is not at location l1cargo c9 is not present at location l1, cargo v0 is at location l0, cargo v0 is not situated at location l1, fuel f0 exists in location l1, fuel f4 exists in location l0, fuel f4 exists in location l1, fuel f5 does not exist in location l1, fuel level f0 does not neighbour fuel level f1, fuel level f0 does not neighbour fuel level f5, fuel level f0 neighbors fuel level f2, fuel level f1 does not neighbour fuel level f2, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f4, fuel level f1 neighbors fuel level f0, fuel level f2 does not neighbour fuel level f3, fuel level f2 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f4, fuel level f3 does not neighbour fuel level f5, fuel level f3 neighbors fuel level f0, fuel level f4 does not neighbour fuel level f2, fuel level f4 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f4, fuel level f5 neighbors fuel level f1, fuel level f5 neighbors fuel level f3, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f1 and f5 are neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f1 are neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f3 and f1 are neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f3 are neighbors, fuel-levels f5 and f0 are neighbors, location l0 does not have a fuel-level of f0, location l0 does not have a fuel-level of f1, location l0 does not have a fuel-level of f2, location l0 has fuel f3, location l0 has fuel f5, location l0 is not connected to location l1, location l1 and location l0 are connected, location l1 does not have a fuel-level of f3, location l1 does not have fuel f1, location l1 does not have fuel f2, space s1 does not neighbour space s2, space s1 neighbors space s0, space s2 does not neighbour space s0, space s2 does not neighbour space s1, spaces s0 and s1 are neighbors, spaces s0 and s2 are not neighbors, vehicle v0 does not contain cargo c0, vehicle v0 does not contain cargo c2, vehicle v0 does not contain cargo c3, vehicle v0 does not contain cargo c8, vehicle v0 does not contain cargo c9, vehicle v0 does not contain space s0, vehicle v0 does not contain space s2 and vehicle v0 has space s1, correct? Respond with True or False.", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is situated at location l0, cargo c6 is situated at location l0, cargo c7 is situated at location l0, cargo c8 is situated at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f4 neighbors fuel level f5, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors, there is a connection between locations l0 and l1 and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "f03bf34a-497f-4e0a-b864-1835c04da8be", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "cargo c0 is present at location l1, cargo c1 is present at location l0, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is at location l0, cargo c5 is at location l1, cargo c6 is present at location l1, cargo c8 is in vehicle v0, cargo c9 is situated at location l0, cargo v0 is at location l1, fuel f1 exists in location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, location l0 and location l1 are connected, location l0 has fuel f0, location l1 and location l0 are connected, space s0 neighbors space s1, space s1 neighbors space s2, vehicle v0 contains cargo c7 and vehicle v0 contains space s0", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is situated at location l0, cargo c6 is situated at location l0, cargo c7 is situated at location l0, cargo c8 is situated at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f4 neighbors fuel level f5, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors, there is a connection between locations l0 and l1 and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "5ebdf27e-2380-4db3-aa10-e6d645b8ad09", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "cargo c0 is not in vehicle v0, cargo c0 is not situated at location l0, cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c3 is not located in vehicle v0, cargo c3 is not situated at location l1, cargo c4 is not situated at location l1, cargo c5 is not at location l0cargo c5 is not present at location l0, cargo c5 is not in vehicle v0, cargo c6 is not situated at location l0, cargo c7 is not situated at location l0, cargo c7 is not situated at location l1, cargo c8 is not situated at location l0, cargo c8 is not situated at location l1, cargo c9 is not in vehicle v0, cargo c9 is not situated at location l1, cargo v0 is not at location l0cargo v0 is not present at location l0, fuel f5 does not exist in location l1, fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f3, fuel level f0 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f4, fuel-levels f0 and f4 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f3 and f5 are not neighbors, location l0 does not have a fuel-level of f3, location l0 does not have a fuel-level of f4, location l0 does not have a fuel-level of f5, location l0 does not have fuel f1, location l0 does not have fuel f2, location l1 does not have a fuel-level of f3, location l1 does not have a fuel-level of f4, location l1 does not have fuel f0, location l1 does not have fuel f2, space s0 does not neighbour space s2, space s2 does not neighbour space s0, space s2 does not neighbour space s1, spaces s1 and s0 are not neighbors, vehicle v0 does not contain cargo c1, vehicle v0 does not contain cargo c2, vehicle v0 does not contain cargo c4, vehicle v0 does not contain cargo c6, vehicle v0 does not have space s1 and vehicle v0 does not have space s2", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is situated at location l0, cargo c6 is situated at location l0, cargo c7 is situated at location l0, cargo c8 is situated at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f4 neighbors fuel level f5, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors, there is a connection between locations l0 and l1 and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "c33cfaf5-de13-49f6-9379-1c08039e3fcf", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c1 is not located in vehicle v0, cargo c1 is not situated at location l1, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c2 is not in vehicle v0, cargo c3 is not situated at location l1, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c4 is not located in vehicle v0, cargo c5 is not located in vehicle v0, cargo c5 is not situated at location l0, cargo c6 is not located in vehicle v0, cargo c6 is not situated at location l0, cargo c7 is not at location l0cargo c7 is not present at location l0, cargo c7 is not situated at location l1, cargo c8 is not at location l0cargo c8 is not present at location l0, cargo c8 is not at location l1cargo c8 is not present at location l1, cargo c9 is not situated at location l1, cargo v0 is not at location l0cargo v0 is not present at location l0, fuel f2 does not exist in location l0, fuel f3 does not exist in location l1, fuel f4 does not exist in location l1, fuel f5 does not exist in location l0, fuel f5 does not exist in location l1, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f4, fuel level f4 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f4, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f3 are not neighbors, location l0 does not have fuel f1, location l0 does not have fuel f3, location l0 does not have fuel f4, location l1 does not have fuel f0, location l1 does not have fuel f2, space s1 does not neighbour space s0, space s2 does not neighbour space s1, spaces s0 and s2 are not neighbors, spaces s2 and s0 are not neighbors, vehicle v0 does not contain cargo c0, vehicle v0 does not contain cargo c3, vehicle v0 does not contain cargo c9, vehicle v0 does not contain space s1 and vehicle v0 does not have space s2", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is situated at location l0, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is situated at location l0, cargo c6 is situated at location l0, cargo c7 is situated at location l0, cargo c8 is situated at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f4 neighbors fuel level f5, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors, there is a connection between locations l0 and l1 and vehicle v0 contains space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "c2a6d52e-dd85-40c9-a981-03fd83824a97", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is situated at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 and location l1 are connected, location l0 has fuel f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "4f658745-f5de-4465-920b-15d4afab28d7", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: at location l0, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is situated at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 and location l1 are connected, location l0 has fuel f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "488cf7c4-9966-4715-b5b5-996bbe640eac", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 1 the following actions are planned to be performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0. Is the action: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 executable at step 1, True or False?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is situated at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 and location l1 are connected, location l0 has fuel f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "fe73d1b8-cd47-4d75-b4b6-f55e23b50e0a", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 1 the following actions are planned to be performed: cargo c2 is unloaded from vehicle v0 with space s1 and space s0 at location l1. Is the action: cargo c2 is unloaded from vehicle v0 with space s1 and space s0 at location l1 executable at step 1, True or False?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is situated at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 and location l1 are connected, location l0 has fuel f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "6e24b0e9-a7ff-420e-9309-dda1375dab5d", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is situated at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 and location l1 are connected, location l0 has fuel f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "c5175a4f-c1e6-4d66-8ccb-d7e1ac79aa22", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c9 is unloaded from vehicle v0 with space s1 and space s2 at location l0 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "at location l0, cargo c9 is unloaded from vehicle v0 with spaces s1 and s2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is situated at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 and location l1 are connected, location l0 has fuel f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "3eaed30a-9574-4d7c-ae14-3b451d341c27", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "cargo c9 is loaded in vehicle v0 with space s1 and space s0 at location l0, at location l0, cargo c7 is loaded in vehicle v0 with spaces s1 and s0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0, at location l0, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, cargo c5 is loaded in vehicle v0 with space s1 and space s0 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 and cargo c0 is unloaded from vehicle v0 with space s1 and space s2 at location l0", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is situated at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 and location l1 are connected, location l0 has fuel f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "a572a787-f2e1-4449-b694-694b0b657447", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "cargo c3 is loaded in vehicle v0 with space s0 and space s1 at location l1, cargo c6 is loaded in vehicle v0 with space s2 and space s0 at location l0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s2 and s1, cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s2, vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f4, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s2 and s1, at location l0, cargo c9 is unloaded from vehicle v0 with spaces s2 and s0, at location l0, cargo c9 is loaded in vehicle v0 with spaces s2 and s1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s1 and s0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s0 and s1, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l1, at location l0, cargo c6 is unloaded from vehicle v0 with spaces s2 and s1, vehicle v0 moves from location l0 which has fuel-levels f0 and f1 to location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c7 is loaded in vehicle v0 with spaces s2 and s0, cargo c8 is unloaded from vehicle v0 with space s1 and space s0 at location l1, cargo c4 is unloaded from vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s2 and s1, vehicle v0 moves from location l1 which has fuel-levels f4 and f0 to location l0, at location l1, cargo c4 is unloaded from vehicle v0 with spaces s2 and s0, cargo c4 is unloaded from vehicle v0 with space s1 and space s2 at location l1, cargo c6 is loaded in vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c1 is loaded in vehicle v0 with spaces s0 and s2, at location l1, cargo c1 is loaded in vehicle v0 with spaces s0 and s1, at location l0, cargo c4 is loaded in vehicle v0 with spaces s2 and s0, cargo c8 is loaded in vehicle v0 with space s1 and space s2 at location l1, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s2, cargo c7 is unloaded from vehicle v0 with space s0 and space s1 at location l0, cargo c8 is unloaded from vehicle v0 with space s2 and space s1 at location l1, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f1 and f4 to location l0, vehicle v0 moves from location l0 which has fuel-levels f0 and f2 to location l1, at location l0, cargo c8 is unloaded from vehicle v0 with spaces s0 and s2, cargo c8 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s1 and s2, cargo c7 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f2 to location l0, cargo c8 is loaded in vehicle v0 with space s2 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f5, cargo c8 is unloaded from vehicle v0 with space s1 and space s2 at location l1, cargo c6 is loaded in vehicle v0 with space s0 and space s1 at location l1, cargo c3 is unloaded from vehicle v0 with space s2 and space s0 at location l1, cargo c8 is loaded in vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f5, cargo c2 is loaded in vehicle v0 with space s1 and space s2 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f5, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f3, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s2, at location l1, cargo c1 is unloaded from vehicle v0 with spaces s0 and s2, at location l1, cargo c3 is loaded in vehicle v0 with spaces s0 and s2, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s2, cargo c9 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f0, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s2, vehicle v0 moves to location l0 from location l1 that has fuel level f1 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s2 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f0, at location l1, cargo c1 is unloaded from vehicle v0 with spaces s2 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f1, cargo c0 is loaded in vehicle v0 with space s0 and space s1 at location l1, at location l0, cargo c5 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c7 is unloaded from vehicle v0 with spaces s0 and s2, at location l0, cargo c7 is unloaded from vehicle v0 with spaces s2 and s0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s2 and s0, cargo c4 is loaded in vehicle v0 with space s0 and space s1 at location l1, cargo c7 is loaded in vehicle v0 with space s0 and space s1 at location l1, at location l0, cargo c0 is loaded in vehicle v0 with spaces s0 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c5 is loaded in vehicle v0 with space s2 and space s0 at location l0, at location l1, cargo c5 is loaded in vehicle v0 with spaces s0 and s1, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s1 and s2, cargo c9 is loaded in vehicle v0 with space s0 and space s1 at location l1, cargo c8 is loaded in vehicle v0 with space s2 and space s0 at location l0, vehicle v0 moves from location l1 which has fuel-levels f2 and f5 to location l0, at location l0, cargo c8 is unloaded from vehicle v0 with spaces s0 and s1, at location l0, cargo c0 is loaded in vehicle v0 with spaces s0 and s1, at location l1, cargo c7 is unloaded from vehicle v0 with spaces s2 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f2, vehicle v0 moves to location l0 from location l1 that has fuel level f0 and f1, vehicle v0 moves from location l1 which has fuel-levels f3 and f0 to location l0, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s2, cargo c6 is unloaded from vehicle v0 with space s1 and space s2 at location l1, vehicle v0 moves from location l0 which has fuel-levels f3 and f1 to location l1, cargo c6 is unloaded from vehicle v0 with space s1 and space s0 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s2 at location l0, cargo c9 is loaded in vehicle v0 with space s1 and space s2 at location l1, cargo c4 is unloaded from vehicle v0 with space s0 and space s2 at location l0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s0 and s2, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s1 and space s0 at location l1, cargo c5 is unloaded from vehicle v0 with space s2 and space s1 at location l1, at location l0, cargo c7 is loaded in vehicle v0 with spaces s0 and s2, at location l1, cargo c5 is loaded in vehicle v0 with spaces s0 and s2, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f2, cargo c7 is loaded in vehicle v0 with space s0 and space s2 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f1 to location l0, cargo c1 is loaded in vehicle v0 with space s0 and space s2 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c9 is loaded in vehicle v0 with spaces s2 and s1, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l1, at location l0, cargo c7 is unloaded from vehicle v0 with spaces s1 and s0, at location l0, cargo c3 is loaded in vehicle v0 with spaces s0 and s2, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s2 and s0, at location l1, cargo c9 is unloaded from vehicle v0 with spaces s2 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c9 is unloaded from vehicle v0 with space s1 and space s0 at location l0, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c0 is loaded in vehicle v0 with space s2 and space s0 at location l1, at location l0, cargo c5 is unloaded from vehicle v0 with spaces s2 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f0, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s2 and s0, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, at location l0, cargo c3 is loaded in vehicle v0 with spaces s0 and s1, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s2 at location l0, cargo c9 is unloaded from vehicle v0 with space s1 and space s2 at location l1, cargo c9 is loaded in vehicle v0 with space s2 and space s0 at location l0, cargo c9 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l1 which has fuel-levels f2 and f3 to location l0, at location l0, cargo c9 is loaded in vehicle v0 with spaces s0 and s2, cargo c9 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f2, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f5, at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s0, vehicle v0 moves from location l0 which has fuel-levels f5 and f3 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s2 at location l0, at location l1, cargo c2 is loaded in vehicle v0 with spaces s2 and s0, cargo c3 is loaded in vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is unloaded from vehicle v0 with spaces s0 and s2, at location l0, cargo c2 is loaded in vehicle v0 with spaces s0 and s1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, at location l0, cargo c5 is loaded in vehicle v0 with spaces s0 and s1, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f0 and f3 to location l1, vehicle v0 moves from location l1 which has fuel-levels f1 and f5 to location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f0 and f4, vehicle v0 moves from location l0 which has fuel-levels f3 and f0 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c9 is loaded in vehicle v0 with space s0 and space s1 at location l0, cargo c7 is unloaded from vehicle v0 with space s1 and space s0 at location l1, cargo c6 is loaded in vehicle v0 with space s2 and space s1 at location l1, at location l0, cargo c1 is loaded in vehicle v0 with spaces s0 and s1, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s2 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s2 and s0, at location l1, cargo c5 is loaded in vehicle v0 with spaces s1 and s0, cargo c0 is unloaded from vehicle v0 with space s1 and space s0 at location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s2 at location l0, at location l1, cargo c5 is loaded in vehicle v0 with spaces s1 and s2, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f3, at location l0, cargo c6 is unloaded from vehicle v0 with spaces s0 and s2, cargo c1 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c1 is loaded in vehicle v0 with space s1 and space s2 at location l1, cargo c2 is loaded in vehicle v0 with space s0 and space s1 at location l1, cargo c7 is loaded in vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l1 which has fuel-levels f4 and f1 to location l0, at location l1, cargo c3 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s2 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f4 to location l0, at location l1, cargo c1 is loaded in vehicle v0 with spaces s2 and s0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, at location l1, cargo c5 is loaded in vehicle v0 with spaces s2 and s0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s2 and s1, at location l0, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c4 is loaded in vehicle v0 with spaces s2 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c8 is loaded in vehicle v0 with space s0 and space s2 at location l1, at location l1, cargo c8 is unloaded from vehicle v0 with spaces s0 and s1, at location l0, cargo c8 is loaded in vehicle v0 with spaces s0 and s2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is unloaded from vehicle v0 with spaces s1 and s0, cargo c7 is unloaded from vehicle v0 with space s0 and space s2 at location l1, cargo c4 is unloaded from vehicle v0 with space s2 and space s1 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s2 and s0, at location l0, cargo c9 is loaded in vehicle v0 with spaces s1 and s2, cargo c2 is unloaded from vehicle v0 with space s0 and space s2 at location l0, cargo c3 is unloaded from vehicle v0 with space s0 and space s2 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, at location l1, cargo c4 is unloaded from vehicle v0 with spaces s0 and s2, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f0, cargo c2 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is unloaded from vehicle v0 with spaces s2 and s0, at location l1, cargo c3 is unloaded from vehicle v0 with spaces s2 and s1, at location l0, cargo c5 is unloaded from vehicle v0 with spaces s1 and s0, cargo c8 is loaded in vehicle v0 with space s2 and space s0 at location l1, at location l0, cargo c3 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c2 is unloaded from vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l1 which has fuel-levels f0 and f5 to location l0, cargo c7 is loaded in vehicle v0 with space s1 and space s2 at location l0, cargo c9 is unloaded from vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f2 and f4 to location l0, cargo c6 is unloaded from vehicle v0 with space s2 and space s0 at location l0, at location l1, cargo c7 is unloaded from vehicle v0 with spaces s1 and s2, cargo c7 is unloaded from vehicle v0 with space s2 and space s1 at location l0, cargo c1 is unloaded from vehicle v0 with space s2 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f0 and f2 to location l0, at location l0, cargo c1 is loaded in vehicle v0 with spaces s2 and s0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f0 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f4 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s2 and s1, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l1, cargo c3 is unloaded from vehicle v0 with space s0 and space s1 at location l0, at location l0, cargo c4 is loaded in vehicle v0 with spaces s0 and s2, cargo c5 is unloaded from vehicle v0 with space s2 and space s0 at location l1, vehicle v0 moves from location l0 which has fuel-levels f0 and f5 to location l1, at location l0, cargo c3 is loaded in vehicle v0 with spaces s2 and s0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s0, at location l1, cargo c4 is unloaded from vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s1 and space s2 at location l1, cargo c6 is unloaded from vehicle v0 with space s2 and space s0 at location l1, at location l1, cargo c1 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f1 and f3 to location l0, at location l1, cargo c2 is loaded in vehicle v0 with spaces s2 and s1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l0, cargo c4 is unloaded from vehicle v0 with space s2 and space s1 at location l0, at location l1, cargo c7 is loaded in vehicle v0 with spaces s1 and s2, cargo c8 is unloaded from vehicle v0 with space s2 and space s0 at location l0, cargo c8 is loaded in vehicle v0 with space s1 and space s2 at location l0, cargo c8 is unloaded from vehicle v0 with space s0 and space s2 at location l1, cargo c8 is unloaded from vehicle v0 with space s2 and space s0 at location l1, at location l1, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s0 and s2, cargo c2 is loaded in vehicle v0 with space s2 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f5 to location l1, cargo c9 is loaded in vehicle v0 with space s2 and space s0 at location l1, cargo c6 is loaded in vehicle v0 with space s0 and space s2 at location l0, cargo c9 is unloaded from vehicle v0 with space s2 and space s1 at location l1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c9 is loaded in vehicle v0 with spaces s0 and s2, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s0 and s2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l0 which has fuel-levels f4 and f5 to location l1, at location l0, cargo c8 is unloaded from vehicle v0 with spaces s2 and s1, at location l0, cargo c9 is unloaded from vehicle v0 with spaces s2 and s1, vehicle v0 moves from location l0 which has fuel-levels f1 and f2 to location l1, at location l0, cargo c9 is unloaded from vehicle v0 with spaces s0 and s2, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s0, cargo c5 is unloaded from vehicle v0 with space s1 and space s0 at location l1, cargo c6 is loaded in vehicle v0 with space s2 and space s0 at location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f3, cargo c7 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l0, cargo c6 is unloaded from vehicle v0 with spaces s1 and s2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s1 and s2, cargo c7 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c7 is unloaded from vehicle v0 with space s2 and space s0 at location l1, at location l0, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, cargo c6 is loaded in vehicle v0 with space s0 and space s2 at location l1, cargo c2 is unloaded from vehicle v0 with space s2 and space s1 at location l1, vehicle v0 moves from location l0 which has fuel-levels f3 and f4 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s2 and s0, cargo c6 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c4 is loaded in vehicle v0 with space s2 and space s0 at location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, at location l0, cargo c8 is unloaded from vehicle v0 with spaces s1 and s0, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s2, cargo c9 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f0 and f4, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f1 and f0, cargo c2 is loaded in vehicle v0 with space s0 and space s2 at location l0, cargo c0 is unloaded from vehicle v0 with space s2 and space s1 at location l0, at location l1, cargo c4 is loaded in vehicle v0 with spaces s0 and s2, cargo c1 is loaded in vehicle v0 with space s1 and space s2 at location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f0 and f3, cargo c1 is loaded in vehicle v0 with space s2 and space s1 at location l1, at location l1, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, cargo c0 is unloaded from vehicle v0 with space s2 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f1 to location l1, cargo c5 is loaded in vehicle v0 with space s0 and space s2 at location l0, cargo c4 is loaded in vehicle v0 with space s0 and space s1 at location l0, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s2 at location l1, cargo c5 is unloaded from vehicle v0 with space s1 and space s2 at location l1, cargo c6 is loaded in vehicle v0 with space s0 and space s1 at location l0 and at location l1, cargo c9 is unloaded from vehicle v0 with spaces s0 and s2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is situated at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 and location l1 are connected, location l0 has fuel f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "8ba5ee32-3552-4d8b-a837-5a26ad88e48d", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is situated at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 and location l1 are connected, location l0 has fuel f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "87de483a-14bd-42d6-830d-5c92a132f11a", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is situated at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 and location l1 are connected, location l0 has fuel f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "098122b9-6efe-4863-9fe0-0d7dd45d637b", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 5 the following actions are planned to be performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1. Is the action: vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 executable at step 3, True or False?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is situated at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 and location l1 are connected, location l0 has fuel f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "95b5ec7a-ad96-49f3-8a7a-d0d3500728bd", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 5 the following actions are planned to be performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, cargo c9 is unloaded from vehicle v0 with space s2 and space s0 at location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0. Is the action: at location l1, cargo c9 is unloaded from vehicle v0 with spaces s2 and s0 executable at step 3, True or False?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is situated at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 and location l1 are connected, location l0 has fuel f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "a7cd0818-c06f-4e91-be51-3d93f566a114", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is situated at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 and location l1 are connected, location l0 has fuel f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "df3b9323-f4ea-4212-83dd-2f74ea416205", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s2 and s0, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "cargo c0 is unloaded from vehicle v0 with space s2 and space s0 at location l1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is situated at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 and location l1 are connected, location l0 has fuel f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "98caa7a0-d90d-4819-85e2-042465ec2861", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is situated at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 and location l1 are connected, location l0 has fuel f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "59890e2e-04df-4340-b494-a44ebf1a88c4", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "cargo c3 is loaded in vehicle v0 with space s0 and space s1 at location l1, cargo c6 is loaded in vehicle v0 with space s2 and space s0 at location l0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s2 and s1, at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s2, vehicle v0 moves from location l0 which has fuel-levels f5 and f1 to location l1, vehicle v0 moves from location l0 which has fuel-levels f2 and f4 to location l1, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s2 and s1, at location l0, cargo c9 is unloaded from vehicle v0 with spaces s2 and s0, cargo c9 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is unloaded from vehicle v0 with space s1 and space s0 at location l1, at location l0, cargo c8 is loaded in vehicle v0 with spaces s0 and s1, at location l1, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is unloaded from vehicle v0 with spaces s2 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f0 and f1, vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c7 is loaded in vehicle v0 with space s2 and space s0 at location l1, cargo c8 is unloaded from vehicle v0 with space s1 and space s0 at location l1, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s1 and s0, cargo c8 is loaded in vehicle v0 with space s2 and space s1 at location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f0, at location l1, cargo c4 is unloaded from vehicle v0 with spaces s2 and s0, cargo c4 is unloaded from vehicle v0 with space s1 and space s2 at location l1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s2, cargo c1 is loaded in vehicle v0 with space s0 and space s2 at location l0, at location l1, cargo c1 is loaded in vehicle v0 with spaces s0 and s1, at location l0, cargo c4 is loaded in vehicle v0 with spaces s2 and s0, at location l1, cargo c8 is loaded in vehicle v0 with spaces s1 and s2, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s1 and s2, cargo c1 is unloaded from vehicle v0 with space s0 and space s2 at location l0, cargo c7 is unloaded from vehicle v0 with space s0 and space s1 at location l0, at location l1, cargo c8 is unloaded from vehicle v0 with spaces s2 and s1, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f1 and f4, vehicle v0 moves to location l1 from location l0 that has fuel level f0 and f2, at location l0, cargo c8 is unloaded from vehicle v0 with spaces s0 and s2, at location l0, cargo c8 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s1 and space s2 at location l0, at location l1, cargo c7 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f2, at location l1, cargo c8 is loaded in vehicle v0 with spaces s2 and s1, vehicle v0 moves from location l1 which has fuel-levels f4 and f5 to location l0, at location l1, cargo c8 is unloaded from vehicle v0 with spaces s1 and s2, cargo c6 is loaded in vehicle v0 with space s0 and space s1 at location l1, cargo c3 is unloaded from vehicle v0 with space s2 and space s0 at location l1, at location l1, cargo c8 is loaded in vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f5 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s2 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f5 to location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f3, cargo c2 is unloaded from vehicle v0 with space s0 and space s2 at location l1, at location l1, cargo c1 is unloaded from vehicle v0 with spaces s0 and s2, at location l1, cargo c3 is loaded in vehicle v0 with spaces s0 and s2, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s2, cargo c9 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f0, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s2, vehicle v0 moves from location l1 which has fuel-levels f1 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s2 and space s0 at location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f0, at location l1, cargo c1 is unloaded from vehicle v0 with spaces s2 and s0, vehicle v0 moves from location l1 which has fuel-levels f3 and f1 to location l0, at location l1, cargo c0 is loaded in vehicle v0 with spaces s0 and s1, at location l0, cargo c5 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c7 is unloaded from vehicle v0 with spaces s0 and s2, cargo c7 is unloaded from vehicle v0 with space s2 and space s0 at location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s2 and s0, at location l1, cargo c4 is loaded in vehicle v0 with spaces s0 and s1, cargo c7 is loaded in vehicle v0 with space s0 and space s1 at location l1, cargo c9 is loaded in vehicle v0 with space s1 and space s0 at location l0, at location l0, cargo c0 is loaded in vehicle v0 with spaces s0 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s0, at location l1, cargo c5 is loaded in vehicle v0 with spaces s0 and s1, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s1 and s2, at location l1, cargo c9 is loaded in vehicle v0 with spaces s0 and s1, cargo c8 is loaded in vehicle v0 with space s2 and space s0 at location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f5, at location l0, cargo c8 is unloaded from vehicle v0 with spaces s0 and s1, at location l0, cargo c0 is loaded in vehicle v0 with spaces s0 and s1, cargo c7 is unloaded from vehicle v0 with space s2 and space s1 at location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f2, vehicle v0 moves from location l1 which has fuel-levels f0 and f1 to location l0, vehicle v0 moves from location l1 which has fuel-levels f3 and f0 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s2 at location l1, cargo c6 is unloaded from vehicle v0 with space s1 and space s2 at location l1, vehicle v0 moves from location l0 which has fuel-levels f3 and f1 to location l1, at location l0, cargo c6 is unloaded from vehicle v0 with spaces s1 and s0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s2, cargo c7 is loaded in vehicle v0 with space s1 and space s0 at location l0, at location l1, cargo c9 is loaded in vehicle v0 with spaces s1 and s2, cargo c4 is unloaded from vehicle v0 with space s0 and space s2 at location l0, cargo c3 is unloaded from vehicle v0 with space s0 and space s2 at location l0, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s1 and s0, cargo c5 is unloaded from vehicle v0 with space s2 and space s1 at location l1, at location l0, cargo c7 is loaded in vehicle v0 with spaces s0 and s2, cargo c5 is loaded in vehicle v0 with space s0 and space s2 at location l1, vehicle v0 moves from location l1 which has fuel-levels f4 and f2 to location l0, at location l1, cargo c7 is loaded in vehicle v0 with spaces s0 and s2, vehicle v0 moves from location l1 which has fuel-levels f5 and f1 to location l0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0, cargo c1 is loaded in vehicle v0 with space s0 and space s2 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l0, cargo c9 is loaded in vehicle v0 with space s2 and space s1 at location l1, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l1, at location l0, cargo c7 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c3 is loaded in vehicle v0 with space s0 and space s2 at location l0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s2 and s0, cargo c9 is unloaded from vehicle v0 with space s2 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c9 is unloaded from vehicle v0 with space s1 and space s0 at location l0, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c0 is loaded in vehicle v0 with space s2 and space s0 at location l1, cargo c5 is unloaded from vehicle v0 with space s2 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f0, cargo c4 is unloaded from vehicle v0 with space s2 and space s0 at location l0, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, cargo c3 is loaded in vehicle v0 with space s0 and space s1 at location l0, at location l1, cargo c8 is loaded in vehicle v0 with spaces s1 and s0, cargo c4 is loaded in vehicle v0 with space s1 and space s2 at location l0, at location l1, cargo c9 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c9 is loaded in vehicle v0 with spaces s2 and s0, cargo c9 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f3, at location l0, cargo c9 is loaded in vehicle v0 with spaces s0 and s2, at location l0, cargo c9 is unloaded from vehicle v0 with spaces s1 and s2, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f5 and f2 to location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f5, cargo c0 is loaded in vehicle v0 with space s2 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f3, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s2, cargo c2 is loaded in vehicle v0 with space s2 and space s0 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s2 at location l0, cargo c5 is unloaded from vehicle v0 with space s0 and space s2 at location l0, cargo c2 is loaded in vehicle v0 with space s0 and space s1 at location l0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c5 is loaded in vehicle v0 with space s0 and space s1 at location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f0 and f3, vehicle v0 moves to location l0 from location l1 that has fuel level f1 and f5, vehicle v0 moves from location l1 which has fuel-levels f0 and f4 to location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f0, at location l1, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c9 is loaded in vehicle v0 with space s0 and space s1 at location l0, at location l1, cargo c7 is unloaded from vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c1 is loaded in vehicle v0 with spaces s0 and s1, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s2 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s2 and s0, cargo c5 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c0 is unloaded from vehicle v0 with space s1 and space s0 at location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s2 at location l0, at location l1, cargo c5 is loaded in vehicle v0 with spaces s1 and s2, vehicle v0 moves from location l0 which has fuel-levels f2 and f3 to location l1, at location l0, cargo c6 is unloaded from vehicle v0 with spaces s0 and s2, at location l0, cargo c1 is loaded in vehicle v0 with spaces s2 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s2 at location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s0 and s1, cargo c7 is loaded in vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l1 which has fuel-levels f4 and f1 to location l0, at location l1, cargo c3 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s2 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f4 to location l0, cargo c1 is loaded in vehicle v0 with space s2 and space s0 at location l1, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l1, cargo c5 is loaded in vehicle v0 with spaces s2 and s0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s2 and s1, at location l0, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c4 is loaded in vehicle v0 with spaces s2 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c8 is loaded in vehicle v0 with space s0 and space s2 at location l1, cargo c8 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l0, cargo c8 is loaded in vehicle v0 with spaces s0 and s2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is unloaded from vehicle v0 with spaces s1 and s0, cargo c7 is unloaded from vehicle v0 with space s0 and space s2 at location l1, at location l1, cargo c4 is unloaded from vehicle v0 with spaces s2 and s1, cargo c2 is unloaded from vehicle v0 with space s2 and space s0 at location l1, at location l0, cargo c9 is loaded in vehicle v0 with spaces s1 and s2, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s2, at location l1, cargo c3 is unloaded from vehicle v0 with spaces s0 and s2, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, cargo c4 is unloaded from vehicle v0 with space s0 and space s2 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, at location l0, cargo c5 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f0, cargo c2 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is unloaded from vehicle v0 with spaces s2 and s0, cargo c3 is unloaded from vehicle v0 with space s2 and space s1 at location l1, at location l0, cargo c5 is unloaded from vehicle v0 with spaces s1 and s0, at location l1, cargo c8 is loaded in vehicle v0 with spaces s2 and s0, at location l0, cargo c3 is loaded in vehicle v0 with spaces s2 and s1, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c2 is unloaded from vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f0 and f5, at location l0, cargo c7 is loaded in vehicle v0 with spaces s1 and s2, cargo c9 is unloaded from vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f2 and f4 to location l0, cargo c6 is unloaded from vehicle v0 with space s2 and space s0 at location l0, cargo c7 is unloaded from vehicle v0 with space s1 and space s2 at location l1, at location l0, cargo c7 is unloaded from vehicle v0 with spaces s2 and s1, cargo c1 is unloaded from vehicle v0 with space s2 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f0 and f2 to location l0, at location l0, cargo c1 is loaded in vehicle v0 with spaces s2 and s0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f0 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f4, cargo c0 is unloaded from vehicle v0 with space s2 and space s1 at location l1, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l1, cargo c3 is unloaded from vehicle v0 with space s0 and space s1 at location l0, cargo c4 is loaded in vehicle v0 with space s0 and space s2 at location l0, cargo c5 is unloaded from vehicle v0 with space s2 and space s0 at location l1, vehicle v0 moves from location l0 which has fuel-levels f0 and f5 to location l1, at location l0, cargo c3 is loaded in vehicle v0 with spaces s2 and s0, cargo c3 is unloaded from vehicle v0 with space s1 and space s0 at location l0, cargo c4 is unloaded from vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s1 and s2, cargo c6 is unloaded from vehicle v0 with space s2 and space s0 at location l1, at location l1, cargo c1 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f1 and f3, cargo c2 is loaded in vehicle v0 with space s2 and space s1 at location l1, at location l0, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s2 and s1, cargo c7 is loaded in vehicle v0 with space s1 and space s2 at location l1, at location l0, cargo c8 is unloaded from vehicle v0 with spaces s2 and s0, cargo c8 is loaded in vehicle v0 with space s1 and space s2 at location l0, cargo c8 is unloaded from vehicle v0 with space s0 and space s2 at location l1, at location l1, cargo c8 is unloaded from vehicle v0 with spaces s2 and s0, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s0 and s2, at location l0, cargo c2 is loaded in vehicle v0 with spaces s2 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f5 to location l1, cargo c9 is loaded in vehicle v0 with space s2 and space s0 at location l1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s0 and s2, cargo c9 is unloaded from vehicle v0 with space s2 and space s1 at location l1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, at location l1, cargo c9 is loaded in vehicle v0 with spaces s0 and s2, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, at location l1, cargo c2 is loaded in vehicle v0 with spaces s0 and s2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f4 and f5 to location l1, cargo c8 is unloaded from vehicle v0 with space s2 and space s1 at location l0, cargo c0 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c9 is unloaded from vehicle v0 with space s2 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f2, at location l0, cargo c9 is unloaded from vehicle v0 with spaces s0 and s2, cargo c7 is loaded in vehicle v0 with space s2 and space s0 at location l0, cargo c5 is unloaded from vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s2 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f3, cargo c7 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l0, cargo c6 is unloaded from vehicle v0 with spaces s1 and s2, cargo c0 is unloaded from vehicle v0 with space s1 and space s2 at location l1, at location l0, cargo c7 is unloaded from vehicle v0 with spaces s1 and s2, at location l1, cargo c7 is unloaded from vehicle v0 with spaces s2 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s0 and space s2 at location l1, cargo c2 is unloaded from vehicle v0 with space s2 and space s1 at location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f4, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s2 and s0, cargo c6 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c4 is loaded in vehicle v0 with space s2 and space s0 at location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c8 is unloaded from vehicle v0 with space s1 and space s0 at location l0, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s2, at location l1, cargo c9 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f0 and f4 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l1 which has fuel-levels f1 and f0 to location l0, cargo c2 is loaded in vehicle v0 with space s0 and space s2 at location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s2 and s1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s0 and s2, cargo c1 is loaded in vehicle v0 with space s1 and space s2 at location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f0 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s2 and s1, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l1, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s2 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f1, at location l0, cargo c5 is loaded in vehicle v0 with spaces s0 and s2, cargo c4 is loaded in vehicle v0 with space s0 and space s1 at location l0, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s2, cargo c5 is unloaded from vehicle v0 with space s1 and space s2 at location l1, cargo c6 is loaded in vehicle v0 with space s0 and space s1 at location l0 and cargo c9 is unloaded from vehicle v0 with space s0 and space s2 at location l1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is situated at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 and location l1 are connected, location l0 has fuel f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "9eab20ab-488f-479c-bd6a-afae144870c1", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is situated at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 and location l1 are connected, location l0 has fuel f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "acec9ed3-4767-4e98-9904-70a035ce09a7", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, cargo c9 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 and vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is situated at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 and location l1 are connected, location l0 has fuel f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "d80f852c-dcca-4a11-9d50-c273cfd93fd7", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 10 the following actions are planned to be performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0. Is the action: cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0 executable at step 2, True or False?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is situated at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 and location l1 are connected, location l0 has fuel f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "42cf8abc-3cc9-4930-8973-65fb02f8d1d7", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 10 the following actions are planned to be performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s2 at location l1, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0. Is the action: at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s2 executable at step 7, True or False?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is situated at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 and location l1 are connected, location l0 has fuel f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "8c21df95-4a2e-4d38-930b-60ca7f8f1251", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is situated at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 and location l1 are connected, location l0 has fuel f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "4ade9ef2-8a68-4384-ada0-16a5da7a14b6", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c6 is unloaded from vehicle v0 with spaces s0 and s2 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "at location l0, cargo c6 is unloaded from vehicle v0 with spaces s0 and s2", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is situated at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 and location l1 are connected, location l0 has fuel f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "4ac86d7c-4073-4a1c-a2ed-153aeb5b0180", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l0, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1 and at location l0, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is situated at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 and location l1 are connected, location l0 has fuel f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "157aa036-6bf4-46d6-8d46-fc280c78b79b", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "cargo c3 is loaded in vehicle v0 with space s0 and space s1 at location l1, cargo c6 is loaded in vehicle v0 with space s2 and space s0 at location l0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s2 and s1, at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s2, vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f1, vehicle v0 moves from location l0 which has fuel-levels f2 and f4 to location l1, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s2 and s1, cargo c9 is unloaded from vehicle v0 with space s2 and space s0 at location l0, cargo c9 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is unloaded from vehicle v0 with space s1 and space s0 at location l1, cargo c8 is loaded in vehicle v0 with space s0 and space s1 at location l0, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l1, cargo c6 is unloaded from vehicle v0 with space s2 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f0 and f1, vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c7 is loaded in vehicle v0 with spaces s2 and s0, at location l1, cargo c8 is unloaded from vehicle v0 with spaces s1 and s0, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c8 is loaded in vehicle v0 with spaces s2 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f0, at location l1, cargo c4 is unloaded from vehicle v0 with spaces s2 and s0, cargo c4 is unloaded from vehicle v0 with space s1 and space s2 at location l1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s2, cargo c1 is loaded in vehicle v0 with space s0 and space s2 at location l0, cargo c1 is loaded in vehicle v0 with space s0 and space s1 at location l1, at location l0, cargo c4 is loaded in vehicle v0 with spaces s2 and s0, cargo c8 is loaded in vehicle v0 with space s1 and space s2 at location l1, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s1 and s2, cargo c1 is unloaded from vehicle v0 with space s0 and space s2 at location l0, cargo c7 is unloaded from vehicle v0 with space s0 and space s1 at location l0, at location l1, cargo c8 is unloaded from vehicle v0 with spaces s2 and s1, cargo c0 is unloaded from vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f1 and f4, vehicle v0 moves to location l1 from location l0 that has fuel level f0 and f2, cargo c8 is unloaded from vehicle v0 with space s0 and space s2 at location l0, cargo c8 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s1 and s2, at location l1, cargo c7 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f2, cargo c8 is loaded in vehicle v0 with space s2 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f5, cargo c8 is unloaded from vehicle v0 with space s1 and space s2 at location l1, cargo c6 is loaded in vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is unloaded from vehicle v0 with spaces s2 and s0, cargo c8 is loaded in vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f5, cargo c2 is loaded in vehicle v0 with space s1 and space s2 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f5 to location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f3, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s2, at location l1, cargo c1 is unloaded from vehicle v0 with spaces s0 and s2, cargo c3 is loaded in vehicle v0 with space s0 and space s2 at location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s2, cargo c9 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f0 to location l0, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s2, vehicle v0 moves to location l0 from location l1 that has fuel level f1 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s2 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f0, at location l1, cargo c1 is unloaded from vehicle v0 with spaces s2 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f1, cargo c0 is loaded in vehicle v0 with space s0 and space s1 at location l1, cargo c5 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c7 is unloaded from vehicle v0 with space s0 and space s2 at location l0, cargo c7 is unloaded from vehicle v0 with space s2 and space s0 at location l0, cargo c2 is unloaded from vehicle v0 with space s2 and space s0 at location l0, cargo c4 is loaded in vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c7 is loaded in vehicle v0 with spaces s0 and s1, cargo c9 is loaded in vehicle v0 with space s1 and space s0 at location l0, at location l0, cargo c0 is loaded in vehicle v0 with spaces s0 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s0, cargo c5 is loaded in vehicle v0 with space s0 and space s1 at location l1, cargo c4 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l1, cargo c9 is loaded in vehicle v0 with spaces s0 and s1, at location l0, cargo c8 is loaded in vehicle v0 with spaces s2 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f5, cargo c8 is unloaded from vehicle v0 with space s0 and space s1 at location l0, at location l0, cargo c0 is loaded in vehicle v0 with spaces s0 and s1, at location l1, cargo c7 is unloaded from vehicle v0 with spaces s2 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f2 to location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f0 and f1, vehicle v0 moves from location l1 which has fuel-levels f3 and f0 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s2 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s1 and s2, vehicle v0 moves from location l0 which has fuel-levels f3 and f1 to location l1, cargo c6 is unloaded from vehicle v0 with space s1 and space s0 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s2 at location l0, cargo c7 is loaded in vehicle v0 with space s1 and space s0 at location l0, at location l1, cargo c9 is loaded in vehicle v0 with spaces s1 and s2, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s2, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s0 and s2, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s1 and s0, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s2 and s1, at location l0, cargo c7 is loaded in vehicle v0 with spaces s0 and s2, cargo c5 is loaded in vehicle v0 with space s0 and space s2 at location l1, vehicle v0 moves from location l1 which has fuel-levels f4 and f2 to location l0, at location l1, cargo c7 is loaded in vehicle v0 with spaces s0 and s2, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f1, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0, cargo c1 is loaded in vehicle v0 with space s0 and space s2 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l0, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, cargo c9 is loaded in vehicle v0 with space s2 and space s1 at location l1, at location l1, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c7 is unloaded from vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l0, cargo c3 is loaded in vehicle v0 with spaces s0 and s2, cargo c3 is unloaded from vehicle v0 with space s2 and space s0 at location l0, at location l1, cargo c9 is unloaded from vehicle v0 with spaces s2 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c9 is unloaded from vehicle v0 with spaces s1 and s0, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c0 is loaded in vehicle v0 with space s2 and space s0 at location l1, at location l0, cargo c5 is unloaded from vehicle v0 with spaces s2 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f0, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s2 and s0, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, at location l0, cargo c3 is loaded in vehicle v0 with spaces s0 and s1, at location l1, cargo c8 is loaded in vehicle v0 with spaces s1 and s0, cargo c4 is loaded in vehicle v0 with space s1 and space s2 at location l0, at location l1, cargo c9 is unloaded from vehicle v0 with spaces s1 and s2, cargo c9 is loaded in vehicle v0 with space s2 and space s0 at location l0, cargo c9 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f3, cargo c9 is loaded in vehicle v0 with space s0 and space s2 at location l0, at location l0, cargo c9 is unloaded from vehicle v0 with spaces s1 and s2, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, at location l1, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f2, vehicle v0 moves from location l0 which has fuel-levels f1 and f5 to location l1, at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f3, cargo c0 is unloaded from vehicle v0 with space s0 and space s2 at location l0, cargo c2 is loaded in vehicle v0 with space s2 and space s0 at location l1, at location l0, cargo c3 is loaded in vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is unloaded from vehicle v0 with spaces s0 and s2, cargo c2 is loaded in vehicle v0 with space s0 and space s1 at location l0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, at location l0, cargo c5 is loaded in vehicle v0 with spaces s0 and s1, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f0 and f3 to location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f1 and f5, vehicle v0 moves to location l0 from location l1 that has fuel level f0 and f4, vehicle v0 moves from location l0 which has fuel-levels f3 and f0 to location l1, cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l1, at location l0, cargo c9 is loaded in vehicle v0 with spaces s0 and s1, at location l1, cargo c7 is unloaded from vehicle v0 with spaces s1 and s0, cargo c6 is loaded in vehicle v0 with space s2 and space s1 at location l1, at location l0, cargo c1 is loaded in vehicle v0 with spaces s0 and s1, cargo c3 is unloaded from vehicle v0 with space s2 and space s1 at location l0, at location l1, cargo c3 is loaded in vehicle v0 with spaces s2 and s0, cargo c5 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c0 is unloaded from vehicle v0 with space s1 and space s0 at location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s1 and space s2 at location l1, vehicle v0 moves from location l0 which has fuel-levels f2 and f3 to location l1, at location l0, cargo c6 is unloaded from vehicle v0 with spaces s0 and s2, cargo c1 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s2, cargo c2 is loaded in vehicle v0 with space s0 and space s1 at location l1, cargo c7 is loaded in vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f1, at location l1, cargo c3 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s2 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f4 to location l0, cargo c1 is loaded in vehicle v0 with space s2 and space s0 at location l1, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l1, cargo c5 is loaded in vehicle v0 with spaces s2 and s0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s2 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l0, cargo c4 is loaded in vehicle v0 with space s2 and space s1 at location l1, cargo c4 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c8 is loaded in vehicle v0 with space s0 and space s2 at location l1, cargo c8 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l0, cargo c8 is loaded in vehicle v0 with spaces s0 and s2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is unloaded from vehicle v0 with spaces s1 and s0, cargo c7 is unloaded from vehicle v0 with space s0 and space s2 at location l1, cargo c4 is unloaded from vehicle v0 with space s2 and space s1 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s2 and s0, at location l0, cargo c9 is loaded in vehicle v0 with spaces s1 and s2, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s2, at location l1, cargo c3 is unloaded from vehicle v0 with spaces s0 and s2, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, cargo c4 is unloaded from vehicle v0 with space s0 and space s2 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, at location l0, cargo c5 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f5 and f0 to location l1, cargo c2 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c4 is loaded in vehicle v0 with space s1 and space s2 at location l1, at location l0, cargo c5 is unloaded from vehicle v0 with spaces s2 and s0, cargo c3 is unloaded from vehicle v0 with space s2 and space s1 at location l1, at location l0, cargo c5 is unloaded from vehicle v0 with spaces s1 and s0, at location l1, cargo c8 is loaded in vehicle v0 with spaces s2 and s0, cargo c3 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f0 and f5 to location l0, at location l0, cargo c7 is loaded in vehicle v0 with spaces s1 and s2, at location l1, cargo c9 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f4, cargo c6 is unloaded from vehicle v0 with space s2 and space s0 at location l0, cargo c7 is unloaded from vehicle v0 with space s1 and space s2 at location l1, cargo c7 is unloaded from vehicle v0 with space s2 and space s1 at location l0, at location l1, cargo c1 is unloaded from vehicle v0 with spaces s2 and s1, vehicle v0 moves from location l1 which has fuel-levels f0 and f2 to location l0, cargo c1 is loaded in vehicle v0 with space s2 and space s0 at location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f0, vehicle v0 moves from location l0 which has fuel-levels f1 and f4 to location l1, cargo c0 is unloaded from vehicle v0 with space s2 and space s1 at location l1, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l1, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s0 and s1, cargo c4 is loaded in vehicle v0 with space s0 and space s2 at location l0, cargo c5 is unloaded from vehicle v0 with space s2 and space s0 at location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f0 and f5, cargo c3 is loaded in vehicle v0 with space s2 and space s0 at location l0, cargo c3 is unloaded from vehicle v0 with space s1 and space s0 at location l0, at location l1, cargo c4 is unloaded from vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s1 and s2, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s2 and s0, cargo c1 is unloaded from vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f1 and f3 to location l0, at location l1, cargo c2 is loaded in vehicle v0 with spaces s2 and s1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l0, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s2 and s1, at location l1, cargo c7 is loaded in vehicle v0 with spaces s1 and s2, cargo c8 is unloaded from vehicle v0 with space s2 and space s0 at location l0, cargo c8 is loaded in vehicle v0 with space s1 and space s2 at location l0, at location l1, cargo c8 is unloaded from vehicle v0 with spaces s0 and s2, at location l1, cargo c8 is unloaded from vehicle v0 with spaces s2 and s0, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c0 is loaded in vehicle v0 with space s0 and space s2 at location l1, cargo c2 is loaded in vehicle v0 with space s2 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f5, at location l1, cargo c9 is loaded in vehicle v0 with spaces s2 and s0, cargo c6 is loaded in vehicle v0 with space s0 and space s2 at location l0, at location l1, cargo c9 is unloaded from vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c9 is loaded in vehicle v0 with spaces s0 and s2, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, cargo c2 is loaded in vehicle v0 with space s0 and space s2 at location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f5, at location l0, cargo c8 is unloaded from vehicle v0 with spaces s2 and s1, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c9 is unloaded from vehicle v0 with spaces s2 and s1, vehicle v0 moves from location l0 which has fuel-levels f1 and f2 to location l1, cargo c9 is unloaded from vehicle v0 with space s0 and space s2 at location l0, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s0, cargo c5 is unloaded from vehicle v0 with space s1 and space s0 at location l1, cargo c6 is loaded in vehicle v0 with space s2 and space s0 at location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f3, cargo c7 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l0, cargo c6 is unloaded from vehicle v0 with spaces s1 and s2, cargo c0 is unloaded from vehicle v0 with space s1 and space s2 at location l1, cargo c7 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l1, cargo c7 is unloaded from vehicle v0 with spaces s2 and s0, cargo c6 is loaded in vehicle v0 with space s0 and space s2 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s2 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f4, cargo c0 is unloaded from vehicle v0 with space s2 and space s0 at location l1, cargo c6 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l1, cargo c4 is loaded in vehicle v0 with spaces s2 and s0, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, at location l0, cargo c8 is unloaded from vehicle v0 with spaces s1 and s0, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s2, cargo c9 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f0 and f4, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f1 and f0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s0 and s2, cargo c0 is unloaded from vehicle v0 with space s2 and space s1 at location l0, at location l1, cargo c4 is loaded in vehicle v0 with spaces s0 and s2, at location l0, cargo c1 is loaded in vehicle v0 with spaces s1 and s2, vehicle v0 moves from location l1 which has fuel-levels f0 and f3 to location l0, at location l1, cargo c1 is loaded in vehicle v0 with spaces s2 and s1, at location l1, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, cargo c0 is unloaded from vehicle v0 with space s2 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f1, at location l0, cargo c5 is loaded in vehicle v0 with spaces s0 and s2, at location l0, cargo c4 is loaded in vehicle v0 with spaces s0 and s1, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s2 at location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s1 and s2, cargo c6 is loaded in vehicle v0 with space s0 and space s1 at location l0 and cargo c9 is unloaded from vehicle v0 with space s0 and space s2 at location l1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is situated at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 and location l1 are connected, location l0 has fuel f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "a1d2e55d-bf18-4f65-8144-49c6eea7b7f7", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 and vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is situated at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 and location l1 are connected, location l0 has fuel f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "08cd4f1e-09ed-44f8-8ebb-0faeb105c552", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: at location l0, cargo c0 is unloaded from vehicle v0 with spaces s2 and s1, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is situated at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 and location l1 are connected, location l0 has fuel f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "ff38035b-f609-4577-a1be-ea77c8ba9a4d", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 15 the following actions are planned to be performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1. Is the action: at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 executable at step 14, True or False?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is situated at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 and location l1 are connected, location l0 has fuel f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "238f5468-450d-46fb-8581-7669e905cc40", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 15 the following actions are planned to be performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c9 is unloaded from vehicle v0 with space s0 and space s2 at location l1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1. Is the action: cargo c9 is unloaded from vehicle v0 with space s0 and space s2 at location l1 executable at step 2, True or False?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is situated at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 and location l1 are connected, location l0 has fuel f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "b200c811-9d73-4e76-97df-e4c1a36f5c80", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is situated at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 and location l1 are connected, location l0 has fuel f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "4cba175d-ca3a-4baa-a6a1-8b73a2468cc9", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c5 is unloaded from vehicle v0 with space s2 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "cargo c5 is unloaded from vehicle v0 with space s2 and space s1 at location l0", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is situated at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 and location l1 are connected, location l0 has fuel f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "63bd4777-e952-4088-ad0b-158397e492b8", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "at location l0, cargo c9 is loaded in vehicle v0 with spaces s1 and s0, at location l0, cargo c7 is loaded in vehicle v0 with spaces s1 and s0, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0, at location l0, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, at location l0, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is situated at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 and location l1 are connected, location l0 has fuel f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "c668c5f4-5a86-4450-88b5-41ae82bcf53c", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "cargo c3 is loaded in vehicle v0 with space s0 and space s1 at location l1, cargo c6 is loaded in vehicle v0 with space s2 and space s0 at location l0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s2 and s1, cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is unloaded from vehicle v0 with space s0 and space s2 at location l1, vehicle v0 moves from location l0 which has fuel-levels f5 and f1 to location l1, vehicle v0 moves from location l0 which has fuel-levels f2 and f4 to location l1, cargo c1 is unloaded from vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c9 is unloaded from vehicle v0 with spaces s2 and s0, cargo c9 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s1 and s0, cargo c8 is loaded in vehicle v0 with space s0 and space s1 at location l0, at location l1, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is unloaded from vehicle v0 with spaces s2 and s1, vehicle v0 moves from location l0 which has fuel-levels f0 and f1 to location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c7 is loaded in vehicle v0 with spaces s2 and s0, cargo c8 is unloaded from vehicle v0 with space s1 and space s0 at location l1, cargo c4 is unloaded from vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c8 is loaded in vehicle v0 with space s2 and space s1 at location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f0, cargo c4 is unloaded from vehicle v0 with space s2 and space s0 at location l1, cargo c4 is unloaded from vehicle v0 with space s1 and space s2 at location l1, cargo c6 is loaded in vehicle v0 with space s1 and space s2 at location l0, cargo c1 is loaded in vehicle v0 with space s0 and space s2 at location l0, at location l1, cargo c1 is loaded in vehicle v0 with spaces s0 and s1, cargo c4 is loaded in vehicle v0 with space s2 and space s0 at location l0, at location l1, cargo c8 is loaded in vehicle v0 with spaces s1 and s2, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s1 and s2, cargo c1 is unloaded from vehicle v0 with space s0 and space s2 at location l0, cargo c7 is unloaded from vehicle v0 with space s0 and space s1 at location l0, cargo c8 is unloaded from vehicle v0 with space s2 and space s1 at location l1, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f1 and f4 to location l0, vehicle v0 moves from location l0 which has fuel-levels f0 and f2 to location l1, cargo c8 is unloaded from vehicle v0 with space s0 and space s2 at location l0, at location l0, cargo c8 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s1 and s2, cargo c7 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f2, at location l1, cargo c8 is loaded in vehicle v0 with spaces s2 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f5, cargo c8 is unloaded from vehicle v0 with space s1 and space s2 at location l1, cargo c6 is loaded in vehicle v0 with space s0 and space s1 at location l1, cargo c3 is unloaded from vehicle v0 with space s2 and space s0 at location l1, at location l1, cargo c8 is loaded in vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f5, cargo c2 is loaded in vehicle v0 with space s1 and space s2 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f5, vehicle v0 moves from location l1 which has fuel-levels f5 and f3 to location l0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s2, at location l1, cargo c1 is unloaded from vehicle v0 with spaces s0 and s2, at location l1, cargo c3 is loaded in vehicle v0 with spaces s0 and s2, cargo c5 is unloaded from vehicle v0 with space s0 and space s2 at location l1, at location l1, cargo c9 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f0 to location l0, cargo c3 is loaded in vehicle v0 with space s1 and space s2 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f1 and f2, cargo c1 is unloaded from vehicle v0 with space s2 and space s0 at location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f0, cargo c1 is unloaded from vehicle v0 with space s2 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f1 to location l0, cargo c0 is loaded in vehicle v0 with space s0 and space s1 at location l1, cargo c5 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c7 is unloaded from vehicle v0 with spaces s0 and s2, cargo c7 is unloaded from vehicle v0 with space s2 and space s0 at location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s2 and s0, at location l1, cargo c4 is loaded in vehicle v0 with spaces s0 and s1, at location l1, cargo c7 is loaded in vehicle v0 with spaces s0 and s1, cargo c0 is loaded in vehicle v0 with space s0 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c5 is loaded in vehicle v0 with space s2 and space s0 at location l0, at location l1, cargo c5 is loaded in vehicle v0 with spaces s0 and s1, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s1 and s2, cargo c9 is loaded in vehicle v0 with space s0 and space s1 at location l1, at location l0, cargo c8 is loaded in vehicle v0 with spaces s2 and s0, vehicle v0 moves from location l1 which has fuel-levels f2 and f5 to location l0, cargo c8 is unloaded from vehicle v0 with space s0 and space s1 at location l0, cargo c0 is loaded in vehicle v0 with space s0 and space s1 at location l0, cargo c7 is unloaded from vehicle v0 with space s2 and space s1 at location l1, vehicle v0 moves from location l0 which has fuel-levels f4 and f2 to location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f0 and f1, vehicle v0 moves from location l1 which has fuel-levels f3 and f0 to location l0, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s2, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s1 and s2, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f1, cargo c6 is unloaded from vehicle v0 with space s1 and space s0 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s2, at location l1, cargo c9 is loaded in vehicle v0 with spaces s1 and s2, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s2, cargo c3 is unloaded from vehicle v0 with space s0 and space s2 at location l0, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s1 and s0, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s2 and s1, at location l0, cargo c7 is loaded in vehicle v0 with spaces s0 and s2, at location l1, cargo c5 is loaded in vehicle v0 with spaces s0 and s2, vehicle v0 moves from location l1 which has fuel-levels f4 and f2 to location l0, cargo c7 is loaded in vehicle v0 with space s0 and space s2 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s0 and s2, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c9 is loaded in vehicle v0 with space s2 and space s1 at location l1, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l1, cargo c7 is unloaded from vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c3 is loaded in vehicle v0 with space s0 and space s2 at location l0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s2 and s0, cargo c9 is unloaded from vehicle v0 with space s2 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c9 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c0 is loaded in vehicle v0 with space s2 and space s0 at location l1, at location l0, cargo c5 is unloaded from vehicle v0 with spaces s2 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f0 to location l1, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s2 and s0, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s0 and space s1 at location l0, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l0, cargo c4 is loaded in vehicle v0 with spaces s1 and s2, at location l1, cargo c9 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c9 is loaded in vehicle v0 with spaces s2 and s0, cargo c9 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l1 which has fuel-levels f2 and f3 to location l0, at location l0, cargo c9 is loaded in vehicle v0 with spaces s0 and s2, at location l0, cargo c9 is unloaded from vehicle v0 with spaces s1 and s2, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, at location l1, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f2, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f5, at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s0, vehicle v0 moves from location l0 which has fuel-levels f5 and f3 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s2 at location l0, at location l1, cargo c2 is loaded in vehicle v0 with spaces s2 and s0, cargo c3 is loaded in vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is unloaded from vehicle v0 with spaces s0 and s2, cargo c2 is loaded in vehicle v0 with space s0 and space s1 at location l0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l0, cargo c5 is loaded in vehicle v0 with spaces s0 and s1, cargo c1 is unloaded from vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f0 and f3 to location l1, vehicle v0 moves from location l1 which has fuel-levels f1 and f5 to location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f0 and f4, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f0, at location l1, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c9 is loaded in vehicle v0 with spaces s0 and s1, cargo c7 is unloaded from vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s2 and s1, cargo c1 is loaded in vehicle v0 with space s0 and space s1 at location l0, cargo c3 is unloaded from vehicle v0 with space s2 and space s1 at location l0, at location l1, cargo c3 is loaded in vehicle v0 with spaces s2 and s0, at location l1, cargo c5 is loaded in vehicle v0 with spaces s1 and s0, cargo c0 is unloaded from vehicle v0 with space s1 and space s0 at location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s1 and space s2 at location l1, vehicle v0 moves from location l0 which has fuel-levels f2 and f3 to location l1, at location l0, cargo c6 is unloaded from vehicle v0 with spaces s0 and s2, at location l0, cargo c1 is loaded in vehicle v0 with spaces s2 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s2 at location l1, cargo c2 is loaded in vehicle v0 with space s0 and space s1 at location l1, at location l0, cargo c7 is loaded in vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f4 and f1 to location l0, cargo c3 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s2 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f4, at location l1, cargo c1 is loaded in vehicle v0 with spaces s2 and s0, cargo c5 is loaded in vehicle v0 with space s2 and space s0 at location l1, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s2 and s1, at location l0, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c4 is loaded in vehicle v0 with space s2 and space s1 at location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l1, cargo c8 is loaded in vehicle v0 with spaces s0 and s2, cargo c8 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c8 is loaded in vehicle v0 with space s0 and space s2 at location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is unloaded from vehicle v0 with spaces s1 and s0, cargo c7 is unloaded from vehicle v0 with space s0 and space s2 at location l1, at location l1, cargo c4 is unloaded from vehicle v0 with spaces s2 and s1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s2 and s0, cargo c9 is loaded in vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s2, at location l1, cargo c3 is unloaded from vehicle v0 with spaces s0 and s2, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, at location l1, cargo c4 is unloaded from vehicle v0 with spaces s0 and s2, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f5 and f0 to location l1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s2 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c4 is loaded in vehicle v0 with space s1 and space s2 at location l1, cargo c5 is unloaded from vehicle v0 with space s2 and space s0 at location l0, cargo c3 is unloaded from vehicle v0 with space s2 and space s1 at location l1, at location l0, cargo c5 is unloaded from vehicle v0 with spaces s1 and s0, cargo c8 is loaded in vehicle v0 with space s2 and space s0 at location l1, at location l0, cargo c3 is loaded in vehicle v0 with spaces s2 and s1, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c2 is unloaded from vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f0 and f5, cargo c7 is loaded in vehicle v0 with space s1 and space s2 at location l0, at location l1, cargo c9 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f2 and f4 to location l0, cargo c6 is unloaded from vehicle v0 with space s2 and space s0 at location l0, cargo c7 is unloaded from vehicle v0 with space s1 and space s2 at location l1, at location l0, cargo c7 is unloaded from vehicle v0 with spaces s2 and s1, at location l1, cargo c1 is unloaded from vehicle v0 with spaces s2 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f0 and f2, cargo c1 is loaded in vehicle v0 with space s2 and space s0 at location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f0 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f4 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s2 and s1, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l1, cargo c3 is unloaded from vehicle v0 with space s0 and space s1 at location l0, at location l0, cargo c4 is loaded in vehicle v0 with spaces s0 and s2, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s2 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f0 and f5, cargo c3 is loaded in vehicle v0 with space s2 and space s0 at location l0, cargo c3 is unloaded from vehicle v0 with space s1 and space s0 at location l0, cargo c4 is unloaded from vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s1 and space s2 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s2 and s0, at location l1, cargo c1 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f1 and f3 to location l0, at location l1, cargo c2 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, cargo c4 is unloaded from vehicle v0 with space s2 and space s1 at location l0, cargo c7 is loaded in vehicle v0 with space s1 and space s2 at location l1, at location l0, cargo c8 is unloaded from vehicle v0 with spaces s2 and s0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s2, cargo c8 is unloaded from vehicle v0 with space s0 and space s2 at location l1, cargo c8 is unloaded from vehicle v0 with space s2 and space s0 at location l1, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s0 and s2, cargo c2 is loaded in vehicle v0 with space s2 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f5 to location l1, at location l1, cargo c9 is loaded in vehicle v0 with spaces s2 and s0, cargo c6 is loaded in vehicle v0 with space s0 and space s2 at location l0, at location l1, cargo c9 is unloaded from vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, cargo c9 is loaded in vehicle v0 with space s0 and space s2 at location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s0 and s2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l0 which has fuel-levels f4 and f5 to location l1, at location l0, cargo c8 is unloaded from vehicle v0 with spaces s2 and s1, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s1 and s2, cargo c9 is unloaded from vehicle v0 with space s2 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f2 to location l1, cargo c9 is unloaded from vehicle v0 with space s0 and space s2 at location l0, cargo c7 is loaded in vehicle v0 with space s2 and space s0 at location l0, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is loaded in vehicle v0 with spaces s2 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f3, cargo c7 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l0, cargo c6 is unloaded from vehicle v0 with spaces s1 and s2, cargo c0 is unloaded from vehicle v0 with space s1 and space s2 at location l1, cargo c7 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c7 is unloaded from vehicle v0 with space s2 and space s0 at location l1, at location l0, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, cargo c6 is loaded in vehicle v0 with space s0 and space s2 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s2 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f4 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s2 and s0, cargo c6 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c4 is loaded in vehicle v0 with space s2 and space s0 at location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l0, cargo c8 is unloaded from vehicle v0 with spaces s1 and s0, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s2, cargo c9 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f0 and f4, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f1 and f0, cargo c2 is loaded in vehicle v0 with space s0 and space s2 at location l0, cargo c0 is unloaded from vehicle v0 with space s2 and space s1 at location l0, at location l1, cargo c4 is loaded in vehicle v0 with spaces s0 and s2, cargo c1 is loaded in vehicle v0 with space s1 and space s2 at location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f0 and f3, cargo c1 is loaded in vehicle v0 with space s2 and space s1 at location l1, at location l1, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s2 and s0, vehicle v0 moves from location l0 which has fuel-levels f4 and f1 to location l1, cargo c5 is loaded in vehicle v0 with space s0 and space s2 at location l0, cargo c4 is loaded in vehicle v0 with space s0 and space s1 at location l0, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s2, cargo c5 is unloaded from vehicle v0 with space s1 and space s2 at location l1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s0 and s1 and cargo c9 is unloaded from vehicle v0 with space s0 and space s2 at location l1", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is situated at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 and location l1 are connected, location l0 has fuel f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "a4d21a2a-c7b9-449c-9b0a-e250edd913c9", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 and vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is situated at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 and location l1 are connected, location l0 has fuel f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "da4bf50e-c04d-43ce-9d77-b95e28480971", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, vehicle v0 moves from location l1 which has fuel-levels f5 and f1 to location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1 and vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is situated at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 and location l1 are connected, location l0 has fuel f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "aced2428-293e-45fd-8ea2-e156c642bdd5", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 19 the following actions are planned to be performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0. Is the action: at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 executable at step 9, True or False?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is situated at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 and location l1 are connected, location l0 has fuel f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "d980b93b-f3fe-4275-a5ba-c9ad336e3c7d", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 19 the following actions are planned to be performed: at location l0, cargo c0 is unloaded from vehicle v0 with spaces s2 and s0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0. Is the action: cargo c0 is unloaded from vehicle v0 with space s2 and space s0 at location l0 executable at step 1, True or False?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is situated at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 and location l1 are connected, location l0 has fuel f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "1e5d4b1d-569f-4822-b0f1-411cd8406f92", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is situated at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 and location l1 are connected, location l0 has fuel f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "fcfbf522-e72b-48fe-b5cf-c1bc7e6b906f", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l0, cargo c2 is loaded in vehicle v0 with spaces s0 and s2, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "at location l0, cargo c2 is loaded in vehicle v0 with spaces s0 and s2", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is situated at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 and location l1 are connected, location l0 has fuel f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "63bebde8-d45c-4e1c-bca9-a2122e999f57", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "cargo c8 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c7 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l1 which has fuel-levels f1 and f0 to location l0", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is situated at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 and location l1 are connected, location l0 has fuel f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "56a9c8c1-e6f4-4c7d-a07d-ee719a1346f5", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "at location l1, cargo c3 is loaded in vehicle v0 with spaces s0 and s1, cargo c6 is loaded in vehicle v0 with space s2 and space s0 at location l0, cargo c6 is unloaded from vehicle v0 with space s2 and space s1 at location l1, cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s2, vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f4, cargo c1 is unloaded from vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c9 is unloaded from vehicle v0 with spaces s2 and s0, at location l0, cargo c9 is loaded in vehicle v0 with spaces s2 and s1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s1 and s0, cargo c8 is loaded in vehicle v0 with space s0 and space s1 at location l0, at location l1, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is unloaded from vehicle v0 with spaces s2 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f0 and f1, vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c7 is loaded in vehicle v0 with space s2 and space s0 at location l1, cargo c8 is unloaded from vehicle v0 with space s1 and space s0 at location l1, cargo c4 is unloaded from vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s2 and s1, vehicle v0 moves from location l1 which has fuel-levels f4 and f0 to location l0, at location l1, cargo c4 is unloaded from vehicle v0 with spaces s2 and s0, cargo c4 is unloaded from vehicle v0 with space s1 and space s2 at location l1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s2, cargo c1 is loaded in vehicle v0 with space s0 and space s2 at location l0, at location l1, cargo c1 is loaded in vehicle v0 with spaces s0 and s1, at location l0, cargo c4 is loaded in vehicle v0 with spaces s2 and s0, at location l1, cargo c8 is loaded in vehicle v0 with spaces s1 and s2, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s2, cargo c7 is unloaded from vehicle v0 with space s0 and space s1 at location l0, at location l1, cargo c8 is unloaded from vehicle v0 with spaces s2 and s1, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f1 and f4, vehicle v0 moves from location l0 which has fuel-levels f0 and f2 to location l1, cargo c8 is unloaded from vehicle v0 with space s0 and space s2 at location l0, at location l0, cargo c8 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s1 and space s2 at location l0, cargo c7 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f2 to location l0, at location l1, cargo c8 is loaded in vehicle v0 with spaces s2 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f5, cargo c8 is unloaded from vehicle v0 with space s1 and space s2 at location l1, cargo c6 is loaded in vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is unloaded from vehicle v0 with spaces s2 and s0, at location l1, cargo c8 is loaded in vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f5, cargo c2 is loaded in vehicle v0 with space s1 and space s2 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f5, vehicle v0 moves from location l1 which has fuel-levels f5 and f3 to location l0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s2, cargo c1 is unloaded from vehicle v0 with space s0 and space s2 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s0 and s2, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s2, cargo c9 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f0, cargo c3 is loaded in vehicle v0 with space s1 and space s2 at location l1, vehicle v0 moves from location l1 which has fuel-levels f1 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s2 and space s0 at location l0, vehicle v0 moves from location l1 which has fuel-levels f2 and f0 to location l0, cargo c1 is unloaded from vehicle v0 with space s2 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f1 to location l0, cargo c0 is loaded in vehicle v0 with space s0 and space s1 at location l1, cargo c5 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c7 is unloaded from vehicle v0 with space s0 and space s2 at location l0, at location l0, cargo c7 is unloaded from vehicle v0 with spaces s2 and s0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s2 and s0, at location l1, cargo c4 is loaded in vehicle v0 with spaces s0 and s1, at location l1, cargo c7 is loaded in vehicle v0 with spaces s0 and s1, cargo c9 is loaded in vehicle v0 with space s1 and space s0 at location l0, at location l0, cargo c0 is loaded in vehicle v0 with spaces s0 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s0, at location l1, cargo c5 is loaded in vehicle v0 with spaces s0 and s1, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s1 and s2, cargo c9 is loaded in vehicle v0 with space s0 and space s1 at location l1, cargo c8 is loaded in vehicle v0 with space s2 and space s0 at location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f5, at location l0, cargo c8 is unloaded from vehicle v0 with spaces s0 and s1, cargo c0 is loaded in vehicle v0 with space s0 and space s1 at location l0, cargo c7 is unloaded from vehicle v0 with space s2 and space s1 at location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f2, vehicle v0 moves from location l1 which has fuel-levels f0 and f1 to location l0, vehicle v0 moves from location l1 which has fuel-levels f3 and f0 to location l0, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s2, cargo c6 is unloaded from vehicle v0 with space s1 and space s2 at location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f1, at location l0, cargo c6 is unloaded from vehicle v0 with spaces s1 and s0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s2, cargo c7 is loaded in vehicle v0 with space s1 and space s0 at location l0, cargo c9 is loaded in vehicle v0 with space s1 and space s2 at location l1, cargo c4 is unloaded from vehicle v0 with space s0 and space s2 at location l0, cargo c3 is unloaded from vehicle v0 with space s0 and space s2 at location l0, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s1 and s0, cargo c5 is unloaded from vehicle v0 with space s2 and space s1 at location l1, cargo c7 is loaded in vehicle v0 with space s0 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s0 and space s2 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f2, at location l1, cargo c7 is loaded in vehicle v0 with spaces s0 and s2, vehicle v0 moves from location l1 which has fuel-levels f5 and f1 to location l0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c1 is loaded in vehicle v0 with spaces s0 and s2, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l0, cargo c9 is loaded in vehicle v0 with space s2 and space s1 at location l1, at location l1, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c7 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l0, cargo c3 is loaded in vehicle v0 with spaces s0 and s2, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s2 and s0, cargo c9 is unloaded from vehicle v0 with space s2 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c9 is unloaded from vehicle v0 with spaces s1 and s0, at location l0, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s2 and s0, cargo c5 is unloaded from vehicle v0 with space s2 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f0, cargo c4 is unloaded from vehicle v0 with space s2 and space s0 at location l0, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s0 and space s1 at location l0, at location l1, cargo c8 is loaded in vehicle v0 with spaces s1 and s0, cargo c4 is loaded in vehicle v0 with space s1 and space s2 at location l0, at location l1, cargo c9 is unloaded from vehicle v0 with spaces s1 and s2, cargo c9 is loaded in vehicle v0 with space s2 and space s0 at location l0, at location l0, cargo c9 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f3, at location l0, cargo c9 is loaded in vehicle v0 with spaces s0 and s2, cargo c9 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f2, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f5, at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s0, vehicle v0 moves from location l0 which has fuel-levels f5 and f3 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s2 at location l0, cargo c2 is loaded in vehicle v0 with space s2 and space s0 at location l1, at location l0, cargo c3 is loaded in vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is unloaded from vehicle v0 with spaces s0 and s2, cargo c2 is loaded in vehicle v0 with space s0 and space s1 at location l0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, cargo c5 is loaded in vehicle v0 with space s0 and space s1 at location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f0 and f3, vehicle v0 moves to location l0 from location l1 that has fuel level f1 and f5, vehicle v0 moves from location l1 which has fuel-levels f0 and f4 to location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f0, cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l1, cargo c9 is loaded in vehicle v0 with space s0 and space s1 at location l0, cargo c7 is unloaded from vehicle v0 with space s1 and space s0 at location l1, cargo c6 is loaded in vehicle v0 with space s2 and space s1 at location l1, at location l0, cargo c1 is loaded in vehicle v0 with spaces s0 and s1, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s2 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s2 and s0, cargo c5 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c0 is unloaded from vehicle v0 with space s1 and space s0 at location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s1 and space s2 at location l1, vehicle v0 moves from location l0 which has fuel-levels f2 and f3 to location l1, at location l0, cargo c6 is unloaded from vehicle v0 with spaces s0 and s2, cargo c1 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s0 and s1, cargo c7 is loaded in vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f1, cargo c3 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s2 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f4, cargo c1 is loaded in vehicle v0 with space s2 and space s0 at location l1, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s0 at location l1, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s2 and s1, at location l0, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c4 is loaded in vehicle v0 with space s2 and space s1 at location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c8 is loaded in vehicle v0 with space s0 and space s2 at location l1, at location l0, cargo c8 is loaded in vehicle v0 with spaces s0 and s2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is unloaded from vehicle v0 with spaces s1 and s0, at location l1, cargo c7 is unloaded from vehicle v0 with spaces s0 and s2, at location l1, cargo c4 is unloaded from vehicle v0 with spaces s2 and s1, cargo c2 is unloaded from vehicle v0 with space s2 and space s0 at location l1, cargo c9 is loaded in vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s2, cargo c3 is unloaded from vehicle v0 with space s0 and space s2 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, at location l1, cargo c4 is unloaded from vehicle v0 with spaces s0 and s2, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, at location l0, cargo c5 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f0, cargo c2 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s2 at location l1, at location l0, cargo c5 is unloaded from vehicle v0 with spaces s2 and s0, cargo c3 is unloaded from vehicle v0 with space s2 and space s1 at location l1, cargo c5 is unloaded from vehicle v0 with space s1 and space s0 at location l0, at location l1, cargo c8 is loaded in vehicle v0 with spaces s2 and s0, cargo c3 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c2 is unloaded from vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l1 which has fuel-levels f0 and f5 to location l0, at location l0, cargo c7 is loaded in vehicle v0 with spaces s1 and s2, cargo c9 is unloaded from vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f4, cargo c6 is unloaded from vehicle v0 with space s2 and space s0 at location l0, at location l1, cargo c7 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c7 is unloaded from vehicle v0 with spaces s2 and s1, at location l1, cargo c1 is unloaded from vehicle v0 with spaces s2 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f0 and f2, at location l0, cargo c1 is loaded in vehicle v0 with spaces s2 and s0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f0, at location l0, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f4, cargo c0 is unloaded from vehicle v0 with space s2 and space s1 at location l1, at location l1, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c3 is unloaded from vehicle v0 with space s0 and space s1 at location l0, at location l0, cargo c4 is loaded in vehicle v0 with spaces s0 and s2, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s2 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f0 and f5, cargo c3 is loaded in vehicle v0 with space s2 and space s0 at location l0, cargo c3 is unloaded from vehicle v0 with space s1 and space s0 at location l0, cargo c4 is unloaded from vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s1 and space s2 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s2 and s0, cargo c1 is unloaded from vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f1 and f3, at location l1, cargo c2 is loaded in vehicle v0 with spaces s2 and s1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l0, cargo c4 is unloaded from vehicle v0 with space s2 and space s1 at location l0, cargo c7 is loaded in vehicle v0 with space s1 and space s2 at location l1, cargo c8 is unloaded from vehicle v0 with space s2 and space s0 at location l0, cargo c8 is loaded in vehicle v0 with space s1 and space s2 at location l0, cargo c8 is unloaded from vehicle v0 with space s0 and space s2 at location l1, cargo c8 is unloaded from vehicle v0 with space s2 and space s0 at location l1, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s0 and s2, cargo c2 is loaded in vehicle v0 with space s2 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f5 to location l1, at location l1, cargo c9 is loaded in vehicle v0 with spaces s2 and s0, cargo c6 is loaded in vehicle v0 with space s0 and space s2 at location l0, at location l1, cargo c9 is unloaded from vehicle v0 with spaces s2 and s1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, cargo c9 is loaded in vehicle v0 with space s0 and space s2 at location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, at location l1, cargo c2 is loaded in vehicle v0 with spaces s0 and s2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f5, at location l0, cargo c8 is unloaded from vehicle v0 with spaces s2 and s1, cargo c0 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c9 is unloaded from vehicle v0 with spaces s2 and s1, vehicle v0 moves from location l0 which has fuel-levels f1 and f2 to location l1, cargo c9 is unloaded from vehicle v0 with space s0 and space s2 at location l0, cargo c7 is loaded in vehicle v0 with space s2 and space s0 at location l0, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s1 and s0, cargo c6 is loaded in vehicle v0 with space s2 and space s0 at location l1, vehicle v0 moves from location l0 which has fuel-levels f1 and f3 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l0, cargo c6 is unloaded from vehicle v0 with spaces s1 and s2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c7 is unloaded from vehicle v0 with spaces s1 and s2, cargo c7 is unloaded from vehicle v0 with space s2 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l0, at location l1, cargo c6 is loaded in vehicle v0 with spaces s0 and s2, cargo c2 is unloaded from vehicle v0 with space s2 and space s1 at location l1, vehicle v0 moves from location l0 which has fuel-levels f3 and f4 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s2 and s0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s2 and s1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s2 and s0, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c8 is unloaded from vehicle v0 with space s1 and space s0 at location l0, cargo c0 is loaded in vehicle v0 with space s1 and space s2 at location l1, cargo c9 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l0 which has fuel-levels f0 and f4 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s0 and space s2 at location l0, cargo c0 is unloaded from vehicle v0 with space s2 and space s1 at location l0, at location l1, cargo c4 is loaded in vehicle v0 with spaces s0 and s2, at location l0, cargo c1 is loaded in vehicle v0 with spaces s1 and s2, vehicle v0 moves from location l1 which has fuel-levels f0 and f3 to location l0, at location l1, cargo c1 is loaded in vehicle v0 with spaces s2 and s1, at location l1, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, cargo c0 is unloaded from vehicle v0 with space s2 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f1, at location l0, cargo c5 is loaded in vehicle v0 with spaces s0 and s2, cargo c4 is loaded in vehicle v0 with space s0 and space s1 at location l0, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s2, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c6 is loaded in vehicle v0 with spaces s0 and s1 and cargo c9 is unloaded from vehicle v0 with space s0 and space s2 at location l1", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is situated at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 and location l1 are connected, location l0 has fuel f3, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "70a8dd15-37ce-4b72-af2a-8cba4a5247ce", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, if cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "7ae3e2b9-f788-4078-b4a0-04214a21bf8a", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, if at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "362490eb-de82-4a54-9c65-95480dab3563", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_5", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, if at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "b30caa60-9f11-478f-897f-a2e226c1d79b", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, if cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "2f142732-7ec3-4721-b481-1a114ef4e5c1", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, if at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, is it True or False that cargo c2 is not situated at location l0, vehicle v0 contains cargo c2, vehicle v0 does not contain space s1 and vehicle v0 has space s0?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "a174c764-56c7-4d8f-b218-9b2b6ce99f41", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, if cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, is it True or False that cargo c2 is not situated at location l0, vehicle v0 does not contain cargo c2, vehicle v0 does not contain space s1 and vehicle v0 does not have space s0?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "7c6eca89-8fe7-49d1-8470-19e9f548ceaf", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, if at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, is it True or False that cargo c2 is in vehicle v0, cargo c2 is not situated at location l0, vehicle v0 does not have space s1 and vehicle v0 has space s0?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "0ff9f6d2-ac6e-4485-90e9-94ffb6f9c809", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_12", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, if at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, is it True or False that cargo c4 is not situated at location l1, cargo c5 is present at location l1, cargo c8 is at location l1 and location l1 does not have a fuel-level of f3?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "0b604898-f516-4476-ae03-c2bb00ca8b90", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_13", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, if cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "a0e851fc-9e5d-4d9b-9ee6-561e238a5fce", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_14", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, if cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "4bbc4638-a6e8-48be-8a23-454bd088ff9a", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_15", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, if at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "e943a82b-d3ae-4d0b-84b1-f01cfbdadc24", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_16", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, if at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "5c6a9744-a4ac-4d57-8e2c-780385d41c11", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, if at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, what would be all of the valid properties of the state? Write None if there are none.", "answer": "cargo c0 is located in vehicle v0, cargo c1 is at location l1, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is situated at location l0, cargo c8 is situated at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l0, fuel level f2 neighbors fuel level f3, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has a fuel-level of f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, vehicle v0 contains cargo c2 and vehicle v0 contains space s0", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "a9a20578-b27d-4009-9596-4db75b8c5ac0", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, if cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "cargo c0 is not at location l1cargo c0 is not present at location l1, cargo c0 is not situated at location l0, cargo c1 is not located in vehicle v0, cargo c1 is not situated at location l0, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c2 is not at location l1cargo c2 is not present at location l1, cargo c3 is not at location l0cargo c3 is not present at location l0, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c5 is not in vehicle v0, cargo c5 is not situated at location l1, cargo c6 is not located in vehicle v0, cargo c6 is not situated at location l1, cargo c7 is not at location l1cargo c7 is not present at location l1, cargo c7 is not located in vehicle v0, cargo c8 is not in vehicle v0, cargo c8 is not situated at location l1, cargo c9 is not in vehicle v0, cargo c9 is not situated at location l1, cargo v0 is not situated at location l1, fuel f0 does not exist in location l0, fuel f0 does not exist in location l1, fuel f2 does not exist in location l0, fuel f4 does not exist in location l0, fuel f5 does not exist in location l1, fuel level f0 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f5, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f4, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f3 are not neighbors, location l0 does not have fuel f1, location l0 does not have fuel f5, location l1 does not have a fuel-level of f2, location l1 does not have fuel f1, location l1 does not have fuel f4, space s2 does not neighbour space s1, spaces s0 and s2 are not neighbors, spaces s1 and s0 are not neighbors, spaces s2 and s0 are not neighbors, vehicle v0 does not contain cargo c3, vehicle v0 does not contain cargo c4, vehicle v0 does not contain space s1 and vehicle v0 does not have space s2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "1981f992-637b-4eed-a652-ed6bea31a5b0", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, if cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, what would be all of the properties of the state? Write None if there are none.", "answer": "cargo c0 is located in vehicle v0, cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c0 is not situated at location l1, cargo c1 is not situated at location l0, cargo c1 is present at location l1, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c2 is not at location l1cargo c2 is not present at location l1, cargo c3 is at location l1, cargo c3 is not at location l0cargo c3 is not present at location l0, cargo c4 is at location l0, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c5 is at location l0, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c5 is not in vehicle v0, cargo c6 is not in vehicle v0, cargo c6 is not situated at location l1, cargo c6 is present at location l0, cargo c7 is not at location l1cargo c7 is not present at location l1, cargo c7 is not located in vehicle v0, cargo c7 is situated at location l0, cargo c8 is not located in vehicle v0, cargo c8 is not situated at location l1, cargo c8 is situated at location l0, cargo c9 is at location l0, cargo c9 is not at location l1cargo c9 is not present at location l1, cargo c9 is not located in vehicle v0, cargo v0 is at location l0, cargo v0 is not situated at location l1, fuel f0 does not exist in location l0, fuel f1 does not exist in location l1, fuel f2 does not exist in location l0, fuel f3 exists in location l0, fuel f4 does not exist in location l0, fuel f4 does not exist in location l1, fuel f5 does not exist in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f5, fuel level f1 neighbors fuel level f2, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f1, fuel level f2 does not neighbour fuel level f5, fuel level f2 neighbors fuel level f3, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f5, fuel level f3 neighbors fuel level f4, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f4, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f3 are not neighbors, location l0 does not have fuel f1, location l0 does not have fuel f5, location l1 does not have a fuel-level of f0, location l1 does not have fuel f2, location l1 has a fuel-level of f3, location l1 is connected to location l0, space s0 does not neighbour space s2, space s1 does not neighbour space s0, space s1 neighbors space s2, space s2 does not neighbour space s0, spaces s0 and s1 are neighbors, spaces s2 and s1 are not neighbors, there is a connection between locations l0 and l1, vehicle v0 contains cargo c2, vehicle v0 does not contain cargo c1, vehicle v0 does not contain cargo c3, vehicle v0 does not contain cargo c4, vehicle v0 does not contain space s2, vehicle v0 does not have space s1 and vehicle v0 has space s0", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "e200d0a0-c769-49f4-8e91-ff7efbf5a44c", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, if at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "6b0cab5d-876c-45a7-86e5-64833df71dc4", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, if at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "9fef5b15-6c92-4b55-882f-6b72ab4df9a7", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_5", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, if at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "1c3323e4-3baa-410a-a9c2-65fb325ab185", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, if cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "443c4159-0349-458b-99ba-b05c77526bca", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, if at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, is it True or False that cargo c2 is situated at location l1, vehicle v0 does not contain cargo c2, vehicle v0 does not have space s0 and vehicle v0 has space s1?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "4588c4a8-c636-4817-a757-766735eca18c", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, if cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, is it True or False that cargo c2 is present at location l1, vehicle v0 contains cargo c2, vehicle v0 does not have space s0 and vehicle v0 does not have space s1?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "a12ace20-5f1d-4a77-9d20-ff2ebbc7a218", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, if cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, is it True or False that cargo c2 is not located in vehicle v0, cargo c2 is present at location l1, vehicle v0 does not have space s0 and vehicle v0 has space s1?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "803aa44f-21b3-491e-8668-3a21c00547da", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_12", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, if cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, is it True or False that cargo c5 is at location l1, cargo c5 is in vehicle v0, cargo v0 is situated at location l0 and vehicle v0 contains cargo c4?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "affd3c15-993e-408d-9959-e3b1753cc5b0", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_13", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, if cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "4ece35cb-1df8-4489-bbec-126cb2e050d3", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_14", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, if cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "f23c0876-ec62-471e-8f3c-73d092b214c9", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_15", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, if at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "974b8380-ef65-4f13-ad70-7f1a0407a09b", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_16", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, if at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "5b0f88ab-f813-4f1d-808c-afb51419aa3a", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, if cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, what would be all of the valid properties of the state? Write None if there are none.", "answer": "cargo c0 is situated at location l1, cargo c1 is located in vehicle v0, cargo c2 is at location l1, cargo c3 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is situated at location l0, cargo c6 is situated at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l1, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f2, space s0 neighbors space s1, spaces s1 and s2 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 contains space s1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "54d07652-56cc-4fe4-aacd-2fe41f38b7f5", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, if cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c1 is not situated at location l0, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c3 is not located in vehicle v0, cargo c3 is not situated at location l0, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c4 is not in vehicle v0, cargo c5 is not in vehicle v0, cargo c5 is not situated at location l1, cargo c6 is not at location l1cargo c6 is not present at location l1, cargo c6 is not in vehicle v0, cargo c7 is not located in vehicle v0, cargo c7 is not situated at location l1, cargo c8 is not located in vehicle v0, cargo c8 is not situated at location l1, cargo c9 is not located in vehicle v0, cargo c9 is not situated at location l1, cargo v0 is not at location l0cargo v0 is not present at location l0, fuel f0 does not exist in location l0, fuel f1 does not exist in location l1, fuel f2 does not exist in location l1, fuel f4 does not exist in location l0, fuel f4 does not exist in location l1, fuel level f0 does not neighbour fuel level f3, fuel level f0 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f4, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f5, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f4, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f2 are not neighbors, location l0 does not have a fuel-level of f5, location l0 does not have fuel f1, location l0 does not have fuel f3, location l1 does not have fuel f0, location l1 does not have fuel f5, space s0 does not neighbour space s2, space s2 does not neighbour space s0, spaces s1 and s0 are not neighbors, spaces s2 and s1 are not neighbors, vehicle v0 does not contain cargo c0, vehicle v0 does not contain cargo c2, vehicle v0 does not contain space s0 and vehicle v0 does not have space s2", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "e92838b2-d2ac-4a7f-806f-a5ef1e1fde76", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, if cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, what would be all of the properties of the state? Write None if there are none.", "answer": "cargo c0 is not in vehicle v0, cargo c0 is not situated at location l0, cargo c0 is situated at location l1, cargo c1 is not at location l0cargo c1 is not present at location l0, cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c2 is at location l1, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c3 is not located in vehicle v0, cargo c3 is not situated at location l0, cargo c3 is situated at location l1, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c4 is situated at location l0, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c6 is not at location l1cargo c6 is not present at location l1, cargo c7 is not situated at location l1, cargo c7 is present at location l0, cargo c8 is not located in vehicle v0, cargo c8 is not situated at location l1, cargo c8 is situated at location l0, cargo c9 is not in vehicle v0, cargo c9 is not situated at location l1, cargo c9 is present at location l0, cargo v0 is not situated at location l0, cargo v0 is situated at location l1, fuel f0 does not exist in location l1, fuel f3 does not exist in location l0, fuel f3 exists in location l1, fuel level f0 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f5, fuel level f3 neighbors fuel level f4, fuel level f4 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f3 are not neighbors, location l0 and location l1 are connected, location l0 does not have fuel f0, location l0 does not have fuel f1, location l0 does not have fuel f4, location l0 does not have fuel f5, location l0 has a fuel-level of f2, location l1 and location l0 are connected, location l1 does not have a fuel-level of f2, location l1 does not have a fuel-level of f5, location l1 does not have fuel f1, location l1 does not have fuel f4, space s1 does not neighbour space s0, space s1 neighbors space s2, spaces s0 and s1 are neighbors, spaces s0 and s2 are not neighbors, spaces s2 and s0 are not neighbors, spaces s2 and s1 are not neighbors, vehicle v0 contains cargo c1, vehicle v0 does not contain cargo c2, vehicle v0 does not contain cargo c4, vehicle v0 does not contain cargo c5, vehicle v0 does not contain cargo c6, vehicle v0 does not contain cargo c7, vehicle v0 does not have space s0, vehicle v0 does not have space s2 and vehicle v0 has space s1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "77d55686-503e-48e5-9ef2-f55fec959803", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, if vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "fef9e827-8e1d-451a-a11a-7f4cd0849c9d", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, if vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "510a49e3-1830-484e-9cef-94650e25f929", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_5", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, if vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "782b1d80-3c8e-49b4-90dc-4138119219eb", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, if vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "2af95b53-91d8-4768-b94c-70ab13f6fdf0", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, if vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, is it True or False that cargo v0 is not situated at location l0, cargo v0 is situated at location l1, fuel f1 exists in location l0 and location l0 does not have a fuel-level of f2?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "8917548a-0027-4c34-8ee0-8e9567380e3f", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, if vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, is it True or False that cargo v0 is not at location l0cargo v0 is not present at location l0, cargo v0 is not at location l1cargo v0 is not present at location l1, fuel f1 does not exist in location l0 and location l0 does not have fuel f2?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "542c3963-1784-4451-ba2e-7bd7efd7b3b9", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, if vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, is it True or False that cargo v0 is at location l1, cargo v0 is not situated at location l0, fuel f1 exists in location l0 and location l0 does not have fuel f2?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "c7845d6a-cb0d-4a28-a64f-981a7ad6feca", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_12", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, if vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, is it True or False that cargo c2 is situated at location l1, location l1 does not have fuel f3, location l1 has a fuel-level of f0 and vehicle v0 contains cargo c9?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "4ef0d54a-cf36-47fd-af14-e05f4a2d8fc8", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_13", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, if vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "bccd27b0-0723-4839-864a-70ed13f779ab", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_14", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, if vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "94a6c66b-2943-4e51-9041-e8713bb31556", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_15", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, if vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "301f8513-ef08-47a6-b3e0-8e6a177d5ee1", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_16", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, if vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "f5c01cf3-93dd-42ce-99f8-770fac9e25ab", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, if vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, what would be all of the valid properties of the state? Write None if there are none.", "answer": "cargo c0 is at location l1, cargo c1 is present at location l0, cargo c2 is situated at location l1, cargo c3 is present at location l1, cargo c4 is at location l0, cargo c6 is in vehicle v0, cargo c7 is situated at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is present at location l1, fuel f1 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 and location l1 are connected, location l1 and location l0 are connected, location l1 has fuel f2, space s0 neighbors space s1, space s1 neighbors space s2, vehicle v0 contains cargo c5 and vehicle v0 contains space s0", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "3da6b7e8-a1ac-4791-bca7-ef20fa69c48c", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, if vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c0 is not in vehicle v0, cargo c1 is not situated at location l1, cargo c2 is not in vehicle v0, cargo c2 is not situated at location l0, cargo c3 is not at location l0cargo c3 is not present at location l0, cargo c3 is not in vehicle v0, cargo c4 is not situated at location l1, cargo c5 is not at location l0cargo c5 is not present at location l0, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c6 is not situated at location l0, cargo c6 is not situated at location l1, cargo c7 is not in vehicle v0, cargo c7 is not situated at location l1, cargo c8 is not at location l1cargo c8 is not present at location l1, cargo c8 is not in vehicle v0, cargo c9 is not at location l1cargo c9 is not present at location l1, cargo v0 is not situated at location l0, fuel f0 does not exist in location l0, fuel f4 does not exist in location l0, fuel f4 does not exist in location l1, fuel f5 does not exist in location l1, fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f3, fuel level f0 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f5, fuel level f4 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f4, fuel-levels f0 and f4 are not neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f3 are not neighbors, location l0 does not have a fuel-level of f3, location l0 does not have a fuel-level of f5, location l0 does not have fuel f2, location l1 does not have a fuel-level of f0, location l1 does not have fuel f1, location l1 does not have fuel f3, spaces s0 and s2 are not neighbors, spaces s1 and s0 are not neighbors, spaces s2 and s0 are not neighbors, spaces s2 and s1 are not neighbors, vehicle v0 does not contain cargo c1, vehicle v0 does not contain cargo c4, vehicle v0 does not contain cargo c9, vehicle v0 does not contain space s2 and vehicle v0 does not have space s1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "8167ad53-46a9-48e0-8b74-232282cddc99", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, if vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, what would be all of the properties of the state? Write None if there are none.", "answer": "cargo c0 is at location l1, cargo c0 is not situated at location l0, cargo c1 is at location l0, cargo c1 is not located in vehicle v0, cargo c1 is not situated at location l1, cargo c2 is at location l1, cargo c2 is not located in vehicle v0, cargo c2 is not situated at location l0, cargo c3 is at location l1, cargo c3 is not at location l0cargo c3 is not present at location l0, cargo c4 is at location l0, cargo c4 is not in vehicle v0, cargo c4 is not situated at location l1, cargo c5 is located in vehicle v0, cargo c5 is not at location l0cargo c5 is not present at location l0, cargo c5 is not situated at location l1, cargo c6 is located in vehicle v0, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not at location l1cargo c6 is not present at location l1, cargo c7 is not situated at location l1, cargo c7 is situated at location l0, cargo c8 is not in vehicle v0, cargo c8 is not situated at location l1, cargo c8 is present at location l0, cargo c9 is not in vehicle v0, cargo c9 is not situated at location l1, cargo c9 is situated at location l0, cargo v0 is not at location l0cargo v0 is not present at location l0, cargo v0 is present at location l1, fuel f2 exists in location l1, fuel f3 does not exist in location l1, fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f3, fuel level f0 does not neighbour fuel level f4, fuel level f0 neighbors fuel level f1, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f4, fuel level f2 neighbors fuel level f3, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f5, fuel level f3 neighbors fuel level f4, fuel level f4 does not neighbour fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f3, fuel-levels f0 and f5 are not neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f4 are not neighbors, location l0 and location l1 are connected, location l0 does not have a fuel-level of f4, location l0 does not have a fuel-level of f5, location l0 does not have fuel f0, location l0 does not have fuel f2, location l0 does not have fuel f3, location l0 has fuel f1, location l1 does not have a fuel-level of f1, location l1 does not have a fuel-level of f5, location l1 does not have fuel f0, location l1 does not have fuel f4, space s0 does not neighbour space s2, space s1 does not neighbour space s0, space s2 does not neighbour space s0, spaces s0 and s1 are neighbors, spaces s1 and s2 are neighbors, spaces s2 and s1 are not neighbors, there is a connection between locations l1 and l0, vehicle v0 contains space s0, vehicle v0 does not contain cargo c0, vehicle v0 does not contain cargo c3, vehicle v0 does not contain cargo c7, vehicle v0 does not contain space s2 and vehicle v0 does not have space s1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "f96fbab7-39fd-4c5d-9048-d40a94060649", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, if at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "c87d5ba7-251a-409d-93e9-6b300907616f", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, if at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "0457b66e-af1c-4a9d-869e-37f8405bbf56", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_5", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, if at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "daa197a0-7543-42b7-81d7-0cbbb2442a5a", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, if at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "374b6222-a846-416b-ae06-a0053b6c696b", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, if at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, is it True or False that cargo c3 is not located in vehicle v0, cargo c3 is situated at location l0, vehicle v0 does not have space s1 and vehicle v0 has space s2?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "0f04f5ea-bd89-4c6d-b2ea-24c5dc2e8a2e", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, if at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, is it True or False that cargo c3 is in vehicle v0, cargo c3 is not at location l0cargo c3 is not present at location l0, vehicle v0 contains space s2 and vehicle v0 does not have space s1?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "0b814717-bc2c-43ac-bddc-9d73edb04846", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, if at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, is it True or False that cargo c3 is not located in vehicle v0, cargo c3 is present at location l0, vehicle v0 does not contain space s1 and vehicle v0 has space s2?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "2f48669d-b7ac-4aa1-8fbd-f613dbc7f5ae", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_12", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, if at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, is it True or False that cargo c5 is situated at location l1, cargo c9 is present at location l1, cargo v0 is not situated at location l0 and vehicle v0 contains cargo c4?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "61d0cbd4-029c-4e9e-a999-d2cb376e7a87", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_13", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, if at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "3622bb16-6506-403b-bda6-18fac90e6f76", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_14", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, if at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "1300449a-7ef6-4e28-8efe-a75d39f89e73", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_15", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, if cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "fa73b32a-3e0e-4889-8c97-87c289b77d79", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_16", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, if cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "36442168-fe61-4db9-9040-8eccbb2d8a5e", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, if at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, what would be all of the valid properties of the state? Write None if there are none.", "answer": "cargo c0 is at location l1, cargo c1 is at location l0, cargo c2 is situated at location l1, cargo c3 is present at location l0, cargo c4 is present at location l0, cargo c5 is at location l1, cargo c6 is situated at location l1, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is at location l0, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, location l0 has a fuel-level of f1, location l1 and location l0 are connected, location l1 has fuel f1, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1 and vehicle v0 has space s2", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "dc8f6781-dfc8-46ef-af45-189758d51095", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, if at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "cargo c0 is not in vehicle v0, cargo c0 is not situated at location l0, cargo c1 is not located in vehicle v0, cargo c1 is not situated at location l1, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c2 is not in vehicle v0, cargo c3 is not in vehicle v0, cargo c3 is not situated at location l1, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c4 is not in vehicle v0, cargo c5 is not at location l0cargo c5 is not present at location l0, cargo c5 is not in vehicle v0, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not in vehicle v0, cargo c7 is not at location l1cargo c7 is not present at location l1, cargo c7 is not located in vehicle v0, cargo c8 is not located in vehicle v0, cargo c8 is not situated at location l1, cargo c9 is not at location l1cargo c9 is not present at location l1, cargo v0 is not at location l1cargo v0 is not present at location l1, fuel f0 does not exist in location l0, fuel f0 does not exist in location l1, fuel f2 does not exist in location l0, fuel f3 does not exist in location l0, fuel f3 does not exist in location l1, fuel f5 does not exist in location l1, fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f1, fuel level f2 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f5, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f4, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f2 are not neighbors, location l0 does not have a fuel-level of f4, location l0 does not have fuel f5, location l1 does not have a fuel-level of f4, location l1 does not have fuel f2, space s1 does not neighbour space s0, spaces s0 and s2 are not neighbors, spaces s2 and s0 are not neighbors, spaces s2 and s1 are not neighbors, vehicle v0 does not contain cargo c9, vehicle v0 does not contain space s1 and vehicle v0 does not have space s0", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "3d55fcda-604e-401c-a3fe-480fede3d305", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, if cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, what would be all of the properties of the state? Write None if there are none.", "answer": "cargo c0 is at location l1, cargo c0 is not situated at location l0, cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c1 is not located in vehicle v0, cargo c1 is situated at location l0, cargo c2 is at location l1, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c2 is not located in vehicle v0, cargo c3 is at location l0, cargo c3 is not located in vehicle v0, cargo c3 is not situated at location l1, cargo c4 is at location l0, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c4 is not located in vehicle v0, cargo c5 is not at location l0cargo c5 is not present at location l0, cargo c5 is not located in vehicle v0, cargo c5 is present at location l1, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not located in vehicle v0, cargo c6 is present at location l1, cargo c7 is at location l0, cargo c7 is not at location l1cargo c7 is not present at location l1, cargo c8 is not in vehicle v0, cargo c8 is not situated at location l1, cargo c8 is situated at location l0, cargo c9 is not at location l1cargo c9 is not present at location l1, cargo c9 is not located in vehicle v0, cargo c9 is present at location l0, cargo v0 is not at location l1cargo v0 is not present at location l1, cargo v0 is present at location l0, fuel f0 does not exist in location l1, fuel f1 exists in location l0, fuel f2 does not exist in location l0, fuel f2 does not exist in location l1, fuel f4 does not exist in location l0, fuel f4 does not exist in location l1, fuel level f0 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f5, fuel level f1 neighbors fuel level f2, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f4, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f3, fuel level f4 neighbors fuel level f5, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f3, fuel-levels f0 and f1 are neighbors, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f4 are not neighbors, location l0 does not have a fuel-level of f3, location l0 does not have a fuel-level of f5, location l0 does not have fuel f0, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 does not have fuel f3, location l1 does not have fuel f5, location l1 has fuel f1, space s0 does not neighbour space s2, space s0 neighbors space s1, space s1 does not neighbour space s0, space s2 does not neighbour space s0, spaces s1 and s2 are neighbors, spaces s2 and s1 are not neighbors, vehicle v0 contains space s2, vehicle v0 does not contain cargo c0, vehicle v0 does not contain cargo c7, vehicle v0 does not have space s0 and vehicle v0 does not have space s1", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "21c6d53d-8c8e-49da-be4d-71f27d772fcd", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, if at location l1, cargo c7 is unloaded from vehicle v0 with spaces s0 and s1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "15fef61f-c7b8-4b8a-b083-6c9466dedd89", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, if at location l1, cargo c7 is unloaded from vehicle v0 with spaces s0 and s1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "284788f2-96e7-4cd9-9cfd-0fb8ed9c5a1f", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_5", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, if cargo c7 is unloaded from vehicle v0 with space s0 and space s1 at location l1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "f9822b81-782b-49e3-9849-67674776d6a5", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, if cargo c7 is unloaded from vehicle v0 with space s0 and space s1 at location l1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "ea5dd235-a2aa-431e-82aa-99e05d0f4a1f", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, if cargo c7 is unloaded from vehicle v0 with space s0 and space s1 at location l1, is it True or False that cargo c7 is situated at location l1, vehicle v0 does not contain cargo c7, vehicle v0 does not contain space s0 and vehicle v0 has space s1?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "946fcadc-5626-4985-898c-abf039b77d51", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, if cargo c7 is unloaded from vehicle v0 with space s0 and space s1 at location l1, is it True or False that cargo c7 is at location l1, vehicle v0 contains space s0, vehicle v0 does not contain cargo c7 and vehicle v0 does not contain space s1?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "b939add6-a027-472e-9570-8b65ab4c5c62", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, if at location l1, cargo c7 is unloaded from vehicle v0 with spaces s0 and s1, is it True or False that cargo c7 is not in vehicle v0, cargo c7 is present at location l1, vehicle v0 does not contain space s0 and vehicle v0 has space s1?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "4acadfd0-4a5c-4770-8ef0-005f3497c3cc", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_12", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, if cargo c7 is unloaded from vehicle v0 with space s0 and space s1 at location l1, is it True or False that cargo c5 is present at location l0, cargo c9 is situated at location l0, fuel f2 does not exist in location l0 and vehicle v0 does not contain cargo c3?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "91a588e1-b092-4e9b-a25b-9b265bcb9db5", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_13", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, if at location l1, cargo c7 is unloaded from vehicle v0 with spaces s0 and s1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "40582782-653b-4f06-ac7d-8717a3e65234", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_14", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, if cargo c7 is unloaded from vehicle v0 with space s0 and space s1 at location l1, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "ee87b332-ba96-4dcc-b440-0f819f7c78b7", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_15", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, if at location l1, cargo c7 is unloaded from vehicle v0 with spaces s0 and s1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "13660f2b-a71d-4a0d-9c20-f6cc8f5b1da1", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_1_question_16", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, if at location l1, cargo c7 is unloaded from vehicle v0 with spaces s0 and s1, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "f68810af-64ac-4f30-9d2e-d5742ecc7c78", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, if cargo c7 is unloaded from vehicle v0 with space s0 and space s1 at location l1, what would be all of the valid properties of the state? Write None if there are none.", "answer": "cargo c0 is at location l1, cargo c1 is at location l0, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l0, cargo c5 is present at location l1, cargo c6 is situated at location l1, cargo c7 is at location l1, cargo c8 is located in vehicle v0, cargo c9 is present at location l0, cargo v0 is at location l1, fuel f0 exists in location l0, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 is connected to location l1, location l1 has a fuel-level of f1, space s0 neighbors space s1, spaces s1 and s2 are neighbors, there is a connection between locations l1 and l0 and vehicle v0 has space s1", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "82e26885-3183-4e47-bc9f-ababd82b3d31", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, if cargo c7 is unloaded from vehicle v0 with space s0 and space s1 at location l1, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c0 is not located in vehicle v0, cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c1 is not in vehicle v0, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c2 is not in vehicle v0, cargo c3 is not in vehicle v0, cargo c3 is not situated at location l1, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c4 is not located in vehicle v0, cargo c5 is not at location l0cargo c5 is not present at location l0, cargo c5 is not in vehicle v0, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not located in vehicle v0, cargo c7 is not situated at location l0, cargo c8 is not situated at location l0, cargo c8 is not situated at location l1, cargo c9 is not at location l1cargo c9 is not present at location l1, cargo c9 is not located in vehicle v0, cargo v0 is not at location l0cargo v0 is not present at location l0, fuel f3 does not exist in location l0, fuel f4 does not exist in location l1, fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f3, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f5, fuel level f4 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f4, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f2 are not neighbors, location l0 does not have a fuel-level of f2, location l0 does not have a fuel-level of f4, location l0 does not have fuel f1, location l0 does not have fuel f5, location l1 does not have a fuel-level of f0, location l1 does not have a fuel-level of f5, location l1 does not have fuel f2, location l1 does not have fuel f3, spaces s0 and s2 are not neighbors, spaces s1 and s0 are not neighbors, spaces s2 and s0 are not neighbors, spaces s2 and s1 are not neighbors, vehicle v0 does not contain cargo c7, vehicle v0 does not contain space s0 and vehicle v0 does not contain space s2", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "4a9bf13a-63bb-4ce7-9187-b37975168135", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "effects", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, if cargo c7 is unloaded from vehicle v0 with space s0 and space s1 at location l1, what would be all of the properties of the state? Write None if there are none.", "answer": "cargo c0 is not located in vehicle v0, cargo c0 is not situated at location l0, cargo c0 is situated at location l1, cargo c1 is not situated at location l1, cargo c1 is situated at location l0, cargo c2 is not in vehicle v0, cargo c2 is not situated at location l0, cargo c2 is present at location l1, cargo c3 is at location l0, cargo c3 is not in vehicle v0, cargo c3 is not situated at location l1, cargo c4 is not located in vehicle v0, cargo c4 is not situated at location l1, cargo c4 is present at location l0, cargo c5 is at location l1, cargo c5 is not located in vehicle v0, cargo c5 is not situated at location l0, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not located in vehicle v0, cargo c6 is present at location l1, cargo c7 is at location l1, cargo c7 is not located in vehicle v0, cargo c7 is not situated at location l0, cargo c8 is located in vehicle v0, cargo c8 is not at location l0cargo c8 is not present at location l0, cargo c8 is not situated at location l1, cargo c9 is at location l0, cargo c9 is not in vehicle v0, cargo c9 is not situated at location l1, cargo v0 is not at location l0cargo v0 is not present at location l0, cargo v0 is present at location l1, fuel f1 exists in location l1, fuel f2 does not exist in location l1, fuel f3 does not exist in location l0, fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f4, fuel level f0 does not neighbour fuel level f5, fuel level f0 neighbors fuel level f1, fuel level f1 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f1, fuel level f2 does not neighbour fuel level f4, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f5, fuel level f4 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f0, fuel-levels f0 and f3 are not neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f5 and f4 are not neighbors, location l0 does not have a fuel-level of f2, location l0 does not have a fuel-level of f4, location l0 does not have a fuel-level of f5, location l0 does not have fuel f1, location l0 has a fuel-level of f0, location l0 is connected to location l1, location l1 does not have a fuel-level of f3, location l1 does not have fuel f0, location l1 does not have fuel f4, location l1 does not have fuel f5, location l1 is connected to location l0, space s1 does not neighbour space s0, space s1 neighbors space s2, space s2 does not neighbour space s0, space s2 does not neighbour space s1, spaces s0 and s1 are neighbors, spaces s0 and s2 are not neighbors, vehicle v0 contains space s1, vehicle v0 does not contain cargo c1, vehicle v0 does not contain space s0 and vehicle v0 does not have space s2", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is at location l0, cargo c3 is situated at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c9 is present at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, space s1 neighbors space s2, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "28a1121c-80cf-40b1-aeba-b0d60eb41e8b", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, is the number of objects equal to 22? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "fba4c350-89a8-454f-894f-55bf17e6ec44", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, is the number of objects equal to 25? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "9de9ab1f-c9d7-41dd-8ec7-3428ff439d7d", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, is the number of executable actions equal to 9? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "93c7fbcf-8834-4c63-ac5f-221d174a8678", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, is the number of executable actions equal to 8? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "7dcb1a21-162d-41ab-bf32-91311a25899b", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_5", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, is the number of inexecutable actions equal to 291? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "e67f41cd-f7e0-4379-a035-a0a3ee730ab6", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_6", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, is the number of inexecutable actions equal to 322? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "896884bc-e0cf-488f-855a-59f43a8017b3", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_7", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, is the number of valid properties of the state equal to 23? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "be13e865-c547-4841-befb-9fee350cdef2", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_8", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, is the number of valid properties of the state equal to 19? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "0e959138-59df-403d-bb58-7711f16e07ae", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_9", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 62? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "4d6fe14b-59fb-4933-ba8b-e30f829d8b66", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_10", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 56? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "a2457215-6509-47fe-baed-cda5df3b3dfc", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, is the number of base properties of the state equal to 2? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "e7aea409-3bed-47fa-a678-4e967fde9885", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_12", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, is the number of base properties of the state equal to 1? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "89164050-c8a0-4a2a-a10f-723bfa5c80ee", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_13", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, is the number of derived properties of the state equal to 2? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "de0c2e6c-0509-447b-bfab-6522e4832d39", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_14", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, is the number of derived properties of the state equal to 1? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "299ab100-223d-47b5-85e6-6ad81a02e2e6", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_15", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, is the number of self constraint properties of the state equal to 2? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "faf48d95-c4e1-4535-8d8e-a6c9c6fbfc3b", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_16", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, is the number of self constraint properties of the state equal to 3? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "09fd318c-f956-47d6-adeb-f53636b3dcde", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_17", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, is the number of static properties of the state equal to 2? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "a2287407-711f-4227-8e39-00f293c41984", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_18", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, is the number of static properties of the state equal to 3? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "e5ba63ee-bce1-4e1d-8072-49b5ac51217f", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, what is the total number of objects? Write as an integer. Write None if there are none.", "answer": "22", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "18174e97-98c0-4c33-a2c0-8f4f900b9541", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, what is the total number of executable actions? Write as an integer. Write None if there are none.", "answer": "9", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "c35b4495-1713-4946-986b-333c80a40ddb", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, what is the total number of inexecutable actions? Write as an integer. Write None if there are none.", "answer": "291", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "cf3df30e-b915-461b-81ca-d9d188868eaa", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, what is the total number of valid properties of the state? Write as an integer. Write None if there are none.", "answer": "23", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "57fad428-a922-4e63-b501-920dc64156de", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as an integer. Write None if there are none.", "answer": "62", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "ad362456-4c20-48f6-a1b8-c8dedbfe5327", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_6", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, what is the total number of base properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "541c722c-365a-4e36-947b-be154a327ba0", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, what is the total number of derived properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "1ae73f75-d62e-4e93-8761-bd8a576d6f5b", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_8", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, what is the total number of self constraint properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "b8c332c9-cb54-43b5-a1df-0aa8a211ee04", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_9", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, what is the total number of static properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "70401600-bcaf-40f4-8187-98b3d4ec02cf", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 1?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "c9c5ae2d-f409-4191-9d35-908459d9deb8", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 2?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "4cd1618e-588d-417c-84e7-75ed45162635", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: cargo c9 is unloaded from vehicle v0 with space s0 and space s2 at location l0 to reach the current state. How many actions are there before the first inexecutable action? Write as an integer. Write None if there are none.", "answer": "0", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "32ad9af2-5a47-44dc-b1ba-b30283cfaf23", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, is the number of objects equal to 22? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "7f54bc14-0f98-4c8b-9678-6c92705d55db", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is the number of objects equal to 17? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "b5dd4a63-cf49-40b8-98ac-7a6c94563313", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is the number of executable actions equal to 3? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "4f770b89-04ba-4403-bb8c-b6046a4fe93b", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, is the number of executable actions equal to 2? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "cae261f4-78a3-43e2-9583-533290fd53cb", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_5", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is the number of inexecutable actions equal to 297? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "9c76542d-8f5a-40c7-89d4-8a30e7e9ba91", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_6", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, is the number of inexecutable actions equal to 356? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "8964283c-92f3-46e5-b520-22024c0d6968", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_7", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, is the number of valid properties of the state equal to 23? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "7151a0f6-f6ca-4078-ade6-f1ba720a00c4", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_8", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is the number of valid properties of the state equal to 21? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "386950a6-d8ea-4114-b527-99139b099f75", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_9", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 62? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "ce3671cc-99da-45fa-8c01-59574577b16f", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_10", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 74? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "0bb6929f-1f5a-49be-8bb3-25af1c8e326e", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, is the number of base properties of the state equal to 2? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "3cab7a42-5f0d-4eae-8b27-741cfca4f25e", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_12", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is the number of base properties of the state equal to 1? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "df497490-9cac-4b70-86dd-fecc886f0e0f", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_13", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, is the number of derived properties of the state equal to 2? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "6b095b96-4f14-4d07-b891-641b373f2d3b", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_14", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is the number of derived properties of the state equal to 1? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "f122a3aa-79f7-4fb6-b05b-5bfc317f19a1", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_15", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is the number of self constraint properties of the state equal to 2? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "cb76139b-7180-4eb6-bc58-2ef9e6eb21a4", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_16", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, is the number of self constraint properties of the state equal to 3? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "72404fed-4aa6-487c-b8aa-3791f9f2fb06", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_17", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, is the number of static properties of the state equal to 2? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "24c3ab40-d2fa-47dd-9acf-77fc8800bd54", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_18", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, is the number of static properties of the state equal to 3? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "c56ce1cb-1c60-4b4c-af74-d4b52df140c1", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, what is the total number of objects? Write as an integer. Write None if there are none.", "answer": "22", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "3021c66c-af7f-4993-97de-7f80b226d098", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, what is the total number of executable actions? Write as an integer. Write None if there are none.", "answer": "3", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "43322d49-c6e4-4e9d-a92e-f1e1dd3c5c1b", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, what is the total number of inexecutable actions? Write as an integer. Write None if there are none.", "answer": "297", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "36ba00b1-e431-4654-8407-7e819b5bd288", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, what is the total number of valid properties of the state? Write as an integer. Write None if there are none.", "answer": "23", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "0996836f-34d8-4ad8-830a-658e698de896", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as an integer. Write None if there are none.", "answer": "62", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "d2d0b42b-eba3-48fa-9b8a-b4b27681bce5", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_6", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, what is the total number of base properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "9419a886-a197-4fe5-8577-0533ca62fd71", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, what is the total number of derived properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "cfde5ed1-9602-4c1e-ad30-59b65106e838", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_8", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, what is the total number of self constraint properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "d0af4b42-ea1a-4aa9-a507-6196d80ca5b4", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_9", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, what is the total number of static properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "0d5643d1-0356-4ffc-a5ed-2b3107e41cd3", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 5?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "da031451-6c6e-4e0c-b2e4-1bd26db3b22b", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 3?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "ea908eba-68fc-4314-a7f5-5c3b12d11339", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c9 is loaded in vehicle v0 with space s1 and space s2 at location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. How many actions are there before the first inexecutable action? Write as an integer. Write None if there are none.", "answer": "1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "c629c85e-0d2b-427d-be1c-e6cd36093c33", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is the number of objects equal to 22? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "73c5ba2b-c267-48e7-a556-9b328dc8ff3f", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is the number of objects equal to 25? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "5b5ea213-5bc1-4e52-b155-44e9bd7ccb22", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, is the number of executable actions equal to 3? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "127a6988-c908-4e89-84ef-9d905e619baf", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is the number of executable actions equal to 4? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "bb4c31c1-eb34-45bc-bff1-f0c07051b7a8", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_5", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is the number of inexecutable actions equal to 297? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "ffaf0d8a-8476-4c9a-8a89-3d3203ef47b6", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_6", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is the number of inexecutable actions equal to 311? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "eb89fa33-e9ec-44e4-b137-8254d9c837f2", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_7", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, is the number of valid properties of the state equal to 23? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "a4f1b0f5-f07f-4a98-986e-db48aa2d48a0", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_8", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is the number of valid properties of the state equal to 22? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "5c4dfdf8-0349-4076-891b-34ea3ed75118", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_9", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 62? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "004e734a-08ff-4443-a60b-3e32f14d46c2", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_10", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 70? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "de56dc20-55e2-452a-99ac-ac130522aca4", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is the number of base properties of the state equal to 2? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "b76f3dad-28ea-4465-8b2f-bfe42a3976bc", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_12", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is the number of base properties of the state equal to 1? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "e8738e8b-ac8a-4d5f-af5d-19e75f91aa5f", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_13", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, is the number of derived properties of the state equal to 2? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "8ed4bcb8-403f-441b-bc61-f4103d31f3a2", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_14", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, is the number of derived properties of the state equal to 3? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "bfa23e3b-0613-4100-b803-0dc9c160bbf0", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_15", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, is the number of self constraint properties of the state equal to 2? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "0d858735-e819-4c69-82f6-bbceda5ab30a", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_16", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, is the number of self constraint properties of the state equal to 1? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "c9b5ccf8-beb5-4912-bd32-07de76fc9e9f", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_17", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is the number of static properties of the state equal to 2? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "309404c6-192e-4a63-a538-2637079081e7", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_18", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is the number of static properties of the state equal to 1? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "40908602-d3a0-4f31-8b5f-e0ea2a34501f", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, what is the total number of objects? Write as an integer. Write None if there are none.", "answer": "22", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "004edcbb-9581-4256-ac10-0d7d910c8929", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, what is the total number of executable actions? Write as an integer. Write None if there are none.", "answer": "3", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "f8f9967c-25ee-49a1-9f67-b47036b2b39e", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, what is the total number of inexecutable actions? Write as an integer. Write None if there are none.", "answer": "297", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "624c0a7a-0072-4d52-9ab7-9dda9e38b704", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, what is the total number of valid properties of the state? Write as an integer. Write None if there are none.", "answer": "23", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "65842f54-d70b-4f5b-9c58-98a2ea85a471", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as an integer. Write None if there are none.", "answer": "62", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "d3f21c94-444b-469c-a297-a3124b1670d4", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_6", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, what is the total number of base properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "0b15943b-ef68-4407-8e66-eca4d64a7388", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, what is the total number of derived properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "239e1d25-1bba-47ec-99d9-498b7abdd90c", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_8", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, what is the total number of self constraint properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "8307ee94-49c2-4952-8212-646ac7352052", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_9", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, what is the total number of static properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "bbf619d4-0281-45d0-99c0-62978c50e94d", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 10?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "aa76d23b-85b5-4c6e-a9b0-a9b19860c594", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 8?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "5951c36d-ef55-4510-b6d3-245cb99b5196", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f3 to location l1 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. How many actions are there before the first inexecutable action? Write as an integer. Write None if there are none.", "answer": "8", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "bfc30d91-edd7-4439-9bfa-34cbfea929a2", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, is the number of objects equal to 22? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "48b536c0-0fed-4fd4-9365-2da303663a3f", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, is the number of objects equal to 19? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "6cd971f8-3300-4838-82ba-06d8c9f7d3d0", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, is the number of executable actions equal to 7? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "14be348d-0ed5-4dd5-9f93-9cd8c3ea6159", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, is the number of executable actions equal to 8? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "9431f511-857c-4674-8e0a-420c71ed0c2d", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_5", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, is the number of inexecutable actions equal to 293? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "e72e48a6-3d4a-4d5d-86f9-23002d15875d", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_6", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, is the number of inexecutable actions equal to 342? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "d1c33493-e3c8-471c-a94d-be795e473a10", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_7", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, is the number of valid properties of the state equal to 23? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "80568657-f561-41e1-b9ca-05802e38c5d0", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_8", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, is the number of valid properties of the state equal to 19? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "6c5db151-ac3d-4d32-8034-21a7b1b1119a", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_9", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 62? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "dc6b035f-a770-4cb6-bdbf-9802ad12862a", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_10", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 70? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "d7e2c9e2-1a84-4746-b0ed-afd21c15c0b3", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, is the number of base properties of the state equal to 2? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "eee74369-0b21-4705-b85b-0d1a5633e0bd", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_12", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, is the number of base properties of the state equal to 1? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "15f000e6-1715-4368-ae68-fd0f8927005c", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_13", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, is the number of derived properties of the state equal to 2? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "9c45ec32-bfd5-413e-bbc6-ae13e9451ff4", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_14", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, is the number of derived properties of the state equal to 1? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "68278278-cc6d-40a9-b703-07e2fe63ff53", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_15", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, is the number of self constraint properties of the state equal to 2? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "f15efe58-7850-4a56-a831-4d4dcd7d1371", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_16", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, is the number of self constraint properties of the state equal to 1? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "cf155ba9-e140-4033-ba56-f2d4eb242889", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_17", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, is the number of static properties of the state equal to 2? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "6a234fbf-95f8-43ec-b1c6-a27907b03098", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_18", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, is the number of static properties of the state equal to 3? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "29e6c3fd-7617-421d-8e1b-0a3170e5daa2", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, what is the total number of objects? Write as an integer. Write None if there are none.", "answer": "22", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "f8052fed-7ab7-4f9e-ac2a-2d8b029a869a", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, what is the total number of executable actions? Write as an integer. Write None if there are none.", "answer": "7", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "bf13eb8d-20d8-464f-afcb-41af304c1c64", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, what is the total number of inexecutable actions? Write as an integer. Write None if there are none.", "answer": "293", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "6e35fbcb-03c8-4af8-af09-57b5a0437795", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, what is the total number of valid properties of the state? Write as an integer. Write None if there are none.", "answer": "23", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "0be5e3f9-1e19-46f1-8743-65fb0c0c3dfd", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as an integer. Write None if there are none.", "answer": "62", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "db0885e9-f1a6-4e03-a280-ed3462398283", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_6", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, what is the total number of base properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "13eb01f6-712a-444b-a088-155acd25e743", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, what is the total number of derived properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "ba443578-82cc-4787-b8c4-2e77e3463ee0", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_8", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, what is the total number of self constraint properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "78a69129-f1a3-442c-b1d0-0663d6c8982d", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_9", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, what is the total number of static properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "4adb47d3-684c-4fca-97ed-f9ab6aa902ab", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 15?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "f99dada1-e359-40fa-b87f-bd5038c59b7b", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 18?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "7254c36e-93b2-496c-befc-542b200a3730", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f4, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. How many actions are there before the first inexecutable action? Write as an integer. Write None if there are none.", "answer": "3", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "938ed0ab-be3a-4f61-bc3b-3b4477fba583", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, is the number of objects equal to 22? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "aa016546-4155-4ce5-ab7a-a6130b9b8c9e", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, is the number of objects equal to 17? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "a965b93f-6102-44ca-a1c4-3d63a9227b3f", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, is the number of executable actions equal to 3? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "af2838c2-6562-4d3c-b4e4-3d0088a26d15", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, is the number of executable actions equal to 4? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "d5f0096c-caf6-481b-bf8c-5322fdcf3039", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_5", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, is the number of inexecutable actions equal to 297? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "bb6f854a-32f7-46b7-903d-6505044cfc11", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_6", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, is the number of inexecutable actions equal to 305? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "58aca43c-e645-4be0-8df1-909eb51a267c", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_7", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, is the number of valid properties of the state equal to 23? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "d3e80c93-d945-4704-8398-eed33b9d88aa", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_8", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, is the number of valid properties of the state equal to 25? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "44e7b69c-e81c-4ab2-b979-b99423717184", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_9", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 62? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "b3396843-4b50-45ce-b319-3eaf903f62e8", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_10", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 74? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "5224ec72-3c0f-4e5b-883b-6c13e4959987", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, is the number of base properties of the state equal to 2? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "1236fa8a-8f1e-4c91-babf-661cf2d51194", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_12", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, is the number of base properties of the state equal to 3? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "ff88df0e-0f4d-40c6-81f8-7b19aa136d69", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_13", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, is the number of derived properties of the state equal to 2? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "7b1ca59b-8340-4877-bf1c-99834bd0bbf7", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_14", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, is the number of derived properties of the state equal to 1? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "23b6df72-566c-47e8-8d1c-9eaf2d47234d", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_15", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, is the number of self constraint properties of the state equal to 2? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "a32ac4e7-0d8f-4148-a29a-3b290fac663f", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_16", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, is the number of self constraint properties of the state equal to 3? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "13308a9d-cc08-4d49-bf0d-d5f3c1397954", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_17", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, is the number of static properties of the state equal to 2? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "4c3af885-19d6-45cd-9401-457f8807267f", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_1_question_18", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, is the number of static properties of the state equal to 1? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "88af283f-543f-4d08-81d5-e6603b23b908", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, what is the total number of objects? Write as an integer. Write None if there are none.", "answer": "22", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "9852c8c4-34c9-4e88-abc7-0e6fe7002318", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, what is the total number of executable actions? Write as an integer. Write None if there are none.", "answer": "3", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "8138cdbd-00da-4223-ae1c-c3bcb11ad8f2", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, what is the total number of inexecutable actions? Write as an integer. Write None if there are none.", "answer": "297", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "98b838d2-60e9-4b1c-95e1-b45ea73c9087", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, what is the total number of valid properties of the state? Write as an integer. Write None if there are none.", "answer": "23", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "5b113ce8-98f3-485c-90b7-66a4bff7ce4d", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as an integer. Write None if there are none.", "answer": "62", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "3768f10e-3823-4c4a-8a13-5ed5678d0508", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_6", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, what is the total number of base properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "1d00b851-4358-427b-b77b-db5343345c15", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, what is the total number of derived properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "52158ccd-b5e1-452c-9103-12e524e2b5c7", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_8", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, what is the total number of self constraint properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "4366b266-6218-49dc-8ab3-53a548585f29", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_2_question_9", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, what is the total number of static properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "76787a9d-ed77-4fee-97dd-71a3816d5cb2", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 19?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "f4f9f085-a180-4b45-89aa-dca20a613dc7", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 20?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "d1bb879c-26f3-4ede-82c8-332be842fa97", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and cargo c2 is loaded in vehicle v0 with space s0 and space s1 at location l0 to reach the current state. How many actions are there before the first inexecutable action? Write as an integer. Write None if there are none.", "answer": "18", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l0, cargo c3 is present at location l1, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c7 is situated at location l0, cargo c8 is present at location l0, cargo c9 is at location l0, cargo v0 is situated at location l0, fuel f3 exists in location l1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 is connected to location l0, space s0 neighbors space s1, spaces s1 and s2 are neighbors and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "22acaef5-0063-4c61-b20a-9826e2767a29", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, some objects may or may not be defined. Is c0 part of the domain? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "f62aa124-8900-4c37-87b7-5f61812bedaf", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, some objects may or may not be defined. Is s3 part of the domain? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "bfb0d23f-689f-46bf-994f-3889bfed6e0e", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, some properties of the state may or may not be defined. Is vehicle v0 contains space s1 part of the state? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "47a13ddf-9963-4a8d-8921-7f05989dd215", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_2_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, some properties of the state may or may not be defined. Is fuel-levels f3 and f4 are neighbors part of the state? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "ef09c5d6-ce2a-4484-91b0-beaddf73a89b", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_2_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, some properties of the state may or may not be defined. Is inspection of cargo v0 occurs at location l0 part of the state? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "8dc33298-c5dc-44d2-9d25-8ac250f1dd09", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_2_question_12", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, some properties of the state may or may not be defined. Is fuel-level at gas station is raised from f3 to f2 part of the state? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "8911fae8-ecde-40c0-b0d9-7cf8dbf9c7f7", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, is action, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, part of the domain? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "2197d4e5-a64f-498a-aec6-a9b0deb00696", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, is action, at location l0, cargo c4 in vehicle v0 breaks, part of the domain? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "fd31013c-f14c-401b-9217-2fdcc48eb2ff", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_3_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, is action, cargo c7 is unloaded from vehicle v0 with space s1 and space s2 at location l1, part of the domain? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "c38e593a-bf2e-4e94-85c0-20dfbe880579", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_3_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, is action, cargo c5 breaks at location l0 in vehicle v0, part of the domain? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "02a3b69d-4d07-4753-be2f-7ce9e29fb9f0", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_4_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, c0, c1, c2, c3, c4, c5, c6, c8, c9, f1, f2, f3, f4, f5, l0, l1, s0, s1, s2 and v0, is not part of the domain? Write None if all are defined.", "answer": "c0", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "216c2e2b-6ba9-4926-bebb-a9f21a263517", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_4_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, c0, c1, c4, c6, c7, c9, f1, f3, f4, f5, f6, l0, s0 and s1, is not part of the domain? Write None if all are defined.", "answer": "f6", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "4289d258-b370-48e9-86b5-887ec1783cac", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, cargo c2 is at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c6 is present at location l0 and cargo c7 is at location l0, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "eee13496-1058-4445-94bf-11114bc669b1", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected and spaces s0 and s1 are neighbors, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "9c37660d-33b0-4425-affa-cd2efa835bcb", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, cargo c0 is located in vehicle v0, at location l1, cargo c1 is inspected, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c7 is at location l0, cargo c8 is situated at location l0, cargo c9 is situated at location l0, cargo v0 is situated at location l0, location l0 has fuel f3, location l1 has a fuel-level of f3 and vehicle v0 contains space s1, is not defined? Write None if all are defined.", "answer": "at location l1, cargo c1 is inspected", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "a7d877e4-1bb6-4412-8e2e-90745d6082fe", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_8", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, gas station increases the fuel-level from f3 to f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors and spaces s0 and s1 are neighbors, is not defined? Write None if all are defined.", "answer": "gas station increases the fuel-level from f3 to f2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "58d3cd1c-b1ef-4d8f-a352-fdd9472434dc", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_11", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c1 is not in vehicle v0, cargo c2 is not situated at location l1, cargo c3 is not in vehicle v0, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c7 is not located in vehicle v0, cargo c8 is not at location l1cargo c8 is not present at location l1, cargo c8 is not located in vehicle v0, cargo c9 is not at location l1cargo c9 is not present at location l1, location l0 does not have a fuel-level of f1, location l0 does not have fuel f2, location l1 does not have a fuel-level of f2 and location l1 does not have fuel f5, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "d45cb911-3940-4391-bcbc-dca5635f407a", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_12", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, fuel level f0 does not neighbour fuel level f3, fuel level f0 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f3, fuel-levels f0 and f5 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f3 are not neighbors, space s2 does not neighbour space s0 and spaces s0 and s2 are not neighbors, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "2fbb487f-ef44-4af6-8841-1d2f7a2c3adc", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_15", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, cargo c0 is not situated at location l0, cargo c0 is not situated at location l1, cargo c1 is not at location l0cargo c1 is not present at location l0, cargo c1 is not in vehicle v0, cargo c2 is not at location l1cargo c2 is not present at location l1, cargo c2 is not located in vehicle v0, cargo c3 is not at location l0cargo c3 is not present at location l0, cargo c3 is not located in vehicle v0, cargo c4 is not in vehicle v0, cargo c4 is not situated at location l1, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c5 is not in vehicle v0, cargo c6 is not at location l1cargo c6 is not present at location l1, cargo c6 is not in vehicle v0, cargo c7 is not located in vehicle v0, cargo c7 is not situated at location l1, cargo c8 is not at location l1cargo c8 is not present at location l1, cargo v0 is not situated at location l1, fuel f1 does not exist in location l1, fuel f2 does not exist in location l1, fuel f4 does not exist in location l0, fuel f4 does not exist in location l1, fuel f5 does not exist in location l0, location l0 does not have a fuel-level of f0, location l0 does not have a fuel-level of f2, location l0 does not have fuel f1, location l1 does not have fuel f0, location l1 does not have fuel f5, vehicle v0 does not contain cargo c8, vehicle v0 does not contain cargo c9, vehicle v0 does not contain space s0 and vehicle v0 does not contain space s2, is not defined? Write None if all are defined.", "answer": "cargo c9 is not secured in vehicle v0", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "6b1732aa-a95e-412d-921d-f2f2755371a7", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_16", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, fuel level f1 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f1, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f5 are not neighbors, gas station does not increase the fuel-level from f0 to f3, fuel-levels f3 and f1 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f5 and f4 are not neighbors, space s1 does not neighbour space s0, spaces s0 and s2 are not neighbors, spaces s2 and s0 are not neighbors and spaces s2 and s1 are not neighbors, is not defined? Write None if all are defined.", "answer": "gas station does not increase the fuel-level from f0 to f3", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "9c016444-9c43-4306-a4e0-12ba26f95e04", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_19", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c0 is not situated at location l1, cargo c1 is not in vehicle v0, cargo c1 is not situated at location l0, cargo c1 is present at location l1, cargo c2 is not at location l1cargo c2 is not present at location l1, cargo c2 is not located in vehicle v0, cargo c3 is present at location l1, cargo c4 is not located in vehicle v0, cargo c4 is not situated at location l1, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c6 is not at location l1cargo c6 is not present at location l1, cargo c6 is not in vehicle v0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c7 is not located in vehicle v0, cargo c8 is at location l0, cargo c8 is not situated at location l1, cargo c9 is not in vehicle v0, cargo c9 is not situated at location l1, cargo v0 is not situated at location l1, fuel f1 does not exist in location l1, fuel f3 exists in location l0, fuel f4 does not exist in location l0, location l0 does not have a fuel-level of f5, location l0 does not have fuel f0, location l1 does not have a fuel-level of f2, vehicle v0 does not contain cargo c3, vehicle v0 does not contain cargo c5, vehicle v0 does not contain cargo c8 and vehicle v0 does not contain space s0, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "0ea2cf2d-bace-4659-b606-85517f53c592", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_20", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, fuel level f0 neighbors fuel level f1, fuel level f5 does not neighbour fuel level f1, fuel-levels f3 and f2 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f5 and f2 are not neighbors, location l0 and location l1 are connected and location l1 and location l0 are connected, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "168f5ae8-6e28-4131-b9fb-3c00777b68f0", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_23", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, cargo c2 is situated at location l0, cargo c3 is not situated at location l0, cargo c5 is present at location l0, cargo c8 is situated at location l0, cargo c9 is not situated at location l1, location l0 does not have a fuel-level of f2, location l1 does not have a fuel-level of f1, location l1 does not have fuel f2 and vehicle v0 has space s1, is not defined? Write None if all are defined.", "answer": "inspection of cargo c2 occurs at location l0", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "4cb74d96-b7b8-486c-bb48-1e794930b838", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_24", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, fuel level f0 does not neighbour fuel level f3, fuel level f0 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f4, fuel level f1 neighbors fuel level f2, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f1, fuel level f2 does not neighbour fuel level f5, fuel level f2 neighbors fuel level f3, fuel level f3 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f3, fuel-levels f0 and f1 are neighbors, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f4 are not neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, space s0 does not neighbour space s2, space s1 neighbors space s2, space s2 does not neighbour space s0, space s2 does not neighbour space s1, spaces s0 and s1 are neighbors and spaces s1 and s0 are not neighbors, is not defined? Write None if all are defined.", "answer": "location l1 is far from location l0", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "8382a3b8-471b-4a34-9673-ea2d7b49d047", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_6_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "c7717bc7-6a46-4c48-a486-37ac27166ed3", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_6_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed:  and at location l0, cargo c0 in vehicle v0 breaks to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "at location l0, cargo c0 in vehicle v0 breaks", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "7cc8b8c8-e257-4e46-a52d-bb77c489fafd", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, some objects may or may not be defined. Is c4 part of the domain? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "dc3f4d56-16b9-4b02-8ef6-e1cab10bece9", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, some objects may or may not be defined. Is c10 part of the domain? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "023aeb44-5780-4fc2-9628-fb01f2fe11e9", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, some properties of the state may or may not be defined. Is cargo c0 is at location l1 part of the state? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "2c9e0f29-0f85-4287-9df4-feba8d847252", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_2_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, some properties of the state may or may not be defined. Is fuel-levels f1 and f2 are neighbors part of the state? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "a467c513-b535-4608-9d0c-9d3a60502f57", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_2_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, some properties of the state may or may not be defined. Is cargo c1 is secured in vehicle v0 part of the state? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "b806fad3-ddfc-4a76-921f-29e6b23e59e2", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_2_question_12", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, some properties of the state may or may not be defined. Is location l1 and location l0 are far from each other part of the state? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "e61527c2-ffc4-49ba-99dd-44c4e615b89d", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is action, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l1, part of the domain? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "6811a5f7-35e0-4cb8-a3bf-f8c7c9478c77", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, is action, at location l1, vehicle v0 is pulled over, part of the domain? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "b86ba1d2-f4d6-432b-9ec7-22951c430afe", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_3_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, is action, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s2, part of the domain? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "5b9231a6-15cb-4af9-9e04-6f2341ab7e3a", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_3_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is action, at location l0, cargo c2 in vehicle v0 breaks, part of the domain? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "87d972e0-24f0-441e-aadb-6bc94c5c8079", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_4_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, f2, f3, l1 and s1, is not part of the domain? Write None if all are defined.", "answer": "s1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "33fa9c84-ca21-4cbc-b53d-cf8edeeb953f", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_4_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, c0, c1, c10, c3, c4, c5, c6, c7, c8, f0, f1, f2, f3, f4, f5, l0, l1, s0, s1, s2 and v0, is not part of the domain? Write None if all are defined.", "answer": "c10", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "746dc6df-253e-42b9-bfc1-456d823a5266", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, cargo c3 is present at location l1, cargo c5 is present at location l0, cargo c8 is situated at location l0, cargo c9 is at location l0, cargo v0 is at location l1, fuel f2 exists in location l0 and location l1 has a fuel-level of f3, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "63e70120-098c-4842-a5df-4f0c0725aa94", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1 and there is a connection between locations l1 and l0, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "ce8e2f5a-dfa5-42ed-8741-f862bce91df4", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, cargo c1 is located in vehicle v0, cargo c2 is located in vehicle v0, cargo c5 is situated at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is situated at location l0, cargo v0 is situated at location l1, location l0 has fuel f2, location l1 has fuel f3 and vehicle v0 contains space s0, is not defined? Write None if all are defined.", "answer": "cargo v0 is inspected at location l1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "12e38240-fa5c-4541-8c9d-47dc25ad9811", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_8", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, location l1 is connected to location l0 and space s0 neighbors space s1, is not defined? Write None if all are defined.", "answer": "fuel-level at gas station is raised from f2 to f1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "4dc53ae3-9fb9-4065-8d0d-4639afada950", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_11", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, cargo c0 is not situated at location l0, cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c6 is not situated at location l1, cargo c8 is not located in vehicle v0, fuel f1 does not exist in location l1, location l0 does not have fuel f0, vehicle v0 does not contain cargo c9 and vehicle v0 does not contain space s1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "b26bd869-fb26-41c2-a3c4-5c397c80bde7", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_12", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, fuel level f0 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f1, fuel level f2 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f2, fuel-levels f0 and f2 are not neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f4 and f0 are not neighbors and spaces s2 and s1 are not neighbors, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "c01944e6-a476-46c7-939a-a01fc3fac918", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_15", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, cargo c6 is not located in vehicle v0, cargo c8 is not located in vehicle v0, fuel f1 does not exist in location l1 and cargo c3 is not secured in vehicle v0, is not defined? Write None if all are defined.", "answer": "cargo c3 is not secured in vehicle v0", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "fe242159-2808-4dda-a9e6-6d19564b25d0", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_16", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, fuel level f0 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f2, fuel-levels f0 and f5 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-level at gas station is not increased from f5 to f3, fuel-levels f5 and f1 are not neighbors, space s0 does not neighbour space s2, space s2 does not neighbour space s1, spaces s1 and s0 are not neighbors and spaces s2 and s0 are not neighbors, is not defined? Write None if all are defined.", "answer": "fuel-level at gas station is not increased from f5 to f3", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "85ec434c-e916-4628-8537-d31f44d4f988", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_19", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, cargo c0 is not situated at location l0, cargo c0 is situated at location l1, cargo c1 is not at location l0cargo c1 is not present at location l0, cargo c1 is not situated at location l1, cargo c2 is located in vehicle v0, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c2 is not at location l1cargo c2 is not present at location l1, cargo c3 is at location l1, cargo c3 is not in vehicle v0, cargo c3 is not situated at location l0, cargo c4 is not situated at location l1, cargo c4 is situated at location l0, cargo c5 is at location l0, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c5 is not in vehicle v0, cargo c6 is at location l0, cargo c6 is not at location l1cargo c6 is not present at location l1, cargo c6 is not located in vehicle v0, cargo c7 is not at location l1cargo c7 is not present at location l1, cargo c7 is not in vehicle v0, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c8 is not at location l1cargo c8 is not present at location l1, cargo c8 is not located in vehicle v0, cargo c9 is not situated at location l1, cargo c9 is situated at location l0, cargo v0 is at location l1, cargo v0 is not at location l0cargo v0 is not present at location l0, fuel f0 does not exist in location l0, fuel f0 does not exist in location l1, fuel f1 does not exist in location l1, fuel f2 does not exist in location l1, fuel f3 exists in location l1, location l0 does not have a fuel-level of f1, location l0 does not have a fuel-level of f3, location l0 does not have a fuel-level of f4, location l0 does not have a fuel-level of f5, location l1 does not have a fuel-level of f4, location l1 does not have fuel f5, vehicle v0 contains cargo c1, vehicle v0 does not contain cargo c0, vehicle v0 does not contain cargo c4, vehicle v0 does not contain cargo c9, vehicle v0 does not contain space s1, vehicle v0 does not contain space s2 and vehicle v0 has space s0, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "6c3dc500-8d7f-46ca-a46c-0abfdf954a73", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_20", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, fuel level f0 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f1, fuel level f2 neighbors fuel level f3, fuel level f4 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f3, fuel-levels f0 and f3 are not neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f5 and f4 are not neighbors and space s2 does not neighbour space s1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "05950d91-2d48-4f04-9dda-5be6c53b7c5d", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_23", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c0 is not in vehicle v0, cargo c0 is situated at location l1, cargo c2 is not at location l1cargo c2 is not present at location l1, cargo c3 is at location l1, cargo c3 is not situated at location l0, cargo c4 is present at location l0, cargo c6 is not at location l1cargo c6 is not present at location l1, cargo c6 is situated at location l0, cargo c7 is not situated at location l1, cargo c8 is at location l0, cargo c9 is present at location l0, location l0 does not have a fuel-level of f0, location l0 does not have a fuel-level of f4, location l1 does not have fuel f0, location l1 does not have fuel f4, location l1 does not have fuel f5, vehicle v0 contains cargo c1, vehicle v0 contains cargo c2, vehicle v0 contains space s0 and vehicle v0 does not contain cargo c7, is not defined? Write None if all are defined.", "answer": "cargo c7 is not inspected at location l1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "412209a6-3587-4643-83cd-83ee4ebd7d14", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_24", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, fuel-level at gas station is not increased from f5 to f1, fuel level f2 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f5, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f3, fuel-levels f0 and f1 are neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f4 and f2 are not neighbors, location l0 and location l1 are connected, spaces s2 and s1 are not neighbors and there is a connection between locations l1 and l0, is not defined? Write None if all are defined.", "answer": "fuel-level at gas station is not increased from f5 to f1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "a335f370-755b-48bf-9b1b-bc20b03d9fd8", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_6_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "9840be86-5659-4745-b6c7-ab5f36736033", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_6_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 present in vehicle v0 breaks at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "cargo c2 present in vehicle v0 breaks at location l0", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "da615f15-5a44-4314-b2fc-d4cea2ef702c", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, some objects may or may not be defined. Is c0 part of the domain? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "c2a17934-b2c4-40fb-bb3d-05bb53c12c02", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, some objects may or may not be defined. Is c10 part of the domain? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "a8612912-7426-4d1b-bcd0-2fa2547af864", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, some properties of the state may or may not be defined. Is cargo c8 is present at location l0 part of the state? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "9ad6fe3c-9fb4-4e5b-a668-265a0eac3208", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_2_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, some properties of the state may or may not be defined. Is spaces s1 and s2 are neighbors part of the state? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "4a4c8a65-8fe7-40b2-9fa9-768024e53415", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_2_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, some properties of the state may or may not be defined. Is cargo c0 is inspected at location l1 part of the state? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "f405ae34-5f67-4971-bcb9-e9514ef1e89d", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_2_question_12", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, some properties of the state may or may not be defined. Is fuel-level at gas station is increased from f4 to f3 part of the state? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "77e195ca-3d29-4f79-bdda-af1a6c87f495", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is action, at location l0, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, part of the domain? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "28cd69df-4bcb-4b0f-b60f-e54e602bb357", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is action, cargo c6 and vehicle v0 are inspected at location l0, part of the domain? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "b79cf2b4-8262-4142-a605-d862aa25ef29", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_3_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, is action, cargo c4 is loaded in vehicle v0 with space s2 and space s1 at location l1, part of the domain? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "98d465d7-5a75-4fb3-99a3-bf1794faa172", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_3_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is action, at location l1, inspection of cargo c3 and vehicle v0 is performed, part of the domain? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "76932a57-a5f9-4df9-9e9e-f1873713622e", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_4_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, c0, c1, c2, c4, c5, c6, c7, c8, c9, f0, f1, f2, f4, f5, l0, s0 and s1, is not part of the domain? Write None if all are defined.", "answer": "c7", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "69377716-6c4f-4965-b307-2aab12cf5dfd", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_4_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, c1, c10, c3, c4, c6, c8, c9, f0, f1, f4, f5, l0, l1, s0, s1, s2 and v0, is not part of the domain? Write None if all are defined.", "answer": "c10", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "3a7fba83-b5b3-4311-9203-c4eb169e7e1f", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, cargo c4 is situated at location l0, cargo c5 is located in vehicle v0, cargo c8 is situated at location l0, cargo c9 is present at location l0 and fuel f2 exists in location l1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "d98347f7-a9b0-4b1b-818c-d55334bb6eb1", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, location l0 is connected to location l1 and space s0 neighbors space s1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "69ad7bac-6173-4f1d-bf18-b16a014d12ff", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, cargo v0 is situated at location l0, location l1 sells fuel f2 and vehicle v0 contains cargo c6, is not defined? Write None if all are defined.", "answer": "location l1 sells fuel f2", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "25bfb2de-fbf2-45eb-b350-e4f9d2e1c368", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_8", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, gas station increases the fuel-level from f1 to f0 and location l0 is connected to location l1, is not defined? Write None if all are defined.", "answer": "gas station increases the fuel-level from f1 to f0", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "847f4fde-3747-4386-b43a-dea0188df99a", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_11", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, cargo c0 is not situated at location l0, cargo c1 is not situated at location l1, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c3 is not at location l0cargo c3 is not present at location l0, cargo c3 is not located in vehicle v0, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c5 is not situated at location l0, cargo c5 is not situated at location l1, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not situated at location l1, cargo c7 is not at location l1cargo c7 is not present at location l1, cargo c7 is not located in vehicle v0, cargo c8 is not located in vehicle v0, cargo c8 is not situated at location l1, cargo c9 is not at location l1cargo c9 is not present at location l1, cargo c9 is not located in vehicle v0, cargo v0 is not at location l1cargo v0 is not present at location l1, fuel f3 does not exist in location l1, fuel f5 does not exist in location l0, location l0 does not have a fuel-level of f1, location l0 does not have a fuel-level of f4, location l0 does not have fuel f0, location l0 does not have fuel f3, location l1 does not have a fuel-level of f1, location l1 does not have a fuel-level of f5, location l1 does not have fuel f4, vehicle v0 does not contain cargo c0, vehicle v0 does not contain cargo c4, vehicle v0 does not contain space s1 and vehicle v0 does not have space s2, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "5a2e525c-fff4-4d2d-8608-778cf62b0030", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_12", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f5, fuel level f4 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f0, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f5 and f3 are not neighbors, space s2 does not neighbour space s1, spaces s1 and s0 are not neighbors and spaces s2 and s0 are not neighbors, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "52bf12c7-323a-45e0-8b20-6de374269a55", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_15", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, cargo c0 is not situated at location l0, cargo c1 is not in vehicle v0, cargo c4 is not in vehicle v0, cargo c7 is not at location l1cargo c7 is not present at location l1 and cargo c8 is not at location l1cargo c8 is not present at location l1, is not defined? Write None if all are defined.", "answer": "cargo c1 is not secured in vehicle v0", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "d2eff7b8-dc65-495d-ab9c-efa4f75966b1", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_16", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, fuel level f0 does not neighbour fuel level f4, fuel level f0 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f4, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f3, fuel-levels f0 and f2 are not neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f4 are not neighbors, space s0 does not neighbour space s2, space s1 does not neighbour space s0 and spaces s2 and s0 are not neighbors, is not defined? Write None if all are defined.", "answer": "fuel-level at gas station is not increased from f3 to f1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "7322ca0d-d6a7-4b29-bf8e-d5147d806c0c", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_19", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c0 is not located in vehicle v0, cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c1 is present at location l0, cargo c2 is not situated at location l0, cargo c3 is not situated at location l0, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c4 is present at location l0, cargo c5 is not at location l0cargo c5 is not present at location l0, cargo c6 is in vehicle v0, cargo c8 is not located in vehicle v0, cargo c9 is not in vehicle v0, cargo c9 is not situated at location l1, cargo c9 is present at location l0, cargo v0 is not at location l1cargo v0 is not present at location l1, fuel f2 exists in location l1, fuel f3 does not exist in location l0, fuel f4 does not exist in location l0, fuel f5 does not exist in location l1, location l0 does not have a fuel-level of f1, location l0 has fuel f2, location l1 does not have a fuel-level of f1, location l1 does not have a fuel-level of f4, vehicle v0 does not contain cargo c1, vehicle v0 does not contain cargo c2, vehicle v0 does not contain cargo c3, vehicle v0 does not contain cargo c4 and vehicle v0 does not contain space s2, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "7a6dd225-5a65-4f3e-bbdc-a54b7151424a", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_20", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f3, fuel level f0 does not neighbour fuel level f5, fuel level f0 neighbors fuel level f1, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f3, fuel level f1 neighbors fuel level f2, fuel level f2 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f5, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f3, fuel-levels f0 and f4 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f4 are not neighbors, space s1 does not neighbour space s0, spaces s0 and s1 are neighbors, spaces s0 and s2 are not neighbors, spaces s1 and s2 are neighbors and there is a connection between locations l0 and l1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "c78ed435-3a76-4a90-b2de-596a0a67278d", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_23", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, cargo c0 is not in vehicle v0, cargo c0 is not situated at location l0, cargo c0 is situated at location l1, cargo c1 is at location l0, cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c2 is not located in vehicle v0, cargo c2 is not situated at location l0, cargo c2 is present at location l1, cargo c3 is not at location l0cargo c3 is not present at location l0, cargo c3 is not in vehicle v0, cargo c3 is present at location l1, cargo c4 is not in vehicle v0, cargo c4 is not situated at location l1, cargo c5 is in vehicle v0, cargo c5 is not at location l0cargo c5 is not present at location l0, cargo c5 is not situated at location l1, cargo c6 is in vehicle v0, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not at location l1cargo c6 is not present at location l1, cargo c7 is not at location l1cargo c7 is not present at location l1, cargo c7 is not located in vehicle v0, cargo c8 is not in vehicle v0, cargo c8 is not situated at location l1, cargo c9 is not situated at location l1, cargo c9 is present at location l0, cargo v0 is not at location l1cargo v0 is not present at location l1, cargo v0 is situated at location l0, fuel f2 exists in location l0, fuel f3 does not exist in location l0, fuel f3 does not exist in location l1, fuel f5 does not exist in location l0, fuel f5 does not exist in location l1, location l0 does not have a fuel-level of f1, location l0 does not have fuel f4, location l1 does not have fuel f0, location l1 does not have fuel f4, location l1 has fuel f2, vehicle v0 contains space s0, vehicle v0 does not have space s1 and vehicle v0 does not have space s2, is not defined? Write None if all are defined.", "answer": "inspection of cargo c1 occurs at location l0", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "ffe8fb13-1af2-49b6-8075-026c95dbf427", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_24", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, fuel level f0 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f4, fuel level f1 neighbors fuel level f2, fuel level f2 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f5, fuel level f4 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f3, fuel-levels f0 and f1 are neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f4 and f2 are not neighbors, space s2 does not neighbour space s1, spaces s0 and s1 are neighbors and there is a connection between locations l0 and l1, is not defined? Write None if all are defined.", "answer": "gas station does not increase the fuel-level from f2 to f4", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "1ff1806c-104f-4f07-a5e2-a87f7148e323", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_6_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "39be4f0c-c25d-4dbe-81fc-a296fe9ccd26", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_6_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 in vehicle v0 breaks, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0 and at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "at location l1, cargo c1 in vehicle v0 breaks", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "c3df2fca-d905-4e4b-b106-ecf1d3260187", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, some objects may or may not be defined. Is f5 part of the domain? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "b1d434cd-b17a-4119-854f-9cf02c58d0c2", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, some objects may or may not be defined. Is c10 part of the domain? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "f1b11322-5232-4380-ba70-1864f619d469", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, some properties of the state may or may not be defined. Is cargo c5 is situated at location l1 part of the state? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "32fda79d-9d66-4082-bff2-44ea0456dead", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_2_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, some properties of the state may or may not be defined. Is fuel level f4 neighbors fuel level f5 part of the state? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "b1458004-1c8b-4bfb-bf10-5f452bace4ed", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_2_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, some properties of the state may or may not be defined. Is at location l0, cargo c4 is inspected part of the state? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "ce57acee-8e6f-4572-91be-f6fd35e02de1", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_2_question_12", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, some properties of the state may or may not be defined. Is fuel-level at gas station is increased from f5 to f4 part of the state? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "3bb4e1ec-e1cc-48bb-ab9d-694a8f5af940", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, is action, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, part of the domain? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "f27e67b9-f3e4-4be6-97e1-e66bb514d027", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, is action, cargo c8 breaks at location l0 in vehicle v0, part of the domain? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "5368c5cf-13eb-4c65-9507-107770b4bcaa", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_3_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, is action, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, part of the domain? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "90358ee9-822c-4a99-9f00-1c98184fef82", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_3_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, is action, at location l0, inspection of cargo c5 and vehicle v0 is performed, part of the domain? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "781ba9df-774c-4c24-a944-e2f8ea009b1c", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_4_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, c3, c4, c6, c9, l0 and s2, is not part of the domain? Write None if all are defined.", "answer": "c9", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "d458fa3e-54ba-4bf9-ab6e-93c5b173e25f", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_4_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, c10, f5 and s0, is not part of the domain? Write None if all are defined.", "answer": "c10", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "ef8b5875-81bc-4210-b0c8-79f5f0e34a49", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, cargo c0 is situated at location l1, cargo c2 is situated at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l1, cargo c6 is present at location l1, cargo c7 is at location l0, cargo c8 is situated at location l0, cargo c9 is present at location l0, cargo v0 is at location l0, location l0 has fuel f1, location l1 has fuel f1 and vehicle v0 contains cargo c3, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "2f1ce125-d6dc-4759-8a56-ce0a71650f78", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4 and space s1 neighbors space s2, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "8b94e298-20d5-423d-9cb6-0398944fb17e", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, cargo c0 is present at location l1, cargo c2 is at location l1, inspection of cargo c4 occurs at location l0, cargo c7 is situated at location l0, cargo c9 is present at location l0 and vehicle v0 has space s1, is not defined? Write None if all are defined.", "answer": "inspection of cargo c4 occurs at location l0", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "2e6d95dd-2859-4c47-9c5b-2974085aa97c", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_8", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, fuel level f4 neighbors fuel level f5, fuel-level at gas station is raised from f1 to f0 and fuel-levels f2 and f3 are neighbors, is not defined? Write None if all are defined.", "answer": "fuel-level at gas station is raised from f1 to f0", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "da8b0ce9-83a9-45e2-a03e-dd4801764049", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_11", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, cargo c2 is not in vehicle v0, cargo c2 is not situated at location l0, cargo c3 is not at location l1cargo c3 is not present at location l1, cargo c5 is not at location l0cargo c5 is not present at location l0, cargo c5 is not in vehicle v0, cargo c7 is not in vehicle v0, cargo c8 is not located in vehicle v0, cargo c9 is not at location l1cargo c9 is not present at location l1, location l0 does not have a fuel-level of f4, location l0 does not have fuel f0, location l1 does not have a fuel-level of f0, location l1 does not have a fuel-level of f2 and vehicle v0 does not contain cargo c6, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "1a7622fc-262b-4d36-99bc-6c0a8cbc811c", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_12", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f3, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f5, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f4, fuel-levels f0 and f4 are not neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f3 are not neighbors, space s2 does not neighbour space s1 and spaces s2 and s0 are not neighbors, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "2edde032-6107-4ca2-827f-80f8ad7a3248", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_15", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c0 is not in vehicle v0, cargo c1 is not situated at location l1, cargo c2 is not situated at location l0, cargo c3 is not at location l0cargo c3 is not present at location l0, cargo c3 is not situated at location l1, cargo c4 is not situated at location l1, cargo c5 is not at location l0cargo c5 is not present at location l0, cargo c5 is not in vehicle v0, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c7 is not at location l1cargo c7 is not present at location l1, cargo c8 is not at location l1cargo c8 is not present at location l1, cargo c9 is not at location l1cargo c9 is not present at location l1, cargo c9 is not located in vehicle v0, cargo v0 is not at location l1cargo v0 is not present at location l1, fuel f0 does not exist in location l0, fuel f2 does not exist in location l0, fuel f3 does not exist in location l1, fuel f5 does not exist in location l0, location l0 does not have a fuel-level of f4, location l0 does not have fuel f3, location l1 does not have a fuel-level of f0, location l1 does not have a fuel-level of f2, location l1 does not have a fuel-level of f5, location l1 does not have fuel f4, vehicle v0 does not contain cargo c1, vehicle v0 does not contain cargo c2, vehicle v0 does not contain cargo c4, vehicle v0 does not contain cargo c6, vehicle v0 does not contain cargo c7, vehicle v0 does not contain cargo c8 and vehicle v0 does not contain space s2, is not defined? Write None if all are defined.", "answer": "inspection of cargo c1 does not occur at location l1", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "e121bd6f-e209-4b64-a9be-788fe1e842d0", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_16", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, fuel level f0 does not neighbour fuel level f3, fuel level f0 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f5, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f3, fuel-level at gas station is not raised from f4 to f0, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f4 are not neighbors, space s0 does not neighbour space s2, space s1 does not neighbour space s0, space s2 does not neighbour space s1 and spaces s2 and s0 are not neighbors, is not defined? Write None if all are defined.", "answer": "fuel-level at gas station is not raised from f4 to f0", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "49e8f48b-c182-4f54-9f29-1e2749da6cd4", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_19", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, cargo c0 is at location l1, cargo c3 is not at location l0cargo c3 is not present at location l0, cargo c3 is not at location l1cargo c3 is not present at location l1, cargo c5 is not at location l0cargo c5 is not present at location l0, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c7 is not situated at location l1, cargo c8 is not situated at location l1, cargo c8 is present at location l0, cargo c9 is present at location l0, fuel f0 does not exist in location l0, fuel f1 exists in location l0, location l0 does not have fuel f2, location l0 does not have fuel f3, location l0 does not have fuel f4, location l1 does not have a fuel-level of f5, vehicle v0 does not contain cargo c0, vehicle v0 does not contain cargo c1, vehicle v0 does not contain cargo c5, vehicle v0 does not contain cargo c7, vehicle v0 does not contain cargo c8 and vehicle v0 does not have space s0, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "8e885926-509f-449d-b791-50194f0b9280", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_20", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f3, fuel level f0 does not neighbour fuel level f4, fuel level f0 neighbors fuel level f1, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f5, fuel level f1 neighbors fuel level f2, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f1, fuel level f2 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f5, fuel level f2 neighbors fuel level f3, fuel level f3 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f3, fuel-levels f0 and f5 are not neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f4 are not neighbors, location l1 is connected to location l0, space s0 does not neighbour space s2, space s1 does not neighbour space s0, space s1 neighbors space s2, spaces s0 and s1 are neighbors, spaces s2 and s0 are not neighbors and spaces s2 and s1 are not neighbors, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "00c57f95-f65c-44b4-a5b2-578a8f1d70d0", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_23", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, cargo c1 is present at location l0, cargo c3 is not at location l0cargo c3 is not present at location l0, cargo c5 is at location l1 and location l1 has fuel f1, is not defined? Write None if all are defined.", "answer": "inspection of cargo c3 does not occur at location l0", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "b5a1192e-0bc1-474d-bc68-2077b9a584e1", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_24", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, fuel level f0 does not neighbour fuel level f4, fuel level f0 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f1, fuel level f2 does not neighbour fuel level f5, fuel level f2 neighbors fuel level f3, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f5, fuel level f4 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f4, fuel-levels f0 and f2 are not neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f3 are not neighbors, space s0 does not neighbour space s2, space s0 neighbors space s1, space s1 neighbors space s2, space s2 does not neighbour space s0, space s2 does not neighbour space s1, spaces s1 and s0 are not neighbors and there is a connection between locations l0 and l1, is not defined? Write None if all are defined.", "answer": "gas station does not increase the fuel-level from f5 to f2", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "f1b8103f-11c4-4a3e-9933-5fae8c932fff", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_6_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "1a71f88b-3f94-4d61-af13-4a182dd8be17", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_6_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 in vehicle v0 breaks, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "at location l0, cargo c6 in vehicle v0 breaks", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "7611ecbf-7f11-4fd2-909d-3bab4970b91a", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, some objects may or may not be defined. Is c0 part of the domain? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "8c6cf368-af7f-4d17-a1f0-339f325d42a8", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, some objects may or may not be defined. Is c10 part of the domain? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "32e7b98e-ada6-4dec-b606-5cca6d9c7a85", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, some properties of the state may or may not be defined. Is cargo c3 is situated at location l0 part of the state? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "05ab5885-16a7-4c46-b09c-04fae3e40fad", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_2_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, some properties of the state may or may not be defined. Is fuel-levels f3 and f4 are neighbors part of the state? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "98b36d1c-3f5e-4f9e-8703-587f591232e5", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_2_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, some properties of the state may or may not be defined. Is at location l1, cargo c0 is inspected part of the state? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "6647dd8d-5153-42f1-a7d1-1a76aeb8a334", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_2_question_12", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, some properties of the state may or may not be defined. Is gas station increases the fuel-level from f1 to f0 part of the state? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "81b6ede4-578d-4f0f-8bb9-0618218ea8da", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, is action, at location l1, cargo c7 is unloaded from vehicle v0 with spaces s0 and s1, part of the domain? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "8f26706c-f75b-4268-b07b-52a95f195c7a", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, is action, at location l1, inspection of cargo c7 and vehicle v0 is performed, part of the domain? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "754c487a-8de3-4578-83c8-3b7835affb5f", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_3_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, is action, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, part of the domain? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "d521f92b-3122-4f13-a949-7bd703d70016", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_3_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, is action, at location l0, vehicle v0 is pulled over, part of the domain? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "24c231ad-0f05-4565-85c8-00cfad738d9f", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_4_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, c6, c7, f3 and l0, is not part of the domain? Write None if all are defined.", "answer": "c6", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "98c1d50e-3c0b-4278-9863-5682312b8224", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_4_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, c0, f2, f6, l0, l1, s1, s2 and v0, is not part of the domain? Write None if all are defined.", "answer": "f6", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "d3397d3f-ed95-4f2e-985e-695a997b1d12", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, cargo c0 is present at location l1, cargo c1 is present at location l0, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is at location l0, cargo c5 is at location l1, cargo c6 is present at location l1, cargo c8 is located in vehicle v0, cargo v0 is situated at location l1, location l1 has fuel f1, vehicle v0 contains cargo c7 and vehicle v0 has space s0, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "a3beb2aa-5912-4fdd-89e8-1c48ae20b6ac", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 and location l1 are connected and spaces s0 and s1 are neighbors, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "5f01a263-de10-4f27-8754-a8e53d2ddf69", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, cargo c5 is present at location l1, cargo c9 is situated at location l0, fuel f1 exists in location l1 and vehicle v0 contains cargo c7, is not defined? Write None if all are defined.", "answer": "cargo c7 is secured in vehicle v0", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "693b6937-47d6-46d6-b24e-8d57876ad6f9", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_8", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, space s0 neighbors space s1 and space s1 neighbors space s2, is not defined? Write None if all are defined.", "answer": "gas station increases the fuel-level from f5 to f4", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "21d3d848-cd43-4ad5-afda-6ed5fe7c8e8c", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_11", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, cargo c0 is not in vehicle v0, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c3 is not at location l1cargo c3 is not present at location l1, cargo c3 is not in vehicle v0, cargo c4 is not located in vehicle v0, cargo c5 is not at location l0cargo c5 is not present at location l0, cargo c5 is not in vehicle v0, cargo c6 is not in vehicle v0, cargo c8 is not situated at location l1, cargo v0 is not situated at location l0, fuel f1 does not exist in location l0, fuel f5 does not exist in location l0, vehicle v0 does not contain cargo c9 and vehicle v0 does not contain space s1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "eef3f30c-5adc-420c-ba2a-424562c5fb17", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_12", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, fuel level f0 does not neighbour fuel level f3, fuel level f0 does not neighbour fuel level f4, fuel level f0 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f4, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f5, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f4, fuel-levels f0 and f2 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f3 are not neighbors, space s2 does not neighbour space s0, spaces s0 and s2 are not neighbors, spaces s1 and s0 are not neighbors and spaces s2 and s1 are not neighbors, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "1a20b85d-2b0a-4a67-9977-17f6d3018676", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_15", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, cargo c0 is not in vehicle v0, cargo c0 is not situated at location l0, cargo c1 is not situated at location l1, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c2 is not located in vehicle v0, cargo c3 is not located in vehicle v0, cargo c3 is not situated at location l1, cargo c4 is not located in vehicle v0, cargo c4 is not situated at location l1, cargo c5 is not located in vehicle v0, cargo c5 is not situated at location l0, cargo c7 is not at location l1cargo c7 is not present at location l1, cargo c8 is not at location l0cargo c8 is not present at location l0, cargo c8 is not situated at location l1, cargo c9 is not located in vehicle v0, fuel f0 does not exist in location l1, fuel f3 does not exist in location l1, fuel f4 does not exist in location l0, fuel f5 does not exist in location l1, location l0 does not have a fuel-level of f1, location l1 does not have a fuel-level of f4, vehicle v0 does not contain cargo c6, vehicle v0 does not have space s1 and vehicle v0 does not have space s2, is not defined? Write None if all are defined.", "answer": "cargo c2 is not secured in vehicle v0", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "f28c8943-cd1a-4bf7-9aaf-cbf659b28acf", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_16", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, fuel-level at gas station is not increased from f3 to f4 and space s1 does not neighbour space s0, is not defined? Write None if all are defined.", "answer": "fuel-level at gas station is not increased from f3 to f4", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "e984fdc5-fbbc-429e-b2b4-e4905eba5aaa", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_19", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, cargo c0 is at location l1, cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c1 is not situated at location l1, cargo c1 is present at location l0, cargo c2 is present at location l1, cargo c3 is not in vehicle v0, cargo c3 is not situated at location l1, cargo c4 is situated at location l0, cargo c5 is not in vehicle v0, cargo c5 is present at location l1, cargo c6 is not situated at location l0, cargo c8 is in vehicle v0, cargo c8 is not situated at location l0, cargo c8 is not situated at location l1, cargo c9 is not located in vehicle v0, cargo c9 is not situated at location l1, cargo v0 is not at location l0cargo v0 is not present at location l0, cargo v0 is situated at location l1, fuel f1 exists in location l1, fuel f3 does not exist in location l0, fuel f3 does not exist in location l1, fuel f4 does not exist in location l1, location l0 does not have a fuel-level of f2, location l0 does not have a fuel-level of f5, location l0 does not have fuel f1, location l1 does not have a fuel-level of f2, location l1 does not have fuel f0, location l1 does not have fuel f5, vehicle v0 does not contain cargo c0 and vehicle v0 does not contain cargo c2, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "68011c35-ac9e-44e9-ac94-3ba6c4e48631", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_20", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, fuel level f0 does not neighbour fuel level f3, fuel level f1 neighbors fuel level f2, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f1, fuel level f3 neighbors fuel level f4, fuel level f4 does not neighbour fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f3, fuel-levels f0 and f1 are neighbors, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f4 are not neighbors, location l1 and location l0 are connected, space s0 does not neighbour space s2, spaces s0 and s1 are neighbors, spaces s1 and s0 are not neighbors, spaces s2 and s0 are not neighbors, spaces s2 and s1 are not neighbors and there is a connection between locations l0 and l1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "94551fb2-a001-4287-99f4-9fc789c7ab68", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_23", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s2, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c1 is not located in vehicle v0, cargo c2 is at location l1, cargo c2 is not in vehicle v0, cargo c3 is not situated at location l1, cargo c4 is situated at location l0, cargo c5 is at location l1, cargo c5 is not located in vehicle v0, cargo c6 is situated at location l1, cargo c9 is not situated at location l1, cargo c9 is present at location l0, at location l0, cargo v0 is not inspected, fuel f0 exists in location l0, fuel f3 does not exist in location l1, fuel f5 does not exist in location l1, location l1 does not have a fuel-level of f2 and vehicle v0 does not contain cargo c4, is not defined? Write None if all are defined.", "answer": "at location l0, cargo v0 is not inspected", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "8643ef39-d016-4c77-98bf-5664c9babe05", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_5_question_24", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, cargo c5 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, fuel level f0 does not neighbour fuel level f4, fuel level f0 neighbors fuel level f1, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f5, fuel level f2 neighbors fuel level f3, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 does not neighbour fuel level f0, fuel level f4 neighbors fuel level f5, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f4, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f3 are not neighbors, location l0 and location l1 are connected, space s0 does not neighbour space s2, space s2 does not neighbour space s1, spaces s0 and s1 are neighbors, spaces s1 and s0 are not neighbors, spaces s1 and s2 are neighbors, spaces s2 and s0 are not neighbors and there is a connection between locations l1 and l0, is not defined? Write None if all are defined.", "answer": "fuel-level at gas station is not increased from f2 to f0", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "d64405ff-0151-4a46-83a2-8e73189806ed", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_6_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: cargo c0 is loaded in vehicle v0 with space s2 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, at location l0, cargo c7 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
{"id": "40fc6a0e-a397-4a73-8e53-c7903cc78c16", "domain_name": "mystery", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "iter_6_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: at location l0, cargo c0 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c0 and vehicle v0 are inspected at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s2, at location l0, cargo c5 is loaded in vehicle v0 with spaces s2 and s1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, cargo c3 is unloaded from vehicle v0 with space s1 and space s2 at location l0, cargo c7 is loaded in vehicle v0 with space s2 and space s1 at location l0, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "cargo c0 and vehicle v0 are inspected at location l1", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "space_neighbor(s0,s1)", "at(c1,l1)", "at(c2,l0)", "conn(l0,l1)", "at(c7,l0)", "at(c3,l1)", "fuel_neighbor(f4,f5)", "at(c6,l0)", "at(c5,l0)", "fuel_neighbor(f0,f1)", "at(c0,l0)", "at(v0,l0)", "at(c4,l0)", "fuel_neighbor(f2,f3)", "conn(l1,l0)", "at(c8,l0)", "at(c9,l0)", "has_fuel(l1,f3)", "has_fuel(l0,f3)", "has_space(v0,s2)", "space_neighbor(s1,s2)"], "neg_fluents": ["-fuel_neighbor(f0,f5)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f0)", "-fuel_neighbor(f4,f2)", "-at(v0,l1)", "-in(c7,v0)", "-has_fuel(l1,f5)", "-at(c3,l0)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f5)", "-fuel_neighbor(f2,f1)", "-in(c9,v0)", "-has_fuel(l1,f2)", "-has_fuel(l1,f0)", "-fuel_neighbor(f4,f3)", "-fuel_neighbor(f1,f3)", "-in(c8,v0)", "-in(c4,v0)", "-at(c1,l0)", "-fuel_neighbor(f3,f2)", "-in(c1,v0)", "-fuel_neighbor(f0,f2)", "-fuel_neighbor(f1,f0)", "-space_neighbor(s2,s1)", "-at(c6,l1)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f2,f0)", "-fuel_neighbor(f2,f4)", "-has_fuel(l1,f4)", "-at(c9,l1)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f5,f3)", "-space_neighbor(s2,s0)", "-has_fuel(l0,f2)", "-at(c5,l1)", "-has_space(v0,s0)", "-fuel_neighbor(f4,f0)", "-fuel_neighbor(f0,f3)", "-in(c2,v0)", "-fuel_neighbor(f5,f2)", "-space_neighbor(s1,s0)", "-space_neighbor(s0,s2)", "-has_space(v0,s1)", "-fuel_neighbor(f3,f1)", "-in(c3,v0)", "-has_fuel(l1,f1)", "-at(c4,l1)", "-has_fuel(l0,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f0,f4)", "-at(c2,l1)", "-has_fuel(l0,f5)", "-fuel_neighbor(f5,f1)", "-at(c0,l1)", "-in(c0,v0)", "-at(c8,l1)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f1,f4)", "-in(c5,v0)", "-fuel_neighbor(f4,f1)", "-in(c6,v0)", "-at(c7,l1)"], "objects": {"fuel": ["f1", "f5", "f4", "f2", "f3", "f0"], "space": ["s0", "s1", "s2"], "location": ["l0", "l1"], "vehicle": ["v0"], "cargo": ["c6", "c4", "c2", "c3", "c9", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l0, cargo c1 is at location l1, cargo c2 is present at location l0, cargo c3 is at location l1, cargo c4 is situated at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is at location l0, cargo c8 is at location l0, cargo c9 is situated at location l0, cargo v0 is present at location l0, fuel f3 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l1 has fuel f3, space s0 neighbors space s1, space s1 neighbors space s2, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0 and vehicle v0 has space s2.", "action_sequence": ["action_load(c0,v0,l0,s2,s1)", "action_load(c2,v0,l0,s1,s0)", "action_move(v0,l0,l1,f3,f2)", "action_unload(c0,v0,l1,s0,s1)", "action_load(c1,v0,l1,s1,s0)", "action_unload(c2,v0,l1,s0,s1)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c1,v0,l0,s1,s2)", "action_load(c5,v0,l0,s2,s1)", "action_load(c6,v0,l0,s1,s0)", "action_move(v0,l0,l1,f2,f1)", "action_unload(c5,v0,l1,s0,s1)", "action_load(c3,v0,l1,s1,s0)", "action_unload(c6,v0,l1,s0,s1)", "action_move(v0,l1,l0,f2,f1)", "action_unload(c3,v0,l0,s1,s2)", "action_load(c7,v0,l0,s2,s1)", "action_load(c8,v0,l0,s1,s0)", "action_move(v0,l0,l1,f1,f0)", "action_unload(c7,v0,l1,s0,s1)", "action_unload(c8,v0,l1,s1,s2)"]}
