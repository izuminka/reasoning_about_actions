{"id": "b263c3da-17c5-45f3-86a8-082b3235b99c", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f7: location l1 has fuel f7?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "e716339f-a523-40d1-8264-f23e7510d3ab", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, is it True or False that the following properties of the state are correct for c5: cargo c5 is at location l1, cargo c5 is located in vehicle v0, cargo c5 is located in vehicle v1 and cargo c5 is present at location l0?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "ae699286-b6f1-4ac9-8fc6-9952341390f9", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l0: cargo c0 is not situated at location l0, cargo c1 is not at location l0cargo c1 is not present at location l0, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c4 is not situated at location l0, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c7 is not situated at location l0, cargo v0 is not situated at location l0, cargo v1 is not at location l0cargo v1 is not present at location l0, fuel f1 does not exist in location l0, location l0 does not have a fuel-level of f0, location l0 does not have a fuel-level of f3, location l0 does not have a fuel-level of f7, location l0 does not have fuel f2, location l0 does not have fuel f5 and location l0 does not have fuel f6?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "c2c60c93-e377-4fe3-9458-b8efc30095db", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, is it True or False that the following properties of the state are correct for c3: cargo c3 is not in vehicle v0, cargo c3 is not in vehicle v1, cargo c3 is not situated at location l0 and cargo c3 is not situated at location l1?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "9aeec390-994c-44c9-a82a-76e756e615ea", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, is it True or False that the following properties of the state are correct for c4: cargo c4 is at location l1, cargo c4 is not at location l0cargo c4 is not present at location l0, cargo c4 is not located in vehicle v0 and vehicle v1 does not contain cargo c4?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "629ad6de-c7e9-4745-bd84-b4c25acb9ba4", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, is it True or False that the following properties of the state are correct for v1: cargo c1 is not located in vehicle v1, cargo c3 is not in vehicle v1, cargo c5 is not located in vehicle v1, cargo c6 is in vehicle v1, cargo c7 is in vehicle v1, cargo c8 is not located in vehicle v1, cargo v1 is not at location l1cargo v1 is not present at location l1, cargo v1 is present at location l0, vehicle v1 contains cargo c2, vehicle v1 does not contain cargo c0, vehicle v1 does not contain cargo c4, vehicle v1 has space s0 and vehicle v1 has space s1?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "71a8c46f-642e-4f1e-8b3e-869193fc5956", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_19", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f5: fuel-levels f4 and f5 are neighbors and fuel-levels f5 and f6 are neighbors?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "1f6a25b1-a1dd-4a66-b0e7-e70919917da6", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_20", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f0: fuel level f0 neighbors fuel level f3, fuel level f0 neighbors fuel level f4, fuel level f3 neighbors fuel level f0, fuel level f4 neighbors fuel level f0, fuel level f6 neighbors fuel level f0, fuel level f7 neighbors fuel level f0, fuel-levels f0 and f1 are neighbors, fuel-levels f0 and f2 are neighbors, fuel-levels f0 and f5 are neighbors, fuel-levels f0 and f6 are neighbors, fuel-levels f0 and f7 are neighbors, fuel-levels f1 and f0 are neighbors, fuel-levels f2 and f0 are neighbors and fuel-levels f5 and f0 are neighbors?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "27e68816-e91d-40b2-880f-43977cd76d92", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_21", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f6: fuel level f2 does not neighbour fuel level f6, fuel level f4 does not neighbour fuel level f6, fuel level f6 does not neighbour fuel level f0, fuel level f6 does not neighbour fuel level f1, fuel level f6 does not neighbour fuel level f2, fuel level f6 does not neighbour fuel level f3, fuel level f7 does not neighbour fuel level f6, fuel-levels f0 and f6 are not neighbors, fuel-levels f1 and f6 are not neighbors, fuel-levels f3 and f6 are not neighbors, fuel-levels f6 and f4 are not neighbors and fuel-levels f6 and f5 are not neighbors?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "2f699d1a-e86b-490e-91f7-af4d2a337f67", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_22", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for s0: space s0 does not neighbour space s1 and space s1 does not neighbour space s0?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "e91df657-5800-42e7-b127-d13e14565077", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_23", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f5: fuel level f0 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f5, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f7, fuel level f6 does not neighbour fuel level f5, fuel-levels f3 and f5 are not neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f5 and f4 are not neighbors, fuel-levels f5 and f6 are neighbors and fuel-levels f7 and f5 are not neighbors?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "0b04164c-c6ec-4304-ab56-fcb5d38c566d", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_24", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l1: location l0 is connected to location l1 and there is no connection between locations l1 and l0?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "9d2d1bc1-ff3d-4093-9ac0-1e9400b7327d", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, list all objects associated with type vehicle. Write None if there are none.", "answer": "v0 and v1", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "a2e1e052-ec1e-4355-90df-b2ea37744961", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, what is the object type for s0 and s1. Write None if there are none.", "answer": "space", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "4fa3dd93-7d75-4375-9f37-75023afd2d5b", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, is it True or False that the following properties of the state are correct for s1: vehicle v0 has space s1 and vehicle v1 contains space s1?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "fbb66bcb-fb68-4e6b-a885-5118b06f938e", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l0: cargo c0 is present at location l0, cargo c1 is present at location l0, cargo c2 is at location l0, cargo c3 is present at location l0, cargo c4 is situated at location l0, cargo c5 is at location l0, cargo c6 is situated at location l0, cargo c7 is situated at location l0, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is at location l0, fuel f0 exists in location l0, fuel f5 exists in location l0, fuel f6 exists in location l0, location l0 has a fuel-level of f1, location l0 has a fuel-level of f3, location l0 has a fuel-level of f4, location l0 has a fuel-level of f7 and location l0 has fuel f2?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "b6e34d57-11e7-4f4f-b9c8-d9d5bfaa2c0b", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l0: cargo c1 is not at location l0cargo c1 is not present at location l0, cargo c2 is not situated at location l0, cargo c4 is not situated at location l0, cargo c6 is not situated at location l0, cargo c7 is not situated at location l0, cargo v0 is not situated at location l0, cargo v1 is not situated at location l0, fuel f0 does not exist in location l0, fuel f2 does not exist in location l0, fuel f7 does not exist in location l0, location l0 does not have a fuel-level of f1, location l0 does not have fuel f4, location l0 does not have fuel f5 and location l0 does not have fuel f6?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "f64d7a97-1eca-48a4-bcea-669b4b4be706", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, is it True or False that the following properties of the state are correct for c7: cargo c7 is not in vehicle v1, cargo c7 is not situated at location l0, cargo c7 is not situated at location l1 and vehicle v0 does not contain cargo c7?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "e0641413-1ced-4e33-bad3-68140996aa03", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, is it True or False that the following properties of the state are correct for v0: cargo c0 is not located in vehicle v0, cargo c1 is not located in vehicle v0, cargo c2 is not located in vehicle v0, cargo c4 is not located in vehicle v0, cargo c5 is not located in vehicle v0, cargo c6 is not located in vehicle v0, cargo c7 is not in vehicle v0, cargo c8 is not in vehicle v0, cargo v0 is not at location l0cargo v0 is not present at location l0, cargo v0 is present at location l1, vehicle v0 does not contain cargo c3, vehicle v0 does not contain space s0 and vehicle v0 has space s1?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "b0e4e6ee-2983-449b-b291-d570c879e92c", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f2: location l0 does not have a fuel-level of f2 and location l1 has fuel f2?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "cd56dd87-f3b3-4dde-bd8d-8e9e5585185f", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_19", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f5: fuel level f5 neighbors fuel level f6 and fuel-levels f4 and f5 are neighbors?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "353df0e2-d210-43a2-8093-85af6c4c0fb3", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_20", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, is it True or False that the following properties of the state are correct for s0: space s0 neighbors space s1 and spaces s1 and s0 are neighbors?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "8b0578de-c485-4fb9-897a-751e334ee7ca", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_21", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f3: fuel level f1 does not neighbour fuel level f3, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f6, fuel level f4 does not neighbour fuel level f3, fuel level f7 does not neighbour fuel level f3, fuel-levels f0 and f3 are not neighbors, fuel-levels f3 and f7 are not neighbors, fuel-levels f5 and f3 are not neighbors and fuel-levels f6 and f3 are not neighbors?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "38f4ecbf-4b58-4a58-9a6a-ab098dc39cf6", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_22", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f5: fuel level f1 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f5, fuel level f4 does not neighbour fuel level f5, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f6, fuel-levels f0 and f5 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f4 are not neighbors, fuel-levels f5 and f7 are not neighbors, fuel-levels f6 and f5 are not neighbors and fuel-levels f7 and f5 are not neighbors?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "9df5ce99-acc9-4364-aba1-826f95bede8c", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_23", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f1: fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f3 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f1, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f1 and f6 are not neighbors, fuel-levels f1 and f7 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f6 and f1 are not neighbors and fuel-levels f7 and f1 are not neighbors?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "e113b9a9-1d46-4176-a69f-e110b15f9153", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_24", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f6: fuel level f1 does not neighbour fuel level f6, fuel level f3 neighbors fuel level f6, fuel level f4 does not neighbour fuel level f6, fuel level f5 does not neighbour fuel level f6, fuel level f6 does not neighbour fuel level f0, fuel level f6 does not neighbour fuel level f7, fuel level f6 neighbors fuel level f2, fuel level f6 neighbors fuel level f3, fuel level f7 does not neighbour fuel level f6, fuel-levels f0 and f6 are neighbors, fuel-levels f2 and f6 are neighbors, fuel-levels f6 and f1 are not neighbors, fuel-levels f6 and f4 are not neighbors and fuel-levels f6 and f5 are not neighbors?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "a9fd07e5-8195-4bfb-bfbe-f4c839d4fc11", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. In this state, list all objects associated with type vehicle. Write None if there are none.", "answer": "v0 and v1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "858bad10-a99d-4d4e-9317-8477a582096d", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, what is the object type for s1. Write None if there are none.", "answer": "space", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "989ed058-7351-416b-a242-109058348a7d", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l0: cargo c0 is present at location l0, cargo c1 is situated at location l0, cargo c3 is situated at location l0, cargo c5 is at location l0, cargo c8 is present at location l0 and location l0 has fuel f2?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "2aa7106f-0f0f-4624-8c42-b6736fb91e54", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for c6: cargo c6 is at location l0, cargo c6 is situated at location l1, vehicle v0 contains cargo c6 and vehicle v1 contains cargo c6?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "2978f457-8d41-4eda-9e20-2be0f18c2505", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for c1: cargo c1 is not in vehicle v0, cargo c1 is not in vehicle v1 and cargo c1 is not situated at location l1?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "2828bede-640d-4101-9a04-51bd4b4f227b", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l1: cargo c0 is not situated at location l1, cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c2 is not at location l1cargo c2 is not present at location l1, cargo c3 is not situated at location l1, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c6 is not at location l1cargo c6 is not present at location l1, cargo c7 is not situated at location l1, cargo c8 is not at location l1cargo c8 is not present at location l1, cargo v0 is not at location l1cargo v0 is not present at location l1, cargo v1 is not at location l1cargo v1 is not present at location l1, fuel f3 does not exist in location l1, fuel f6 does not exist in location l1, location l1 does not have a fuel-level of f0, location l1 does not have a fuel-level of f4, location l1 does not have a fuel-level of f7, location l1 does not have fuel f1, location l1 does not have fuel f2 and location l1 does not have fuel f5?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "bac8c2ae-35af-42a0-8106-cd691d23d43f", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f1: fuel f1 does not exist in location l0 and fuel f1 does not exist in location l1?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "2b04e67a-9079-4236-afcf-d852489de0b0", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f3: fuel f3 does not exist in location l0 and fuel f3 exists in location l1?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "7b0591be-c990-4070-9f7f-1a8d4fc138e4", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_19", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f1: fuel level f1 neighbors fuel level f2 and fuel-levels f0 and f1 are neighbors?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "8f1af909-85bf-491f-9703-4d2dfd9db9cc", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_20", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for s0: spaces s0 and s1 are neighbors and spaces s1 and s0 are neighbors?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "a6c64c79-8105-4553-bab8-d2e010b4be16", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_21", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f5: fuel level f2 does not neighbour fuel level f5, fuel level f5 does not neighbour fuel level f2, fuel level f6 does not neighbour fuel level f5, fuel-levels f0 and f5 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f5 and f4 are not neighbors, fuel-levels f5 and f7 are not neighbors and fuel-levels f7 and f5 are not neighbors?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "cbe8f565-379e-4e63-986e-962d2c611abc", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_22", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for s1: space s0 does not neighbour space s1 and spaces s1 and s0 are not neighbors?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "d95070a2-4f37-41fd-bd5c-880f7bf4c6c2", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_23", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f1: fuel level f1 does not neighbour fuel level f6, fuel level f1 does not neighbour fuel level f7, fuel level f2 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f1, fuel level f7 does not neighbour fuel level f1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f1 and f5 are not neighbors and fuel-levels f6 and f1 are not neighbors?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "224c0fca-134f-4a69-8f71-2192d19fa2ef", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_24", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for s1: space s0 neighbors space s1 and spaces s1 and s0 are neighbors?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "f07246df-22bb-4894-bbba-ca278d10ccdb", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, list all objects associated with type location. Write None if there are none.", "answer": "l0 and l1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "b840ba99-0d0e-45d0-a530-8a753cf0e5c2", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, what is the object type for l0 and l1. Write None if there are none.", "answer": "location", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "4ad21ad8-77a9-4a77-b9f4-54132e045237", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, is it True or False that the following properties of the state are correct for s1: vehicle v1 contains space s1?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "07a88ea0-93b5-4955-b6f5-54674be7f147", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, is it True or False that the following properties of the state are correct for c1: cargo c1 is in vehicle v0, cargo c1 is located in vehicle v1, cargo c1 is present at location l0 and cargo c1 is present at location l1?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "146eacc2-b19d-46ca-bd8f-3f3943e6b439", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, is it True or False that the following properties of the state are correct for c0: cargo c0 is not located in vehicle v1, cargo c0 is not situated at location l1 and vehicle v0 does not contain cargo c0?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "13831060-fc40-4ff5-b58b-aa94ccb8430c", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, is it True or False that the following properties of the state are correct for c0: cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c0 is not at location l1cargo c0 is not present at location l1, cargo c0 is not in vehicle v0 and cargo c0 is not in vehicle v1?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "371b5d38-7c74-4a66-a551-669ab192970b", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, is it True or False that the following properties of the state are correct for v1: cargo c0 is not in vehicle v1, cargo c3 is not located in vehicle v1, cargo c4 is not located in vehicle v1, cargo c7 is not in vehicle v1, cargo c8 is not in vehicle v1, cargo v1 is at location l1, cargo v1 is not situated at location l0, vehicle v1 contains space s1, vehicle v1 does not contain cargo c1, vehicle v1 does not contain cargo c2, vehicle v1 does not contain cargo c5, vehicle v1 does not contain cargo c6 and vehicle v1 does not contain space s0?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "8706ddda-573c-4689-9929-58659145fd96", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f6: fuel f6 exists in location l1 and location l0 does not have a fuel-level of f6?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "8adc335a-c9c5-4abe-b1ab-eb32b269658f", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_19", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f3: fuel-levels f2 and f3 are neighbors and fuel-levels f3 and f4 are neighbors?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "dc3b9417-f12c-41ad-8260-8e5690b16137", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_20", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f6: fuel level f6 neighbors fuel level f0, fuel level f6 neighbors fuel level f1, fuel level f6 neighbors fuel level f2, fuel level f6 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel level f7 neighbors fuel level f6, fuel-levels f0 and f6 are neighbors, fuel-levels f1 and f6 are neighbors, fuel-levels f2 and f6 are neighbors, fuel-levels f3 and f6 are neighbors, fuel-levels f4 and f6 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f3 are neighbors and fuel-levels f6 and f4 are neighbors?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "f1d58088-8ed0-4fdb-8144-5c6f195d3db3", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_21", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f5: fuel level f1 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f5, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f4, fuel-levels f0 and f5 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f7 are not neighbors, fuel-levels f6 and f5 are not neighbors and fuel-levels f7 and f5 are not neighbors?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "6413cee0-efe2-41bc-a716-b567f2f6351f", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_22", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, is it True or False that the following properties of the state are correct for s0: spaces s0 and s1 are not neighbors and spaces s1 and s0 are not neighbors?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "e670eb5c-3351-49c0-87bb-7a8f277b5a82", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_23", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f4: fuel level f0 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f4, fuel level f3 neighbors fuel level f4, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f3, fuel level f4 neighbors fuel level f5, fuel level f5 does not neighbour fuel level f4, fuel level f6 does not neighbour fuel level f4, fuel-levels f1 and f4 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f6 are not neighbors, fuel-levels f4 and f7 are not neighbors and fuel-levels f7 and f4 are not neighbors?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "36c9fe5b-5e01-43a7-9b22-7f2835896149", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_24", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l1: location l1 is connected to location l0 and there is no connection between locations l0 and l1?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "c303fe32-c34e-4845-a001-61d7e5cf9b85", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, list all objects associated with type space. Write None if there are none.", "answer": "s0 and s1", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "91f3ce40-aeff-4e7d-94be-194a3a16b4aa", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, what is the object type for v0. Write None if there are none.", "answer": "vehicle", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "8d3cfe07-aa0d-4b9b-9e01-56738a4866bc", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, is it True or False that the following properties of the state are correct for c4: cargo c4 is situated at location l0?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "a3dad71e-96de-4c48-95a0-7d86e1d389d5", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, is it True or False that the following properties of the state are correct for c6: cargo c6 is at location l0, cargo c6 is in vehicle v0, cargo c6 is located in vehicle v1 and cargo c6 is situated at location l1?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "f87c9b72-d1d2-48b2-bbeb-1863ac0a526d", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for c3: cargo c3 is not situated at location l1, vehicle v0 does not contain cargo c3 and vehicle v1 does not contain cargo c3?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "5b698867-333f-4a3c-ab71-2dce12b913a2", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, is it True or False that the following properties of the state are correct for c3: cargo c3 is not at location l1cargo c3 is not present at location l1, cargo c3 is not located in vehicle v0, cargo c3 is not located in vehicle v1 and cargo c3 is not situated at location l0?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "2cb6ee1b-c76d-49f7-8107-46c90e881478", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f2: location l0 does not have a fuel-level of f2 and location l1 has fuel f2?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "26f5819f-966b-4e9d-bc76-ad131f633250", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, is it True or False that the following properties of the state are correct for s0: vehicle v0 does not contain space s0 and vehicle v1 does not contain space s0?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "3557c7d9-15d0-40c2-84bb-de4975a6d403", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_19", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l0: location l0 is connected to location l1 and location l1 and location l0 are connected?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "dc012860-c49f-4671-9681-7a68289e1041", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_20", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f6: fuel level f0 neighbors fuel level f6, fuel level f6 neighbors fuel level f5, fuel-levels f1 and f6 are neighbors, fuel-levels f2 and f6 are neighbors, fuel-levels f3 and f6 are neighbors, fuel-levels f4 and f6 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f0 are neighbors, fuel-levels f6 and f1 are neighbors, fuel-levels f6 and f2 are neighbors, fuel-levels f6 and f3 are neighbors, fuel-levels f6 and f4 are neighbors, fuel-levels f6 and f7 are neighbors and fuel-levels f7 and f6 are neighbors?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "f49b218a-0223-43a2-a671-805822181ed8", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_21", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f1: fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f6, fuel level f1 does not neighbour fuel level f7, fuel level f2 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f1, fuel level f6 does not neighbour fuel level f1, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f3 and f1 are not neighbors and fuel-levels f7 and f1 are not neighbors?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "ac7e1286-b4fc-48f8-9bd5-94f656f566fb", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_22", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f3: fuel level f0 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f3, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f4, fuel level f3 does not neighbour fuel level f6, fuel level f5 does not neighbour fuel level f3, fuel level f7 does not neighbour fuel level f3, fuel-levels f2 and f3 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f3 and f7 are not neighbors, fuel-levels f4 and f3 are not neighbors and fuel-levels f6 and f3 are not neighbors?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "63fbd551-f224-4e78-97fa-7064ae1e8d32", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_23", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, is it True or False that the following properties of the state are correct for f0: fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f4, fuel level f0 does not neighbour fuel level f5, fuel level f0 does not neighbour fuel level f6, fuel level f1 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f0, fuel-levels f0 and f1 are neighbors, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f7 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f6 and f0 are not neighbors and fuel-levels f7 and f0 are not neighbors?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "29bf4f3a-a189-4274-b85f-7af2c7954325", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_24", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l1: location l1 is connected to location l0 and there is no connection between locations l0 and l1?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "2692ca77-1431-4d04-8dc5-1a531e3f1fae", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, list all objects associated with type cargo. Write None if there are none.", "answer": "c0, c1, c2, c3, c4, c5, c6, c7 and c8", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "2e2a65d2-032b-4671-8677-25a1b1c6881c", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, what is the object type for l0. Write None if there are none.", "answer": "location", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel level f3 neighbors fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has a fuel-level of f7, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "99560e82-88cf-4cc1-8eb5-cf619f8a1f99", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, is it True or False that cargo v0 is situated at location l1?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "d0c5501e-0273-4a2d-97a6-cbce43a65c6c", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, is it True or False that cargo c0 is not at location l1cargo c0 is not present at location l1?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "04e8e953-22c2-49a4-8420-a6761bb0e2cc", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, is it True or False that fuel f0 does not exist in location l1?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "c2eb70da-33a8-47bf-a6a8-2ed56babb52b", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_13", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, is it True or False that fuel-levels f6 and f7 are neighbors?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "ac2b640a-136e-45df-83b9-b532e91e342b", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_14", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, is it True or False that fuel level f4 does not neighbour fuel level f5?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "4addba04-4ea5-4ba0-b36b-ce66ccdbf758", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_15", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, is it True or False that fuel-levels f5 and f3 are not neighbors?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "4133bf0e-e11c-4578-86a9-0dc5af8b20f5", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is situated at location l0, cargo c6 is situated at location l1, cargo c7 is situated at location l1, cargo c8 is situated at location l0, cargo v0 is present at location l1, cargo v1 is present at location l1, fuel f4 exists in location l0, fuel f7 exists in location l1, vehicle v0 contains space s1 and vehicle v1 has space s1?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "72bb506c-8c31-43f6-8d48-7bd8b7779694", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is in vehicle v0, cargo c0 is situated at location l0, cargo c0 is situated at location l1, cargo c1 is at location l1, cargo c1 is in vehicle v0, cargo c1 is located in vehicle v1, cargo c1 is situated at location l0, cargo c2 is located in vehicle v0, cargo c2 is present at location l0, cargo c2 is present at location l1, cargo c3 is at location l0, cargo c3 is at location l1, cargo c3 is in vehicle v0, cargo c3 is located in vehicle v1, cargo c4 is at location l1, cargo c4 is in vehicle v1, cargo c4 is located in vehicle v0, cargo c4 is present at location l0, cargo c5 is in vehicle v0, cargo c5 is present at location l0, cargo c5 is situated at location l1, cargo c6 is in vehicle v0, cargo c6 is located in vehicle v1, cargo c6 is present at location l0, cargo c6 is present at location l1, cargo c7 is at location l1, cargo c7 is located in vehicle v1, cargo c7 is situated at location l0, cargo c8 is at location l0, cargo c8 is in vehicle v1, cargo c8 is located in vehicle v0, cargo c8 is present at location l1, cargo v0 is present at location l0, cargo v0 is situated at location l1, cargo v1 is at location l1, cargo v1 is situated at location l0, fuel f5 exists in location l1, fuel f6 exists in location l0, fuel f7 exists in location l0, location l0 has a fuel-level of f0, location l0 has a fuel-level of f4, location l0 has fuel f1, location l0 has fuel f2, location l0 has fuel f3, location l0 has fuel f5, location l1 has a fuel-level of f0, location l1 has a fuel-level of f1, location l1 has a fuel-level of f6, location l1 has a fuel-level of f7, location l1 has fuel f2, location l1 has fuel f3, location l1 has fuel f4, vehicle v0 contains cargo c7, vehicle v0 contains space s0, vehicle v0 has space s1, vehicle v1 contains cargo c0, vehicle v1 contains cargo c2, vehicle v1 contains cargo c5, vehicle v1 contains space s0 and vehicle v1 contains space s1?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "99ea44b4-0e65-4012-8604-f3e85496e505", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c0 is not in vehicle v0, cargo c0 is not in vehicle v1, cargo c1 is not in vehicle v0, cargo c1 is not situated at location l0, cargo c2 is not in vehicle v0, cargo c2 is not located in vehicle v1, cargo c2 is not situated at location l0, cargo c3 is not located in vehicle v0, cargo c3 is not situated at location l1, cargo c4 is not at location l0cargo c4 is not present at location l0, cargo c4 is not in vehicle v0, cargo c4 is not in vehicle v1, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not located in vehicle v0, cargo c7 is not located in vehicle v0, cargo c7 is not located in vehicle v1, cargo c7 is not situated at location l0, cargo c8 is not in vehicle v0, cargo c8 is not situated at location l1, cargo v0 is not situated at location l0, cargo v1 is not at location l0cargo v1 is not present at location l0, fuel f1 does not exist in location l0, fuel f2 does not exist in location l1, fuel f5 does not exist in location l0, fuel f5 does not exist in location l1, fuel f6 does not exist in location l0, location l0 does not have a fuel-level of f2, location l0 does not have a fuel-level of f7, location l0 does not have fuel f0, location l0 does not have fuel f3, location l1 does not have a fuel-level of f0, location l1 does not have a fuel-level of f3, location l1 does not have a fuel-level of f4, location l1 does not have a fuel-level of f6, location l1 does not have fuel f1, vehicle v0 does not contain cargo c5, vehicle v0 does not contain space s0, vehicle v1 does not contain cargo c1, vehicle v1 does not contain cargo c3, vehicle v1 does not contain cargo c5, vehicle v1 does not contain cargo c6, vehicle v1 does not contain cargo c8 and vehicle v1 does not contain space s0?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "0d4df492-c493-4f34-9977-4e9ac11f486f", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is not in vehicle v0, cargo c0 is not in vehicle v1, cargo c0 is not situated at location l0, cargo c0 is not situated at location l1, cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c1 is not in vehicle v1, cargo c1 is not located in vehicle v0, cargo c1 is not situated at location l0, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c2 is not in vehicle v0, cargo c2 is not located in vehicle v1, cargo c2 is not situated at location l1, cargo c3 is not at location l0cargo c3 is not present at location l0, cargo c3 is not in vehicle v0, cargo c3 is not located in vehicle v1, cargo c3 is not situated at location l1, cargo c4 is not at location l0cargo c4 is not present at location l0, cargo c4 is not in vehicle v1, cargo c4 is not located in vehicle v0, cargo c4 is not situated at location l1, cargo c5 is not at location l0cargo c5 is not present at location l0, cargo c5 is not in vehicle v0, cargo c5 is not situated at location l1, cargo c6 is not at location l1cargo c6 is not present at location l1, cargo c6 is not in vehicle v1, cargo c6 is not situated at location l0, cargo c7 is not at location l0cargo c7 is not present at location l0, cargo c7 is not located in vehicle v1, cargo c7 is not situated at location l1, cargo c8 is not at location l1cargo c8 is not present at location l1, cargo c8 is not in vehicle v0, cargo c8 is not located in vehicle v1, cargo c8 is not situated at location l0, cargo v0 is not at location l0cargo v0 is not present at location l0, cargo v0 is not at location l1cargo v0 is not present at location l1, cargo v1 is not at location l0cargo v1 is not present at location l0, cargo v1 is not situated at location l1, fuel f2 does not exist in location l0, fuel f5 does not exist in location l1, fuel f6 does not exist in location l0, location l0 does not have a fuel-level of f0, location l0 does not have a fuel-level of f5, location l0 does not have fuel f1, location l0 does not have fuel f3, location l0 does not have fuel f4, location l0 does not have fuel f7, location l1 does not have a fuel-level of f1, location l1 does not have a fuel-level of f2, location l1 does not have a fuel-level of f3, location l1 does not have a fuel-level of f4, location l1 does not have a fuel-level of f7, location l1 does not have fuel f0, location l1 does not have fuel f6, vehicle v0 does not contain cargo c6, vehicle v0 does not contain cargo c7, vehicle v0 does not contain space s0, vehicle v0 does not have space s1, vehicle v1 does not contain cargo c5, vehicle v1 does not contain space s0 and vehicle v1 does not have space s1?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "a4b5e41f-d8d8-4cae-8ea3-f02874c4491c", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is at location l1, cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c0 is not in vehicle v0, cargo c0 is not in vehicle v1, cargo c1 is at location l1, cargo c1 is not in vehicle v0, cargo c1 is not situated at location l0, cargo c2 is at location l1, cargo c2 is not located in vehicle v0, cargo c2 is not situated at location l0, cargo c3 is at location l0, cargo c3 is not at location l1cargo c3 is not present at location l1, cargo c3 is not located in vehicle v1, cargo c4 is not at location l0cargo c4 is not present at location l0, cargo c4 is not in vehicle v1, cargo c4 is not located in vehicle v0, cargo c4 is situated at location l1, cargo c5 is not situated at location l1, cargo c5 is present at location l0, cargo c6 is not in vehicle v0, cargo c6 is not in vehicle v1, cargo c6 is not situated at location l0, cargo c6 is present at location l1, cargo c7 is not in vehicle v0, cargo c7 is not situated at location l0, cargo c7 is present at location l1, cargo c8 is at location l0, cargo c8 is not located in vehicle v0, cargo c8 is not situated at location l1, cargo v0 is at location l1, cargo v0 is not at location l0cargo v0 is not present at location l0, cargo v1 is not situated at location l0, cargo v1 is situated at location l1, fuel f2 does not exist in location l0, fuel f4 exists in location l0, fuel f5 does not exist in location l1, fuel f7 exists in location l1, location l0 does not have a fuel-level of f3, location l0 does not have a fuel-level of f6, location l0 does not have a fuel-level of f7, location l0 does not have fuel f0, location l0 does not have fuel f1, location l0 does not have fuel f5, location l1 does not have a fuel-level of f3, location l1 does not have a fuel-level of f4, location l1 does not have a fuel-level of f6, location l1 does not have fuel f0, location l1 does not have fuel f1, location l1 does not have fuel f2, vehicle v0 contains space s1, vehicle v0 does not contain cargo c3, vehicle v0 does not contain cargo c5, vehicle v0 does not contain space s0, vehicle v1 contains space s1, vehicle v1 does not contain cargo c1, vehicle v1 does not contain cargo c2, vehicle v1 does not contain cargo c5, vehicle v1 does not contain cargo c7, vehicle v1 does not contain cargo c8 and vehicle v1 does not have space s0?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "5965b82e-d653-4c99-9883-c32822849eae", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is at location l0, cargo c0 is located in vehicle v1, cargo c0 is not at location l1cargo c0 is not present at location l1, cargo c1 is not located in vehicle v1, cargo c1 is present at location l0, cargo c1 is present at location l1, cargo c2 is not at location l1cargo c2 is not present at location l1, cargo c2 is not situated at location l0, cargo c3 is located in vehicle v1, cargo c3 is present at location l0, cargo c3 is situated at location l1, cargo c4 is not in vehicle v0, cargo c4 is not located in vehicle v1, cargo c4 is not situated at location l0, cargo c4 is situated at location l1, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c5 is not situated at location l0, cargo c6 is in vehicle v1, cargo c6 is not in vehicle v0, cargo c6 is present at location l1, cargo c6 is situated at location l0, cargo c7 is at location l0, cargo c7 is in vehicle v1, cargo c7 is not at location l1cargo c7 is not present at location l1, cargo c8 is not in vehicle v0, cargo c8 is not in vehicle v1, cargo c8 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v0 is not at location l1cargo v0 is not present at location l1, cargo v1 is at location l0, cargo v1 is at location l1, fuel f1 exists in location l1, fuel f4 exists in location l0, fuel f7 does not exist in location l1, fuel f7 exists in location l0, location l0 does not have a fuel-level of f2, location l0 does not have fuel f3, location l0 does not have fuel f5, location l0 has a fuel-level of f0, location l0 has a fuel-level of f1, location l0 has a fuel-level of f6, location l1 does not have a fuel-level of f2, location l1 does not have a fuel-level of f6, location l1 does not have fuel f0, location l1 does not have fuel f4, location l1 has a fuel-level of f3, location l1 has a fuel-level of f5, vehicle v0 contains cargo c0, vehicle v0 contains cargo c2, vehicle v0 contains cargo c5, vehicle v0 contains space s1, vehicle v0 does not contain cargo c1, vehicle v0 does not contain cargo c3, vehicle v0 does not contain cargo c7, vehicle v0 does not contain space s0, vehicle v1 contains space s0, vehicle v1 does not contain cargo c2, vehicle v1 does not contain cargo c5 and vehicle v1 does not have space s1?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "d7fbf30b-2ee8-4d98-bbc2-7e16455becf3", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_19", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, space s0 neighbors space s1 and there is a connection between locations l1 and l0?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "c67e8827-0d41-4aac-81e6-9f29be1ded43", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_20", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 neighbors fuel level f1, fuel level f0 neighbors fuel level f2, fuel level f0 neighbors fuel level f3, fuel level f0 neighbors fuel level f4, fuel level f1 neighbors fuel level f2, fuel level f1 neighbors fuel level f4, fuel level f1 neighbors fuel level f5, fuel level f2 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel level f2 neighbors fuel level f4, fuel level f2 neighbors fuel level f5, fuel level f2 neighbors fuel level f6, fuel level f3 neighbors fuel level f0, fuel level f3 neighbors fuel level f5, fuel level f3 neighbors fuel level f6, fuel level f3 neighbors fuel level f7, fuel level f4 neighbors fuel level f0, fuel level f4 neighbors fuel level f1, fuel level f4 neighbors fuel level f2, fuel level f4 neighbors fuel level f3, fuel level f5 neighbors fuel level f0, fuel level f5 neighbors fuel level f3, fuel level f5 neighbors fuel level f4, fuel level f5 neighbors fuel level f7, fuel level f6 neighbors fuel level f1, fuel level f6 neighbors fuel level f2, fuel level f6 neighbors fuel level f3, fuel level f7 neighbors fuel level f0, fuel level f7 neighbors fuel level f1, fuel level f7 neighbors fuel level f3, fuel level f7 neighbors fuel level f5, fuel-levels f0 and f5 are neighbors, fuel-levels f0 and f6 are neighbors, fuel-levels f0 and f7 are neighbors, fuel-levels f1 and f0 are neighbors, fuel-levels f1 and f3 are neighbors, fuel-levels f1 and f6 are neighbors, fuel-levels f1 and f7 are neighbors, fuel-levels f2 and f0 are neighbors, fuel-levels f2 and f7 are neighbors, fuel-levels f3 and f1 are neighbors, fuel-levels f3 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f4 and f6 are neighbors, fuel-levels f4 and f7 are neighbors, fuel-levels f5 and f1 are neighbors, fuel-levels f5 and f2 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f0 are neighbors, fuel-levels f6 and f4 are neighbors, fuel-levels f6 and f5 are neighbors, fuel-levels f6 and f7 are neighbors, fuel-levels f7 and f2 are neighbors, fuel-levels f7 and f4 are neighbors, fuel-levels f7 and f6 are neighbors, location l0 and location l1 are connected, location l1 is connected to location l0, space s0 neighbors space s1 and space s1 neighbors space s0?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "d1e7527a-937b-46c0-9fa2-dc3e926c65ba", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_21", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 does not neighbour fuel level f4, fuel level f0 does not neighbour fuel level f5, fuel level f0 does not neighbour fuel level f6, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f6, fuel level f2 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f7, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f3, fuel level f6 does not neighbour fuel level f0, fuel level f6 does not neighbour fuel level f2, fuel level f6 does not neighbour fuel level f3, fuel level f6 does not neighbour fuel level f4, fuel level f7 does not neighbour fuel level f1, fuel level f7 does not neighbour fuel level f3, fuel level f7 does not neighbour fuel level f4, fuel level f7 does not neighbour fuel level f5, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f7 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f1 and f7 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f2 and f6 are not neighbors, fuel-levels f2 and f7 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f3 and f6 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f6 are not neighbors, fuel-levels f4 and f7 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f4 are not neighbors, fuel-levels f5 and f7 are not neighbors, fuel-levels f6 and f1 are not neighbors, fuel-levels f6 and f5 are not neighbors, fuel-levels f7 and f0 are not neighbors, fuel-levels f7 and f2 are not neighbors, fuel-levels f7 and f6 are not neighbors and space s1 does not neighbour space s0?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "17eb0fc0-a153-4329-a0d5-31fc1b816eda", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_22", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 does not neighbour fuel level f6, fuel level f1 does not neighbour fuel level f2, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f6, fuel level f2 does not neighbour fuel level f7, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f6, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f4, fuel level f5 does not neighbour fuel level f6, fuel level f5 does not neighbour fuel level f7, fuel level f6 does not neighbour fuel level f2, fuel level f6 does not neighbour fuel level f4, fuel level f6 does not neighbour fuel level f5, fuel level f7 does not neighbour fuel level f0, fuel level f7 does not neighbour fuel level f2, fuel level f7 does not neighbour fuel level f3, fuel level f7 does not neighbour fuel level f4, fuel level f7 does not neighbour fuel level f6, fuel-levels f0 and f1 are not neighbors, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f0 and f7 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f6 are not neighbors, fuel-levels f1 and f7 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f3 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f3 and f4 are not neighbors, fuel-levels f3 and f7 are not neighbors, fuel-levels f4 and f5 are not neighbors, fuel-levels f4 and f6 are not neighbors, fuel-levels f4 and f7 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f6 and f0 are not neighbors, fuel-levels f6 and f1 are not neighbors, fuel-levels f6 and f3 are not neighbors, fuel-levels f6 and f7 are not neighbors, fuel-levels f7 and f1 are not neighbors, fuel-levels f7 and f5 are not neighbors, location l0 and location l1 are not connected, space s1 does not neighbour space s0, spaces s0 and s1 are not neighbors and there is no connection between locations l1 and l0?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "8404594a-e71e-44bc-bf88-f12d0a67f10c", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_23", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 does not neighbour fuel level f3, fuel level f0 does not neighbour fuel level f4, fuel level f0 does not neighbour fuel level f5, fuel level f0 does not neighbour fuel level f6, fuel level f1 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f6, fuel level f1 does not neighbour fuel level f7, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f7, fuel level f2 neighbors fuel level f3, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f5, fuel level f4 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f3, fuel level f4 does not neighbour fuel level f7, fuel level f4 neighbors fuel level f5, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f7, fuel level f5 neighbors fuel level f6, fuel level f6 does not neighbour fuel level f0, fuel level f6 does not neighbour fuel level f5, fuel level f7 does not neighbour fuel level f0, fuel level f7 does not neighbour fuel level f4, fuel-levels f0 and f1 are neighbors, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f7 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f2 and f6 are not neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f3 and f6 are not neighbors, fuel-levels f3 and f7 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f6 are not neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f5 and f4 are not neighbors, fuel-levels f6 and f1 are not neighbors, fuel-levels f6 and f2 are not neighbors, fuel-levels f6 and f3 are not neighbors, fuel-levels f6 and f4 are not neighbors, fuel-levels f6 and f7 are neighbors, fuel-levels f7 and f1 are not neighbors, fuel-levels f7 and f2 are not neighbors, fuel-levels f7 and f3 are not neighbors, fuel-levels f7 and f5 are not neighbors, fuel-levels f7 and f6 are not neighbors, location l1 and location l0 are connected, space s0 neighbors space s1, space s1 does not neighbour space s0 and there is a connection between locations l0 and l1?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "f9276419-a23f-4634-834b-de94814d4201", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_24", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 does not neighbour fuel level f1, fuel level f0 neighbors fuel level f2, fuel level f0 neighbors fuel level f3, fuel level f1 does not neighbour fuel level f0, fuel level f1 neighbors fuel level f2, fuel level f1 neighbors fuel level f3, fuel level f1 neighbors fuel level f4, fuel level f1 neighbors fuel level f5, fuel level f1 neighbors fuel level f7, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f1, fuel level f2 does not neighbour fuel level f3, fuel level f2 neighbors fuel level f5, fuel level f2 neighbors fuel level f7, fuel level f3 does not neighbour fuel level f5, fuel level f3 neighbors fuel level f1, fuel level f3 neighbors fuel level f2, fuel level f3 neighbors fuel level f6, fuel level f4 does not neighbour fuel level f2, fuel level f4 neighbors fuel level f5, fuel level f4 neighbors fuel level f7, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f4, fuel level f5 does not neighbour fuel level f7, fuel level f6 does not neighbour fuel level f2, fuel level f6 does not neighbour fuel level f3, fuel level f6 neighbors fuel level f4, fuel level f6 neighbors fuel level f5, fuel level f7 does not neighbour fuel level f0, fuel level f7 does not neighbour fuel level f6, fuel level f7 neighbors fuel level f1, fuel level f7 neighbors fuel level f4, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f5 are neighbors, fuel-levels f0 and f6 are neighbors, fuel-levels f0 and f7 are not neighbors, fuel-levels f1 and f6 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f2 and f6 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f4 are not neighbors, fuel-levels f3 and f7 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f4 and f6 are neighbors, fuel-levels f5 and f1 are neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f0 are not neighbors, fuel-levels f6 and f1 are neighbors, fuel-levels f6 and f7 are neighbors, fuel-levels f7 and f2 are neighbors, fuel-levels f7 and f3 are neighbors, fuel-levels f7 and f5 are neighbors, location l1 is not connected to location l0, space s0 does not neighbour space s1, space s1 does not neighbour space s0 and there is a connection between locations l0 and l1?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "359aa142-f5d6-411c-a8bb-fb84cf4582d4", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_7", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state,. What are the self constraint properties of the state for l0? Write None if there are none", "answer": "cargo c3 is present at location l0, cargo c5 is situated at location l0, cargo c8 is situated at location l0 and location l0 has fuel f4", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "32d46fee-2078-4ce9-a058-1afc89f2f370", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_8", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state,. What are the self constraint properties of the state for c7? Write None if there are none", "answer": "cargo c7 is not in vehicle v0, cargo c7 is not in vehicle v1 and cargo c7 is not situated at location l0", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "49771b1f-3aa1-4ea7-9da2-2d6008f7f384", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_9", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state,. What are the self constraint properties of the state for l0? Write None if there are none", "answer": "cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c1 is not at location l0cargo c1 is not present at location l0, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c3 is situated at location l0, cargo c4 is not at location l0cargo c4 is not present at location l0, cargo c5 is at location l0, cargo c6 is not situated at location l0, cargo c7 is not situated at location l0, cargo c8 is present at location l0, cargo v0 is not at location l0cargo v0 is not present at location l0, cargo v1 is not at location l0cargo v1 is not present at location l0, fuel f3 does not exist in location l0, fuel f4 exists in location l0, location l0 does not have a fuel-level of f1, location l0 does not have a fuel-level of f5, location l0 does not have a fuel-level of f7, location l0 does not have fuel f0, location l0 does not have fuel f2 and location l0 does not have fuel f6", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "40762e30-fee0-4649-9e14-ea02fb4886db", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_10", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state,. What are the static properties of the state for f3? Write None if there are none", "answer": "fuel level f2 neighbors fuel level f3 and fuel level f3 neighbors fuel level f4", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "bfc5d677-9c8d-4f96-8034-695a8a3ebe12", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_11", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state,. What are the static properties of the state for f7? Write None if there are none", "answer": "fuel level f1 does not neighbour fuel level f7, fuel level f2 does not neighbour fuel level f7, fuel level f3 does not neighbour fuel level f7, fuel level f7 does not neighbour fuel level f3, fuel level f7 does not neighbour fuel level f4, fuel-levels f0 and f7 are not neighbors, fuel-levels f4 and f7 are not neighbors, fuel-levels f5 and f7 are not neighbors, fuel-levels f7 and f0 are not neighbors, fuel-levels f7 and f1 are not neighbors, fuel-levels f7 and f2 are not neighbors, fuel-levels f7 and f5 are not neighbors and fuel-levels f7 and f6 are not neighbors", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "eef8a819-84c1-4a10-877d-60dfffd41ae1", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_12", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state,. What are the static properties of the state for s0? Write None if there are none", "answer": "spaces s0 and s1 are neighbors and spaces s1 and s0 are not neighbors", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "74efc2a1-dad6-4977-bf50-381a1958f6cc", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, is it True or False that vehicle v0 contains space s1?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "a5d8caf8-4b9f-4966-8981-713d26665c71", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, is it True or False that vehicle v1 does not have space s1?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "3059d2c8-5300-4565-954f-2f4d6c54cff6", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, is it True or False that location l0 does not have fuel f6?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "6240dfa3-c27f-4291-8d7e-7c0db329ff62", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_13", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, is it True or False that spaces s0 and s1 are neighbors?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "a82b2328-7e98-441f-8a73-c0fe55d89fc9", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_14", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. In this state, is it True or False that fuel level f3 does not neighbour fuel level f4?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "8c105704-9634-4db4-b82b-927153f63ad4", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_15", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, is it True or False that fuel-levels f6 and f3 are not neighbors?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "4e6826f2-9728-42d3-9128-8e4dc7a3b3ca", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is present at location l0, cargo c1 is present at location l1, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is situated at location l0, cargo c6 is situated at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is situated at location l1, cargo v1 is at location l1, location l0 has fuel f3, location l1 has fuel f6, vehicle v0 contains space s1 and vehicle v1 has space s1?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "22ba3002-113a-4159-968c-af3f93ddf4e6", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is in vehicle v1, cargo c0 is present at location l0, cargo c0 is present at location l1, cargo c1 is located in vehicle v0, cargo c1 is located in vehicle v1, cargo c1 is present at location l0, cargo c1 is present at location l1, cargo c2 is in vehicle v0, cargo c2 is present at location l0, cargo c2 is present at location l1, cargo c3 is located in vehicle v0, cargo c3 is located in vehicle v1, cargo c3 is present at location l1, cargo c3 is situated at location l0, cargo c4 is located in vehicle v0, cargo c4 is situated at location l0, cargo c4 is situated at location l1, cargo c5 is at location l1, cargo c5 is in vehicle v1, cargo c5 is situated at location l0, cargo c6 is at location l0, cargo c6 is in vehicle v0, cargo c6 is located in vehicle v1, cargo c6 is present at location l1, cargo c7 is at location l0, cargo c7 is in vehicle v1, cargo c7 is located in vehicle v0, cargo c7 is present at location l1, cargo c8 is at location l0, cargo c8 is at location l1, cargo c8 is in vehicle v0, cargo c8 is in vehicle v1, cargo v0 is at location l0, cargo v0 is situated at location l1, cargo v1 is present at location l1, cargo v1 is situated at location l0, fuel f1 exists in location l0, fuel f1 exists in location l1, fuel f3 exists in location l0, fuel f4 exists in location l1, fuel f6 exists in location l0, fuel f7 exists in location l0, fuel f7 exists in location l1, location l0 has a fuel-level of f0, location l0 has a fuel-level of f2, location l0 has a fuel-level of f5, location l0 has fuel f4, location l1 has a fuel-level of f2, location l1 has a fuel-level of f5, location l1 has a fuel-level of f6, location l1 has fuel f0, location l1 has fuel f3, vehicle v0 contains cargo c0, vehicle v0 contains cargo c5, vehicle v0 contains space s0, vehicle v0 contains space s1, vehicle v1 contains cargo c2, vehicle v1 contains cargo c4, vehicle v1 has space s0 and vehicle v1 has space s1?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "1fd97f4d-8a67-438d-a940-2990ebccadde", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is not at location l1cargo c0 is not present at location l1, cargo c0 is not in vehicle v0, cargo c0 is not in vehicle v1, cargo c1 is not at location l0cargo c1 is not present at location l0, cargo c1 is not in vehicle v1, cargo c2 is not in vehicle v0, cargo c2 is not in vehicle v1, cargo c2 is not situated at location l0, cargo c3 is not situated at location l1, cargo c4 is not in vehicle v0, cargo c4 is not located in vehicle v1, cargo c4 is not situated at location l0, cargo c5 is not in vehicle v0, cargo c5 is not located in vehicle v1, cargo c5 is not situated at location l1, cargo c6 is not in vehicle v1, cargo c6 is not located in vehicle v0, cargo c6 is not situated at location l0, cargo c7 is not in vehicle v0, cargo c7 is not located in vehicle v1, cargo c7 is not situated at location l0, cargo c8 is not at location l1cargo c8 is not present at location l1, cargo c8 is not in vehicle v1, cargo c8 is not located in vehicle v0, cargo v0 is not situated at location l0, cargo v1 is not at location l0cargo v1 is not present at location l0, fuel f0 does not exist in location l0, fuel f1 does not exist in location l0, fuel f1 does not exist in location l1, fuel f2 does not exist in location l1, fuel f3 does not exist in location l1, fuel f4 does not exist in location l0, fuel f7 does not exist in location l1, location l0 does not have a fuel-level of f6, location l0 does not have a fuel-level of f7, location l0 does not have fuel f2, location l0 does not have fuel f5, location l1 does not have a fuel-level of f0, location l1 does not have a fuel-level of f4, location l1 does not have a fuel-level of f5, vehicle v0 does not contain cargo c1, vehicle v0 does not contain cargo c3, vehicle v0 does not have space s0, vehicle v1 does not contain cargo c3 and vehicle v1 does not contain space s0?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "4e9878b3-ba75-4144-ae2a-7fe89983ebab", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c0 is not in vehicle v0, cargo c0 is not located in vehicle v1, cargo c0 is not situated at location l1, cargo c1 is not at location l0cargo c1 is not present at location l0, cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c1 is not located in vehicle v1, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c2 is not in vehicle v1, cargo c2 is not situated at location l1, cargo c3 is not in vehicle v0, cargo c3 is not in vehicle v1, cargo c3 is not situated at location l0, cargo c3 is not situated at location l1, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c4 is not located in vehicle v1, cargo c4 is not situated at location l0, cargo c5 is not in vehicle v0, cargo c5 is not in vehicle v1, cargo c5 is not situated at location l0, cargo c5 is not situated at location l1, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not at location l1cargo c6 is not present at location l1, cargo c6 is not in vehicle v1, cargo c7 is not at location l1cargo c7 is not present at location l1, cargo c7 is not in vehicle v0, cargo c7 is not in vehicle v1, cargo c7 is not situated at location l0, cargo c8 is not at location l1cargo c8 is not present at location l1, cargo c8 is not in vehicle v1, cargo c8 is not located in vehicle v0, cargo c8 is not situated at location l0, cargo v0 is not at location l0cargo v0 is not present at location l0, cargo v0 is not at location l1cargo v0 is not present at location l1, cargo v1 is not at location l0cargo v1 is not present at location l0, cargo v1 is not situated at location l1, fuel f0 does not exist in location l0, fuel f0 does not exist in location l1, fuel f2 does not exist in location l0, fuel f2 does not exist in location l1, fuel f4 does not exist in location l1, fuel f5 does not exist in location l0, fuel f7 does not exist in location l0, location l0 does not have a fuel-level of f6, location l0 does not have fuel f1, location l0 does not have fuel f3, location l0 does not have fuel f4, location l1 does not have a fuel-level of f5, location l1 does not have a fuel-level of f6, location l1 does not have fuel f1, location l1 does not have fuel f3, location l1 does not have fuel f7, vehicle v0 does not contain cargo c1, vehicle v0 does not contain cargo c2, vehicle v0 does not contain cargo c4, vehicle v0 does not contain cargo c6, vehicle v0 does not contain space s1, vehicle v0 does not have space s0, vehicle v1 does not have space s0 and vehicle v1 does not have space s1?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "2bf2b1e5-34e3-4269-ba83-64208aea75bc", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is not located in vehicle v1, cargo c0 is not situated at location l1, cargo c0 is situated at location l0, cargo c1 is not at location l0cargo c1 is not present at location l0, cargo c1 is not in vehicle v1, cargo c1 is present at location l1, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c2 is not in vehicle v1, cargo c2 is not located in vehicle v0, cargo c2 is situated at location l1, cargo c3 is not located in vehicle v0, cargo c3 is not situated at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c4 is not located in vehicle v0, cargo c4 is not located in vehicle v1, cargo c4 is not situated at location l0, cargo c5 is at location l0, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c5 is not in vehicle v0, cargo c5 is not in vehicle v1, cargo c6 is at location l1, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not in vehicle v1, cargo c6 is not located in vehicle v0, cargo c7 is not at location l0cargo c7 is not present at location l0, cargo c7 is not in vehicle v0, cargo c7 is not in vehicle v1, cargo c7 is present at location l1, cargo c8 is not at location l1cargo c8 is not present at location l1, cargo c8 is not in vehicle v0, cargo c8 is not in vehicle v1, cargo c8 is situated at location l0, cargo v0 is not at location l0cargo v0 is not present at location l0, cargo v0 is present at location l1, cargo v1 is at location l1, cargo v1 is not at location l0cargo v1 is not present at location l0, fuel f0 does not exist in location l0, fuel f0 does not exist in location l1, fuel f3 does not exist in location l1, fuel f4 does not exist in location l0, fuel f4 does not exist in location l1, location l0 does not have a fuel-level of f2, location l0 does not have a fuel-level of f5, location l0 does not have a fuel-level of f6, location l0 does not have fuel f1, location l0 does not have fuel f7, location l0 has a fuel-level of f3, location l1 does not have a fuel-level of f5, location l1 does not have a fuel-level of f7, location l1 does not have fuel f1, location l1 does not have fuel f2, location l1 has fuel f6, vehicle v0 contains space s1, vehicle v0 does not contain cargo c0, vehicle v0 does not contain cargo c1, vehicle v0 does not have space s0, vehicle v1 contains space s1, vehicle v1 does not contain cargo c3 and vehicle v1 does not have space s0?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "be59e2da-d2ff-4989-b812-1f183b0a1d63", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is not located in vehicle v1, cargo c0 is not situated at location l0, cargo c0 is present at location l1, cargo c1 is not located in vehicle v0, cargo c1 is not located in vehicle v1, cargo c1 is present at location l0, cargo c1 is present at location l1, cargo c2 is not in vehicle v0, cargo c2 is not in vehicle v1, cargo c2 is present at location l1, cargo c2 is situated at location l0, cargo c3 is at location l0, cargo c3 is in vehicle v1, cargo c3 is not in vehicle v0, cargo c3 is not situated at location l1, cargo c4 is at location l1, cargo c4 is in vehicle v1, cargo c4 is not situated at location l0, cargo c5 is at location l0, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c5 is not in vehicle v1, cargo c5 is not located in vehicle v0, cargo c6 is in vehicle v0, cargo c6 is not situated at location l0, cargo c6 is not situated at location l1, cargo c7 is at location l0, cargo c7 is at location l1, cargo c7 is not in vehicle v1, cargo c8 is at location l1, cargo c8 is located in vehicle v0, cargo c8 is located in vehicle v1, cargo c8 is present at location l0, cargo v0 is at location l1, cargo v0 is not at location l0cargo v0 is not present at location l0, cargo v1 is not at location l1cargo v1 is not present at location l1, cargo v1 is present at location l0, fuel f0 exists in location l0, fuel f0 exists in location l1, fuel f1 exists in location l0, fuel f1 exists in location l1, fuel f2 does not exist in location l1, fuel f3 does not exist in location l1, fuel f7 exists in location l1, location l0 does not have fuel f5, location l0 does not have fuel f7, location l0 has a fuel-level of f3, location l0 has a fuel-level of f4, location l0 has a fuel-level of f6, location l0 has fuel f2, location l1 has a fuel-level of f4, location l1 has a fuel-level of f5, location l1 has fuel f6, vehicle v0 contains cargo c4, vehicle v0 contains cargo c7, vehicle v0 contains space s1, vehicle v0 does not contain cargo c0, vehicle v0 has space s0, vehicle v1 contains cargo c6, vehicle v1 contains space s0 and vehicle v1 does not contain space s1?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "44df3eca-03c5-4798-a86d-da35512e881c", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_19", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f3 and f4 are neighbors, location l1 and location l0 are connected, spaces s0 and s1 are neighbors and there is a connection between locations l0 and l1?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "7ff83dd1-727d-4a0f-a408-65c5545df1b0", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_20", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 neighbors fuel level f2, fuel level f0 neighbors fuel level f4, fuel level f0 neighbors fuel level f5, fuel level f0 neighbors fuel level f7, fuel level f1 neighbors fuel level f0, fuel level f1 neighbors fuel level f3, fuel level f1 neighbors fuel level f4, fuel level f1 neighbors fuel level f5, fuel level f1 neighbors fuel level f7, fuel level f2 neighbors fuel level f4, fuel level f2 neighbors fuel level f7, fuel level f3 neighbors fuel level f1, fuel level f3 neighbors fuel level f2, fuel level f3 neighbors fuel level f5, fuel level f4 neighbors fuel level f1, fuel level f4 neighbors fuel level f2, fuel level f4 neighbors fuel level f3, fuel level f4 neighbors fuel level f6, fuel level f4 neighbors fuel level f7, fuel level f5 neighbors fuel level f1, fuel level f5 neighbors fuel level f2, fuel level f5 neighbors fuel level f3, fuel level f5 neighbors fuel level f4, fuel level f6 neighbors fuel level f0, fuel level f6 neighbors fuel level f1, fuel level f6 neighbors fuel level f2, fuel level f6 neighbors fuel level f3, fuel level f6 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel level f7 neighbors fuel level f1, fuel level f7 neighbors fuel level f3, fuel level f7 neighbors fuel level f4, fuel level f7 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f0 and f3 are neighbors, fuel-levels f0 and f6 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f1 and f6 are neighbors, fuel-levels f2 and f0 are neighbors, fuel-levels f2 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f2 and f5 are neighbors, fuel-levels f2 and f6 are neighbors, fuel-levels f3 and f0 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f3 and f6 are neighbors, fuel-levels f3 and f7 are neighbors, fuel-levels f4 and f0 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f0 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f5 and f7 are neighbors, fuel-levels f6 and f4 are neighbors, fuel-levels f7 and f0 are neighbors, fuel-levels f7 and f2 are neighbors, fuel-levels f7 and f6 are neighbors, location l0 is connected to location l1, location l1 and location l0 are connected, space s0 neighbors space s1 and spaces s1 and s0 are neighbors?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "1babbd74-056c-4874-ad0f-e6c6a9290330", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_21", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 does not neighbour fuel level f4, fuel level f0 does not neighbour fuel level f5, fuel level f0 does not neighbour fuel level f7, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f1, fuel level f2 does not neighbour fuel level f6, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f5, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f3, fuel level f4 does not neighbour fuel level f6, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f4, fuel level f5 does not neighbour fuel level f7, fuel level f6 does not neighbour fuel level f0, fuel level f6 does not neighbour fuel level f1, fuel level f7 does not neighbour fuel level f2, fuel level f7 does not neighbour fuel level f3, fuel level f7 does not neighbour fuel level f4, fuel level f7 does not neighbour fuel level f6, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f6 are not neighbors, fuel-levels f1 and f6 are not neighbors, fuel-levels f1 and f7 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f2 and f7 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f3 and f6 are not neighbors, fuel-levels f3 and f7 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f7 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f6 and f2 are not neighbors, fuel-levels f6 and f3 are not neighbors, fuel-levels f6 and f4 are not neighbors, fuel-levels f6 and f5 are not neighbors, fuel-levels f7 and f0 are not neighbors, fuel-levels f7 and f1 are not neighbors, fuel-levels f7 and f5 are not neighbors and space s1 does not neighbour space s0?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "296aa24d-9f58-4d32-87cf-d8d1500729e0", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_22", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 does not neighbour fuel level f3, fuel level f0 does not neighbour fuel level f7, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f6, fuel level f2 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f6, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f6, fuel level f3 does not neighbour fuel level f7, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f3, fuel level f4 does not neighbour fuel level f6, fuel level f4 does not neighbour fuel level f7, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f6, fuel level f6 does not neighbour fuel level f0, fuel level f6 does not neighbour fuel level f3, fuel level f6 does not neighbour fuel level f4, fuel level f6 does not neighbour fuel level f7, fuel level f7 does not neighbour fuel level f0, fuel level f7 does not neighbour fuel level f1, fuel level f7 does not neighbour fuel level f3, fuel level f7 does not neighbour fuel level f6, fuel-levels f0 and f1 are not neighbors, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f0 and f6 are not neighbors, fuel-levels f1 and f2 are not neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f1 and f7 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f3 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f2 and f7 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f3 and f4 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f5 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f5 and f4 are not neighbors, fuel-levels f5 and f7 are not neighbors, fuel-levels f6 and f1 are not neighbors, fuel-levels f6 and f2 are not neighbors, fuel-levels f6 and f5 are not neighbors, fuel-levels f7 and f2 are not neighbors, fuel-levels f7 and f4 are not neighbors, fuel-levels f7 and f5 are not neighbors, location l0 and location l1 are not connected, location l1 and location l0 are not connected, space s0 does not neighbour space s1 and space s1 does not neighbour space s0?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "534d4114-1113-483e-95a7-b133f7072a01", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_23", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f7, fuel level f0 neighbors fuel level f1, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f7, fuel level f1 neighbors fuel level f2, fuel level f2 does not neighbour fuel level f6, fuel level f2 does not neighbour fuel level f7, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f5, fuel level f3 neighbors fuel level f4, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f4, fuel level f5 does not neighbour fuel level f7, fuel level f6 does not neighbour fuel level f0, fuel level f6 does not neighbour fuel level f1, fuel level f6 does not neighbour fuel level f4, fuel level f6 does not neighbour fuel level f5, fuel level f6 neighbors fuel level f7, fuel level f7 does not neighbour fuel level f0, fuel level f7 does not neighbour fuel level f4, fuel level f7 does not neighbour fuel level f5, fuel level f7 does not neighbour fuel level f6, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f0 and f6 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f6 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f3 and f6 are not neighbors, fuel-levels f3 and f7 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f4 and f6 are not neighbors, fuel-levels f4 and f7 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f2 are not neighbors, fuel-levels f6 and f3 are not neighbors, fuel-levels f7 and f1 are not neighbors, fuel-levels f7 and f2 are not neighbors, fuel-levels f7 and f3 are not neighbors, location l0 and location l1 are connected, location l1 is connected to location l0, spaces s0 and s1 are neighbors and spaces s1 and s0 are not neighbors?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "b66ba372-ce93-4375-ae28-1f29415deabb", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_24", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 neighbors fuel level f1, fuel level f0 neighbors fuel level f2, fuel level f1 does not neighbour fuel level f2, fuel level f1 neighbors fuel level f0, fuel level f1 neighbors fuel level f3, fuel level f1 neighbors fuel level f5, fuel level f2 does not neighbour fuel level f0, fuel level f2 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel level f2 neighbors fuel level f4, fuel level f2 neighbors fuel level f6, fuel level f2 neighbors fuel level f7, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f7, fuel level f3 neighbors fuel level f2, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f2, fuel level f4 neighbors fuel level f5, fuel level f4 neighbors fuel level f6, fuel level f4 neighbors fuel level f7, fuel level f5 does not neighbour fuel level f4, fuel level f5 neighbors fuel level f2, fuel level f5 neighbors fuel level f6, fuel level f6 does not neighbour fuel level f1, fuel level f6 does not neighbour fuel level f3, fuel level f6 neighbors fuel level f2, fuel level f6 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel level f7 neighbors fuel level f0, fuel level f7 neighbors fuel level f3, fuel level f7 neighbors fuel level f6, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f0 and f6 are neighbors, fuel-levels f0 and f7 are neighbors, fuel-levels f1 and f4 are neighbors, fuel-levels f1 and f6 are not neighbors, fuel-levels f1 and f7 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f3 and f1 are neighbors, fuel-levels f3 and f4 are not neighbors, fuel-levels f3 and f5 are neighbors, fuel-levels f3 and f6 are not neighbors, fuel-levels f4 and f1 are neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f5 and f0 are neighbors, fuel-levels f5 and f1 are neighbors, fuel-levels f5 and f3 are neighbors, fuel-levels f5 and f7 are not neighbors, fuel-levels f6 and f0 are not neighbors, fuel-levels f6 and f4 are neighbors, fuel-levels f7 and f1 are not neighbors, fuel-levels f7 and f2 are neighbors, fuel-levels f7 and f4 are not neighbors, fuel-levels f7 and f5 are not neighbors, location l1 and location l0 are connected, spaces s0 and s1 are neighbors, spaces s1 and s0 are not neighbors and there is a connection between locations l0 and l1?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "2543dfe3-4507-45ba-a18b-3197211c06be", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_7", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. In this state,. What are the self constraint properties of the state for f6? Write None if there are none", "answer": "fuel f6 exists in location l1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "70ea7d5e-5de2-4fe4-a54d-9b869a0a1103", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_8", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. In this state,. What are the self constraint properties of the state for c6? Write None if there are none", "answer": "cargo c6 is not in vehicle v0, cargo c6 is not in vehicle v1 and cargo c6 is not situated at location l0", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "fe9ae028-5fd8-43d7-a955-246f861ae347", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_9", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. In this state,. What are the self constraint properties of the state for s0? Write None if there are none", "answer": "vehicle v0 does not contain space s0 and vehicle v1 does not contain space s0", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "4a44552c-3041-4aae-a792-0158eb8a34ee", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_10", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. In this state,. What are the static properties of the state for s0? Write None if there are none", "answer": "spaces s0 and s1 are neighbors", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "a26dad6b-fe49-4d01-9ffc-b1753edf7449", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_11", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state,. What are the static properties of the state for l0? Write None if there are none", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "2e5befbf-673f-4cb5-8f36-d5532e8fb932", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_12", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state,. What are the static properties of the state for f1? Write None if there are none", "answer": "fuel level f1 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f7, fuel level f1 neighbors fuel level f2, fuel level f5 does not neighbour fuel level f1, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f6 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f6 and f1 are not neighbors and fuel-levels f7 and f1 are not neighbors", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "fb11c21e-2336-42eb-a27d-081fd7f35215", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is it True or False that cargo c4 is situated at location l1?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "abc0ac26-b84c-4bc5-93ac-a6fad3a91485", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, is it True or False that cargo c5 is not at location l0cargo c5 is not present at location l0?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "e8701c26-995e-46be-a89b-884e762ce6d3", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, is it True or False that fuel f0 does not exist in location l1?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "aeee9f8f-c3e9-4169-ad82-b2d538ac946f", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_13", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is it True or False that fuel level f5 neighbors fuel level f6?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "be09e393-f50c-4e32-967d-ef54cf02fd9c", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_14", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is it True or False that fuel-levels f6 and f7 are not neighbors?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "94dc1c17-a95d-48f3-98e6-eb56ac291ed9", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_15", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, is it True or False that fuel-levels f1 and f0 are not neighbors?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "7bcdf7f4-f3da-4318-b618-1287bb8a3b1b", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is situated at location l0, cargo c1 is present at location l0, cargo c3 is situated at location l0, cargo c4 is situated at location l1, cargo c5 is situated at location l0, cargo c6 is situated at location l1, cargo c7 is at location l1, cargo c8 is situated at location l0, cargo v0 is at location l1, cargo v1 is present at location l1, location l0 has fuel f2, location l1 has a fuel-level of f5, vehicle v0 contains cargo c2, vehicle v0 has space s0 and vehicle v1 contains space s1?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "a627dde3-1010-4b77-8d47-72b4e105d1eb", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is located in vehicle v0, cargo c0 is present at location l0, cargo c0 is present at location l1, cargo c1 is at location l0, cargo c1 is located in vehicle v1, cargo c1 is situated at location l1, cargo c2 is in vehicle v0, cargo c2 is in vehicle v1, cargo c2 is present at location l0, cargo c2 is situated at location l1, cargo c3 is located in vehicle v1, cargo c3 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l0, cargo c4 is situated at location l1, cargo c5 is in vehicle v1, cargo c5 is present at location l0, cargo c5 is situated at location l1, cargo c6 is in vehicle v1, cargo c6 is located in vehicle v0, cargo c6 is situated at location l0, cargo c6 is situated at location l1, cargo c7 is in vehicle v1, cargo c7 is situated at location l0, cargo c7 is situated at location l1, cargo c8 is located in vehicle v0, cargo c8 is present at location l0, cargo c8 is present at location l1, cargo v0 is situated at location l0, cargo v0 is situated at location l1, cargo v1 is at location l0, cargo v1 is at location l1, fuel f0 exists in location l0, fuel f1 exists in location l0, fuel f2 exists in location l1, fuel f5 exists in location l0, fuel f7 exists in location l0, location l0 has a fuel-level of f2, location l0 has a fuel-level of f3, location l0 has a fuel-level of f4, location l0 has fuel f6, location l1 has a fuel-level of f1, location l1 has fuel f0, location l1 has fuel f3, location l1 has fuel f4, location l1 has fuel f5, location l1 has fuel f6, location l1 has fuel f7, vehicle v0 contains cargo c1, vehicle v0 contains cargo c3, vehicle v0 contains cargo c4, vehicle v0 contains cargo c5, vehicle v0 contains cargo c7, vehicle v0 contains space s0, vehicle v0 contains space s1, vehicle v1 contains cargo c0, vehicle v1 contains cargo c4, vehicle v1 contains cargo c8, vehicle v1 contains space s0 and vehicle v1 contains space s1?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "017f8c69-4447-4066-adbb-46bdfece0555", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is not situated at location l1, cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c1 is not in vehicle v0, cargo c2 is not at location l1cargo c2 is not present at location l1, cargo c2 is not in vehicle v1, cargo c2 is not situated at location l0, cargo c3 is not at location l1cargo c3 is not present at location l1, cargo c3 is not located in vehicle v1, cargo c4 is not at location l0cargo c4 is not present at location l0, cargo c4 is not in vehicle v0, cargo c5 is not situated at location l1, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not in vehicle v0, cargo c7 is not at location l0cargo c7 is not present at location l0, cargo c8 is not located in vehicle v0, cargo c8 is not located in vehicle v1, cargo c8 is not situated at location l1, cargo v0 is not at location l0cargo v0 is not present at location l0, cargo v1 is not at location l0cargo v1 is not present at location l0, fuel f3 does not exist in location l1, fuel f4 does not exist in location l1, location l0 does not have a fuel-level of f0, location l0 does not have a fuel-level of f1, location l0 does not have a fuel-level of f3, location l0 does not have a fuel-level of f5, location l0 does not have a fuel-level of f7, location l0 does not have fuel f4, location l0 does not have fuel f6, location l1 does not have a fuel-level of f0, location l1 does not have a fuel-level of f1, location l1 does not have a fuel-level of f2, location l1 does not have a fuel-level of f6, location l1 does not have fuel f7, vehicle v0 does not contain cargo c0, vehicle v0 does not contain cargo c3, vehicle v0 does not contain cargo c5, vehicle v0 does not contain cargo c7, vehicle v0 does not have space s1, vehicle v1 does not contain cargo c0, vehicle v1 does not contain cargo c1, vehicle v1 does not contain cargo c4, vehicle v1 does not contain cargo c5, vehicle v1 does not contain cargo c6, vehicle v1 does not contain cargo c7 and vehicle v1 does not contain space s0?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "817f522a-3ee7-4093-8bfe-5b75c88ad210", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c0 is not located in vehicle v0, cargo c0 is not located in vehicle v1, cargo c0 is not situated at location l1, cargo c1 is not located in vehicle v0, cargo c1 is not situated at location l0, cargo c1 is not situated at location l1, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c2 is not in vehicle v0, cargo c2 is not located in vehicle v1, cargo c2 is not situated at location l1, cargo c3 is not at location l0cargo c3 is not present at location l0, cargo c3 is not in vehicle v0, cargo c3 is not situated at location l1, cargo c4 is not located in vehicle v0, cargo c4 is not situated at location l0, cargo c4 is not situated at location l1, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c5 is not in vehicle v1, cargo c5 is not located in vehicle v0, cargo c5 is not situated at location l0, cargo c6 is not at location l1cargo c6 is not present at location l1, cargo c6 is not in vehicle v0, cargo c6 is not located in vehicle v1, cargo c6 is not situated at location l0, cargo c7 is not at location l1cargo c7 is not present at location l1, cargo c7 is not situated at location l0, cargo c8 is not at location l0cargo c8 is not present at location l0, cargo c8 is not at location l1cargo c8 is not present at location l1, cargo c8 is not in vehicle v0, cargo c8 is not located in vehicle v1, cargo v0 is not at location l1cargo v0 is not present at location l1, cargo v0 is not situated at location l0, cargo v1 is not situated at location l0, cargo v1 is not situated at location l1, fuel f0 does not exist in location l0, fuel f1 does not exist in location l0, fuel f5 does not exist in location l1, fuel f6 does not exist in location l1, fuel f7 does not exist in location l0, location l0 does not have a fuel-level of f4, location l0 does not have a fuel-level of f5, location l0 does not have fuel f2, location l0 does not have fuel f3, location l0 does not have fuel f6, location l1 does not have a fuel-level of f1, location l1 does not have a fuel-level of f3, location l1 does not have fuel f0, location l1 does not have fuel f2, location l1 does not have fuel f4, location l1 does not have fuel f7, vehicle v0 does not contain cargo c7, vehicle v0 does not contain space s0, vehicle v0 does not have space s1, vehicle v1 does not contain cargo c1, vehicle v1 does not contain cargo c3, vehicle v1 does not contain cargo c4, vehicle v1 does not contain cargo c7, vehicle v1 does not contain space s0 and vehicle v1 does not have space s1?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "5a3839de-010d-4579-8343-ee6862710b71", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is at location l0, cargo c0 is not in vehicle v0, cargo c0 is not in vehicle v1, cargo c0 is not situated at location l1, cargo c1 is not in vehicle v0, cargo c1 is not located in vehicle v1, cargo c1 is not situated at location l1, cargo c1 is present at location l0, cargo c2 is located in vehicle v0, cargo c2 is not situated at location l0, cargo c2 is not situated at location l1, cargo c3 is not at location l1cargo c3 is not present at location l1, cargo c3 is not located in vehicle v1, cargo c3 is situated at location l0, cargo c4 is at location l1, cargo c4 is not at location l0cargo c4 is not present at location l0, cargo c4 is not in vehicle v0, cargo c5 is at location l0, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c5 is not in vehicle v0, cargo c5 is not in vehicle v1, cargo c6 is not in vehicle v0, cargo c6 is not situated at location l0, cargo c6 is present at location l1, cargo c7 is at location l1, cargo c7 is not at location l0cargo c7 is not present at location l0, cargo c7 is not in vehicle v1, cargo c8 is not in vehicle v0, cargo c8 is not in vehicle v1, cargo c8 is not situated at location l1, cargo c8 is present at location l0, cargo v0 is not situated at location l0, cargo v0 is present at location l1, cargo v1 is not situated at location l0, cargo v1 is situated at location l1, fuel f0 does not exist in location l0, fuel f4 does not exist in location l0, fuel f5 does not exist in location l0, fuel f5 exists in location l1, location l0 does not have a fuel-level of f1, location l0 does not have a fuel-level of f7, location l0 does not have fuel f3, location l0 does not have fuel f6, location l0 has fuel f2, location l1 does not have a fuel-level of f0, location l1 does not have a fuel-level of f4, location l1 does not have a fuel-level of f6, location l1 does not have fuel f1, location l1 does not have fuel f2, location l1 does not have fuel f3, location l1 does not have fuel f7, vehicle v0 does not contain cargo c3, vehicle v0 does not contain cargo c7, vehicle v0 does not have space s1, vehicle v0 has space s0, vehicle v1 contains space s1, vehicle v1 does not contain cargo c2, vehicle v1 does not contain cargo c4, vehicle v1 does not contain cargo c6 and vehicle v1 does not contain space s0?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "baff40ae-a42b-4612-885f-2c25dcc0bb72", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c0 is not in vehicle v0, cargo c0 is situated at location l1, cargo c1 is not at location l0cargo c1 is not present at location l0, cargo c1 is not in vehicle v0, cargo c1 is not located in vehicle v1, cargo c1 is situated at location l1, cargo c2 is in vehicle v0, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c2 is situated at location l1, cargo c3 is located in vehicle v1, cargo c3 is not at location l0cargo c3 is not present at location l0, cargo c3 is not at location l1cargo c3 is not present at location l1, cargo c3 is not located in vehicle v0, cargo c4 is at location l1, cargo c4 is located in vehicle v0, cargo c4 is located in vehicle v1, cargo c4 is not at location l0cargo c4 is not present at location l0, cargo c5 is at location l0, cargo c5 is located in vehicle v1, cargo c5 is not in vehicle v0, cargo c5 is situated at location l1, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not in vehicle v1, cargo c6 is not located in vehicle v0, cargo c6 is not situated at location l1, cargo c7 is located in vehicle v0, cargo c7 is not situated at location l0, cargo c7 is situated at location l1, cargo c8 is at location l0, cargo c8 is in vehicle v0, cargo c8 is not at location l1cargo c8 is not present at location l1, cargo c8 is not located in vehicle v1, cargo v0 is present at location l0, cargo v0 is situated at location l1, cargo v1 is at location l0, cargo v1 is at location l1, fuel f3 does not exist in location l0, fuel f3 exists in location l1, fuel f4 exists in location l1, fuel f5 does not exist in location l1, fuel f6 does not exist in location l1, fuel f7 exists in location l0, location l0 does not have a fuel-level of f1, location l0 does not have a fuel-level of f2, location l0 does not have a fuel-level of f4, location l0 has a fuel-level of f0, location l0 has fuel f5, location l0 has fuel f6, location l1 does not have fuel f2, location l1 has a fuel-level of f0, location l1 has fuel f1, location l1 has fuel f7, vehicle v0 does not contain space s1, vehicle v0 does not have space s0, vehicle v1 contains cargo c0, vehicle v1 contains space s0, vehicle v1 contains space s1, vehicle v1 does not contain cargo c2 and vehicle v1 does not contain cargo c7?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "9461a2d0-e000-4a0c-a27f-7dae5f1cee04", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_19", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, spaces s0 and s1 are neighbors and there is a connection between locations l1 and l0?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "82753868-2c86-43de-9ab9-dcf2f215f9ad", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_20", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 neighbors fuel level f1, fuel level f0 neighbors fuel level f2, fuel level f0 neighbors fuel level f3, fuel level f0 neighbors fuel level f5, fuel level f0 neighbors fuel level f6, fuel level f0 neighbors fuel level f7, fuel level f1 neighbors fuel level f2, fuel level f1 neighbors fuel level f3, fuel level f1 neighbors fuel level f4, fuel level f1 neighbors fuel level f5, fuel level f1 neighbors fuel level f7, fuel level f2 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel level f2 neighbors fuel level f6, fuel level f2 neighbors fuel level f7, fuel level f3 neighbors fuel level f1, fuel level f3 neighbors fuel level f5, fuel level f3 neighbors fuel level f7, fuel level f4 neighbors fuel level f0, fuel level f4 neighbors fuel level f2, fuel level f4 neighbors fuel level f5, fuel level f4 neighbors fuel level f7, fuel level f5 neighbors fuel level f0, fuel level f5 neighbors fuel level f2, fuel level f6 neighbors fuel level f0, fuel level f6 neighbors fuel level f1, fuel level f7 neighbors fuel level f2, fuel level f7 neighbors fuel level f4, fuel level f7 neighbors fuel level f6, fuel-levels f0 and f4 are neighbors, fuel-levels f1 and f0 are neighbors, fuel-levels f1 and f6 are neighbors, fuel-levels f2 and f0 are neighbors, fuel-levels f2 and f4 are neighbors, fuel-levels f2 and f5 are neighbors, fuel-levels f3 and f0 are neighbors, fuel-levels f3 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f3 and f6 are neighbors, fuel-levels f4 and f1 are neighbors, fuel-levels f4 and f3 are neighbors, fuel-levels f4 and f6 are neighbors, fuel-levels f5 and f1 are neighbors, fuel-levels f5 and f3 are neighbors, fuel-levels f5 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f5 and f7 are neighbors, fuel-levels f6 and f2 are neighbors, fuel-levels f6 and f3 are neighbors, fuel-levels f6 and f4 are neighbors, fuel-levels f6 and f5 are neighbors, fuel-levels f6 and f7 are neighbors, fuel-levels f7 and f0 are neighbors, fuel-levels f7 and f1 are neighbors, fuel-levels f7 and f3 are neighbors, fuel-levels f7 and f5 are neighbors, location l0 is connected to location l1, space s0 neighbors space s1, spaces s1 and s0 are neighbors and there is a connection between locations l1 and l0?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "80258fa1-d55b-41a7-85db-a448b63e97f1", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_21", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f6, fuel level f1 does not neighbour fuel level f7, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f7, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f6, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f6, fuel level f4 does not neighbour fuel level f7, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f7, fuel level f6 does not neighbour fuel level f0, fuel level f6 does not neighbour fuel level f1, fuel level f6 does not neighbour fuel level f4, fuel level f7 does not neighbour fuel level f1, fuel level f7 does not neighbour fuel level f5, fuel level f7 does not neighbour fuel level f6, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f6 are not neighbors, fuel-levels f0 and f7 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f6 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f3 and f7 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f5 and f4 are not neighbors, fuel-levels f6 and f2 are not neighbors, fuel-levels f6 and f3 are not neighbors, fuel-levels f6 and f5 are not neighbors, fuel-levels f7 and f0 are not neighbors, fuel-levels f7 and f2 are not neighbors, fuel-levels f7 and f3 are not neighbors, fuel-levels f7 and f4 are not neighbors and space s1 does not neighbour space s0?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "de0875c3-5ef3-41b9-becd-ba9986dbb96b", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_22", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 does not neighbour fuel level f5, fuel level f0 does not neighbour fuel level f6, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f2, fuel level f1 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f6, fuel level f2 does not neighbour fuel level f1, fuel level f2 does not neighbour fuel level f3, fuel level f2 does not neighbour fuel level f4, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f7, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f3, fuel level f4 does not neighbour fuel level f5, fuel level f4 does not neighbour fuel level f6, fuel level f4 does not neighbour fuel level f7, fuel level f5 does not neighbour fuel level f7, fuel level f6 does not neighbour fuel level f0, fuel level f6 does not neighbour fuel level f1, fuel level f6 does not neighbour fuel level f2, fuel level f6 does not neighbour fuel level f3, fuel level f6 does not neighbour fuel level f4, fuel level f6 does not neighbour fuel level f7, fuel level f7 does not neighbour fuel level f0, fuel level f7 does not neighbour fuel level f3, fuel level f7 does not neighbour fuel level f5, fuel level f7 does not neighbour fuel level f6, fuel-levels f0 and f1 are not neighbors, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f7 are not neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f1 and f7 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f2 and f6 are not neighbors, fuel-levels f2 and f7 are not neighbors, fuel-levels f3 and f4 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f3 and f6 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f5 and f4 are not neighbors, fuel-levels f5 and f6 are not neighbors, fuel-levels f6 and f5 are not neighbors, fuel-levels f7 and f1 are not neighbors, fuel-levels f7 and f2 are not neighbors, fuel-levels f7 and f4 are not neighbors, location l1 and location l0 are not connected, spaces s0 and s1 are not neighbors, spaces s1 and s0 are not neighbors and there is no connection between locations l0 and l1?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "0019f96c-b3fa-4ec6-87e2-d782b355c670", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_23", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 does not neighbour fuel level f2, fuel level f0 neighbors fuel level f1, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f6, fuel level f2 neighbors fuel level f3, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f5, fuel level f4 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f7, fuel level f4 neighbors fuel level f5, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f4, fuel level f6 does not neighbour fuel level f4, fuel level f6 does not neighbour fuel level f5, fuel level f7 does not neighbour fuel level f5, fuel level f7 does not neighbour fuel level f6, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f0 and f6 are not neighbors, fuel-levels f0 and f7 are not neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f1 and f7 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f2 and f6 are not neighbors, fuel-levels f2 and f7 are not neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f3 and f6 are not neighbors, fuel-levels f3 and f7 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f4 and f6 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f5 and f7 are not neighbors, fuel-levels f6 and f0 are not neighbors, fuel-levels f6 and f1 are not neighbors, fuel-levels f6 and f2 are not neighbors, fuel-levels f6 and f3 are not neighbors, fuel-levels f6 and f7 are neighbors, fuel-levels f7 and f0 are not neighbors, fuel-levels f7 and f1 are not neighbors, fuel-levels f7 and f2 are not neighbors, fuel-levels f7 and f3 are not neighbors, fuel-levels f7 and f4 are not neighbors, location l0 and location l1 are connected, location l1 and location l0 are connected, space s0 neighbors space s1 and spaces s1 and s0 are not neighbors?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "79682360-2788-4c82-864b-f6ac18d3337c", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_24", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 does not neighbour fuel level f1, fuel level f0 does not neighbour fuel level f5, fuel level f0 does not neighbour fuel level f6, fuel level f0 neighbors fuel level f4, fuel level f1 does not neighbour fuel level f2, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f7, fuel level f1 neighbors fuel level f4, fuel level f1 neighbors fuel level f5, fuel level f2 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f1, fuel level f3 neighbors fuel level f2, fuel level f4 does not neighbour fuel level f3, fuel level f4 neighbors fuel level f0, fuel level f4 neighbors fuel level f2, fuel level f5 neighbors fuel level f0, fuel level f5 neighbors fuel level f2, fuel level f5 neighbors fuel level f6, fuel level f6 does not neighbour fuel level f3, fuel level f6 neighbors fuel level f0, fuel level f6 neighbors fuel level f7, fuel level f7 does not neighbour fuel level f5, fuel level f7 neighbors fuel level f6, fuel-levels f0 and f2 are neighbors, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f7 are not neighbors, fuel-levels f1 and f0 are neighbors, fuel-levels f1 and f6 are neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f3 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f2 and f6 are not neighbors, fuel-levels f2 and f7 are neighbors, fuel-levels f3 and f0 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f3 and f5 are neighbors, fuel-levels f3 and f6 are neighbors, fuel-levels f3 and f7 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f5 are not neighbors, fuel-levels f4 and f6 are not neighbors, fuel-levels f4 and f7 are not neighbors, fuel-levels f5 and f1 are neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f5 and f4 are neighbors, fuel-levels f5 and f7 are not neighbors, fuel-levels f6 and f1 are neighbors, fuel-levels f6 and f2 are neighbors, fuel-levels f6 and f4 are neighbors, fuel-levels f6 and f5 are not neighbors, fuel-levels f7 and f0 are not neighbors, fuel-levels f7 and f1 are neighbors, fuel-levels f7 and f2 are neighbors, fuel-levels f7 and f3 are not neighbors, fuel-levels f7 and f4 are neighbors, location l0 is not connected to location l1, location l1 is connected to location l0, spaces s0 and s1 are neighbors and spaces s1 and s0 are not neighbors?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "b5a764bf-1e73-480a-bd8b-3f23bd880dc5", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_7", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state,. What are the self constraint properties of the state for f7? Write None if there are none", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "80b84165-e367-4ae0-a12b-45407bba783a", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_8", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state,. What are the self constraint properties of the state for f2? Write None if there are none", "answer": "fuel f2 does not exist in location l1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "71ba8991-5c0a-46ef-9a84-bad356e16c4d", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_9", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state,. What are the self constraint properties of the state for c6? Write None if there are none", "answer": "cargo c6 is not in vehicle v0, cargo c6 is not located in vehicle v1, cargo c6 is not situated at location l0 and cargo c6 is present at location l1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "4b2ba45d-dc04-412d-b753-a368bca9a57c", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_10", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state,. What are the static properties of the state for f3? Write None if there are none", "answer": "fuel-levels f2 and f3 are neighbors and fuel-levels f3 and f4 are neighbors", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "5a24c651-50b7-4519-9ad3-ddfede6e7786", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_11", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state,. What are the static properties of the state for f6? Write None if there are none", "answer": "fuel level f0 does not neighbour fuel level f6, fuel level f3 does not neighbour fuel level f6, fuel level f4 does not neighbour fuel level f6, fuel level f6 does not neighbour fuel level f0, fuel level f6 does not neighbour fuel level f2, fuel level f6 does not neighbour fuel level f3, fuel level f6 does not neighbour fuel level f4, fuel level f6 does not neighbour fuel level f5, fuel-levels f1 and f6 are not neighbors, fuel-levels f2 and f6 are not neighbors, fuel-levels f6 and f1 are not neighbors and fuel-levels f7 and f6 are not neighbors", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "41aec992-12d9-4f24-9ab7-5fc5fd52359a", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_12", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state,. What are the static properties of the state for f6? Write None if there are none", "answer": "fuel level f4 does not neighbour fuel level f6, fuel level f6 does not neighbour fuel level f1, fuel level f6 does not neighbour fuel level f5, fuel level f6 neighbors fuel level f7, fuel level f7 does not neighbour fuel level f6, fuel-levels f0 and f6 are not neighbors, fuel-levels f1 and f6 are not neighbors, fuel-levels f2 and f6 are not neighbors, fuel-levels f3 and f6 are not neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f0 are not neighbors, fuel-levels f6 and f2 are not neighbors, fuel-levels f6 and f3 are not neighbors and fuel-levels f6 and f4 are not neighbors", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "f7c058cf-7181-494f-bca7-24e200b594a6", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, is it True or False that vehicle v0 has space s0?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "91fee184-56e3-400d-b04e-46db9b4f8bf8", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, is it True or False that location l1 does not have fuel f3?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "c986d5a5-b871-47e2-ba27-b5a6e7d40445", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, is it True or False that vehicle v0 does not contain cargo c6?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "29c5cf22-9508-4a65-95ed-53260cf67ccc", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_13", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, is it True or False that fuel-levels f1 and f2 are neighbors?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "2f056a68-01e6-4e59-92fb-5a1925f46cc8", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_14", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, is it True or False that fuel level f4 does not neighbour fuel level f5?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "56024f27-559e-47bd-855a-faf5fc871d22", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_15", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, is it True or False that fuel-levels f3 and f1 are not neighbors?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "0000bf54-8594-440a-8b59-41f623aa6fc4", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is situated at location l0, cargo c1 is present at location l0, cargo c2 is present at location l0, cargo c3 is at location l0, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel f1 exists in location l0, location l1 has a fuel-level of f3, vehicle v0 contains cargo c4, vehicle v0 contains space s0 and vehicle v1 has space s1?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "b9231e20-b1c9-4001-b472-f4818ae07456", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is at location l0, cargo c0 is located in vehicle v0, cargo c0 is present at location l1, cargo c1 is at location l1, cargo c1 is in vehicle v1, cargo c1 is situated at location l0, cargo c2 is at location l0, cargo c2 is at location l1, cargo c2 is in vehicle v1, cargo c2 is located in vehicle v0, cargo c3 is at location l1, cargo c3 is in vehicle v0, cargo c3 is in vehicle v1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c4 is located in vehicle v1, cargo c4 is situated at location l0, cargo c5 is at location l1, cargo c5 is located in vehicle v0, cargo c5 is located in vehicle v1, cargo c5 is present at location l0, cargo c6 is at location l0, cargo c6 is located in vehicle v0, cargo c6 is located in vehicle v1, cargo c6 is present at location l1, cargo c7 is at location l0, cargo c7 is in vehicle v1, cargo c7 is situated at location l1, cargo c8 is at location l0, cargo c8 is at location l1, cargo c8 is in vehicle v1, cargo c8 is located in vehicle v0, cargo v0 is at location l0, cargo v0 is at location l1, cargo v1 is present at location l1, cargo v1 is situated at location l0, fuel f1 exists in location l1, fuel f2 exists in location l1, fuel f3 exists in location l1, fuel f4 exists in location l0, fuel f5 exists in location l1, fuel f6 exists in location l0, fuel f6 exists in location l1, fuel f7 exists in location l1, location l0 has a fuel-level of f0, location l0 has a fuel-level of f1, location l0 has a fuel-level of f2, location l0 has a fuel-level of f7, location l0 has fuel f3, location l0 has fuel f5, location l1 has a fuel-level of f4, location l1 has fuel f0, vehicle v0 contains cargo c1, vehicle v0 contains cargo c4, vehicle v0 contains cargo c7, vehicle v0 contains space s0, vehicle v0 has space s1, vehicle v1 contains cargo c0, vehicle v1 contains space s0 and vehicle v1 contains space s1?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "bc485479-ad4f-44b2-8dbe-c398870e0732", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is not at location l1cargo c0 is not present at location l1, cargo c0 is not located in vehicle v1, cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c2 is not located in vehicle v0, cargo c2 is not located in vehicle v1, cargo c2 is not situated at location l1, cargo c3 is not in vehicle v0, cargo c3 is not situated at location l1, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c4 is not located in vehicle v1, cargo c4 is not situated at location l0, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c5 is not in vehicle v0, cargo c5 is not located in vehicle v1, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not in vehicle v0, cargo c7 is not in vehicle v1, cargo c7 is not situated at location l0, cargo c8 is not at location l1cargo c8 is not present at location l1, cargo c8 is not in vehicle v0, cargo c8 is not located in vehicle v1, cargo v0 is not situated at location l1, cargo v1 is not situated at location l0, fuel f0 does not exist in location l0, fuel f0 does not exist in location l1, fuel f1 does not exist in location l1, fuel f4 does not exist in location l1, fuel f6 does not exist in location l0, location l0 does not have a fuel-level of f2, location l0 does not have a fuel-level of f5, location l0 does not have a fuel-level of f7, location l0 does not have fuel f3, location l0 does not have fuel f4, location l1 does not have a fuel-level of f6, location l1 does not have fuel f2, location l1 does not have fuel f5, location l1 does not have fuel f7, vehicle v0 does not contain cargo c0, vehicle v0 does not contain cargo c1, vehicle v0 does not contain cargo c7, vehicle v0 does not have space s1, vehicle v1 does not contain cargo c1, vehicle v1 does not contain cargo c3, vehicle v1 does not contain cargo c6 and vehicle v1 does not contain space s0?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "9972841f-afb4-4800-8e98-8103faea9ef8", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is not located in vehicle v0, cargo c0 is not situated at location l0, cargo c0 is not situated at location l1, cargo c1 is not in vehicle v0, cargo c1 is not located in vehicle v1, cargo c1 is not situated at location l0, cargo c1 is not situated at location l1, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c2 is not at location l1cargo c2 is not present at location l1, cargo c2 is not in vehicle v0, cargo c3 is not at location l1cargo c3 is not present at location l1, cargo c3 is not in vehicle v0, cargo c3 is not located in vehicle v1, cargo c3 is not situated at location l0, cargo c4 is not at location l0cargo c4 is not present at location l0, cargo c4 is not in vehicle v0, cargo c4 is not situated at location l1, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c5 is not in vehicle v0, cargo c5 is not in vehicle v1, cargo c5 is not situated at location l0, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not located in vehicle v0, cargo c6 is not located in vehicle v1, cargo c6 is not situated at location l1, cargo c7 is not at location l0cargo c7 is not present at location l0, cargo c7 is not in vehicle v0, cargo c7 is not located in vehicle v1, cargo c7 is not situated at location l1, cargo c8 is not at location l0cargo c8 is not present at location l0, cargo c8 is not located in vehicle v0, cargo c8 is not located in vehicle v1, cargo c8 is not situated at location l1, cargo v0 is not at location l0cargo v0 is not present at location l0, cargo v0 is not situated at location l1, cargo v1 is not at location l0cargo v1 is not present at location l0, cargo v1 is not situated at location l1, fuel f0 does not exist in location l1, fuel f4 does not exist in location l1, fuel f5 does not exist in location l0, fuel f5 does not exist in location l1, location l0 does not have a fuel-level of f0, location l0 does not have a fuel-level of f1, location l0 does not have a fuel-level of f2, location l0 does not have a fuel-level of f6, location l0 does not have a fuel-level of f7, location l0 does not have fuel f3, location l0 does not have fuel f4, location l1 does not have a fuel-level of f1, location l1 does not have a fuel-level of f2, location l1 does not have a fuel-level of f3, location l1 does not have a fuel-level of f6, location l1 does not have a fuel-level of f7, vehicle v0 does not contain space s1, vehicle v0 does not have space s0, vehicle v1 does not contain cargo c0, vehicle v1 does not contain cargo c2, vehicle v1 does not contain cargo c4, vehicle v1 does not contain space s1 and vehicle v1 does not have space s0?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "e4c97eff-0e7c-4266-a4d5-3541427af44e", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is at location l0, cargo c0 is not at location l1cargo c0 is not present at location l1, cargo c0 is not in vehicle v0, cargo c1 is not in vehicle v0, cargo c1 is not located in vehicle v1, cargo c1 is not situated at location l1, cargo c1 is situated at location l0, cargo c2 is not in vehicle v1, cargo c2 is not situated at location l1, cargo c2 is situated at location l0, cargo c3 is not at location l1cargo c3 is not present at location l1, cargo c3 is not in vehicle v1, cargo c3 is situated at location l0, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c4 is not situated at location l0, cargo c5 is not in vehicle v1, cargo c5 is not located in vehicle v0, cargo c5 is not situated at location l1, cargo c5 is present at location l0, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is present at location l1, cargo c7 is not at location l0cargo c7 is not present at location l0, cargo c7 is not located in vehicle v0, cargo c7 is situated at location l1, cargo c8 is not at location l1cargo c8 is not present at location l1, cargo c8 is not in vehicle v1, cargo c8 is situated at location l0, cargo v0 is not situated at location l1, cargo v0 is present at location l0, cargo v1 is at location l1, cargo v1 is not situated at location l0, fuel f0 does not exist in location l0, fuel f2 does not exist in location l1, fuel f4 does not exist in location l0, fuel f4 does not exist in location l1, fuel f5 does not exist in location l0, fuel f6 does not exist in location l0, fuel f7 does not exist in location l0, location l0 does not have a fuel-level of f2, location l0 does not have a fuel-level of f3, location l0 has fuel f1, location l1 does not have a fuel-level of f0, location l1 does not have a fuel-level of f1, location l1 does not have a fuel-level of f5, location l1 does not have a fuel-level of f6, location l1 does not have a fuel-level of f7, location l1 has a fuel-level of f3, vehicle v0 contains cargo c4, vehicle v0 does not contain cargo c2, vehicle v0 does not contain cargo c3, vehicle v0 does not contain cargo c6, vehicle v0 does not contain cargo c8, vehicle v0 does not have space s1, vehicle v0 has space s0, vehicle v1 does not contain cargo c0, vehicle v1 does not contain cargo c4, vehicle v1 does not contain cargo c6, vehicle v1 does not contain cargo c7, vehicle v1 does not contain space s0 and vehicle v1 has space s1?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "8a205d01-6784-4931-9954-8362f4af1558", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c0 is not at location l1cargo c0 is not present at location l1, cargo c0 is not located in vehicle v0, cargo c1 is in vehicle v0, cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c1 is not located in vehicle v1, cargo c1 is not situated at location l0, cargo c2 is in vehicle v0, cargo c2 is not at location l1cargo c2 is not present at location l1, cargo c2 is not situated at location l0, cargo c3 is in vehicle v0, cargo c3 is in vehicle v1, cargo c3 is not at location l0cargo c3 is not present at location l0, cargo c3 is not situated at location l1, cargo c4 is located in vehicle v0, cargo c4 is located in vehicle v1, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c4 is situated at location l0, cargo c5 is not in vehicle v0, cargo c5 is not situated at location l0, cargo c5 is present at location l1, cargo c6 is located in vehicle v1, cargo c6 is not situated at location l0, cargo c6 is situated at location l1, cargo c7 is in vehicle v1, cargo c7 is not in vehicle v0, cargo c7 is not situated at location l0, cargo c7 is present at location l1, cargo c8 is not situated at location l0, cargo c8 is situated at location l1, cargo v0 is not situated at location l0, cargo v0 is situated at location l1, cargo v1 is not situated at location l0, cargo v1 is present at location l1, fuel f0 exists in location l0, fuel f1 does not exist in location l0, fuel f2 exists in location l1, fuel f4 does not exist in location l1, location l0 does not have a fuel-level of f4, location l0 does not have a fuel-level of f7, location l0 does not have fuel f2, location l0 has a fuel-level of f5, location l0 has fuel f3, location l0 has fuel f6, location l1 does not have a fuel-level of f6, location l1 does not have fuel f0, location l1 does not have fuel f5, location l1 has a fuel-level of f3, location l1 has fuel f1, location l1 has fuel f7, vehicle v0 contains space s1, vehicle v0 does not contain cargo c6, vehicle v0 does not contain cargo c8, vehicle v0 does not contain space s0, vehicle v1 contains cargo c0, vehicle v1 contains cargo c2, vehicle v1 contains space s1, vehicle v1 does not contain cargo c5, vehicle v1 does not contain cargo c8 and vehicle v1 does not have space s0?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "54d7de81-5f33-4267-a101-3671ed247dde", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_19", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, location l0 and location l1 are connected, space s0 neighbors space s1 and there is a connection between locations l1 and l0?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "1c0ce9f1-8baa-42c5-ba7b-81b933c6b0f6", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_20", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 neighbors fuel level f1, fuel level f0 neighbors fuel level f3, fuel level f0 neighbors fuel level f4, fuel level f0 neighbors fuel level f6, fuel level f0 neighbors fuel level f7, fuel level f1 neighbors fuel level f2, fuel level f1 neighbors fuel level f4, fuel level f1 neighbors fuel level f5, fuel level f1 neighbors fuel level f6, fuel level f1 neighbors fuel level f7, fuel level f2 neighbors fuel level f0, fuel level f2 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel level f2 neighbors fuel level f6, fuel level f3 neighbors fuel level f0, fuel level f3 neighbors fuel level f1, fuel level f3 neighbors fuel level f5, fuel level f4 neighbors fuel level f0, fuel level f4 neighbors fuel level f2, fuel level f4 neighbors fuel level f3, fuel level f4 neighbors fuel level f7, fuel level f5 neighbors fuel level f2, fuel level f5 neighbors fuel level f3, fuel level f5 neighbors fuel level f4, fuel level f5 neighbors fuel level f6, fuel level f5 neighbors fuel level f7, fuel level f6 neighbors fuel level f4, fuel level f7 neighbors fuel level f1, fuel level f7 neighbors fuel level f2, fuel level f7 neighbors fuel level f5, fuel level f7 neighbors fuel level f6, fuel-levels f0 and f2 are neighbors, fuel-levels f0 and f5 are neighbors, fuel-levels f1 and f0 are neighbors, fuel-levels f1 and f3 are neighbors, fuel-levels f2 and f4 are neighbors, fuel-levels f2 and f5 are neighbors, fuel-levels f2 and f7 are neighbors, fuel-levels f3 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f3 and f6 are neighbors, fuel-levels f3 and f7 are neighbors, fuel-levels f4 and f1 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f4 and f6 are neighbors, fuel-levels f5 and f0 are neighbors, fuel-levels f5 and f1 are neighbors, fuel-levels f6 and f0 are neighbors, fuel-levels f6 and f1 are neighbors, fuel-levels f6 and f2 are neighbors, fuel-levels f6 and f3 are neighbors, fuel-levels f6 and f5 are neighbors, fuel-levels f6 and f7 are neighbors, fuel-levels f7 and f0 are neighbors, fuel-levels f7 and f3 are neighbors, fuel-levels f7 and f4 are neighbors, location l0 and location l1 are connected, location l1 is connected to location l0, spaces s0 and s1 are neighbors and spaces s1 and s0 are neighbors?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "b9ace9f8-be88-4ad2-8961-f7c812f950d9", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_21", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 does not neighbour fuel level f3, fuel level f0 does not neighbour fuel level f6, fuel level f0 does not neighbour fuel level f7, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f6, fuel level f1 does not neighbour fuel level f7, fuel level f2 does not neighbour fuel level f6, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f7, fuel level f4 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f4, fuel level f5 does not neighbour fuel level f7, fuel level f6 does not neighbour fuel level f3, fuel level f6 does not neighbour fuel level f5, fuel level f7 does not neighbour fuel level f1, fuel level f7 does not neighbour fuel level f6, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f2 and f7 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f3 and f6 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f4 and f6 are not neighbors, fuel-levels f4 and f7 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f6 and f0 are not neighbors, fuel-levels f6 and f1 are not neighbors, fuel-levels f6 and f2 are not neighbors, fuel-levels f6 and f4 are not neighbors, fuel-levels f7 and f0 are not neighbors, fuel-levels f7 and f2 are not neighbors, fuel-levels f7 and f3 are not neighbors, fuel-levels f7 and f4 are not neighbors, fuel-levels f7 and f5 are not neighbors and spaces s1 and s0 are not neighbors?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "adea6e73-0fa6-44cc-90a2-357d4fa8010f", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_22", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 does not neighbour fuel level f1, fuel level f0 does not neighbour fuel level f4, fuel level f0 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f1, fuel level f2 does not neighbour fuel level f3, fuel level f2 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f6, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f6, fuel level f4 does not neighbour fuel level f7, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f2, fuel level f6 does not neighbour fuel level f0, fuel level f6 does not neighbour fuel level f2, fuel level f6 does not neighbour fuel level f3, fuel level f6 does not neighbour fuel level f5, fuel level f7 does not neighbour fuel level f3, fuel level f7 does not neighbour fuel level f5, fuel level f7 does not neighbour fuel level f6, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f6 are not neighbors, fuel-levels f0 and f7 are not neighbors, fuel-levels f1 and f2 are not neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f1 and f6 are not neighbors, fuel-levels f1 and f7 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f6 are not neighbors, fuel-levels f2 and f7 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f3 and f4 are not neighbors, fuel-levels f3 and f7 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f4 and f5 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f5 and f4 are not neighbors, fuel-levels f5 and f6 are not neighbors, fuel-levels f5 and f7 are not neighbors, fuel-levels f6 and f1 are not neighbors, fuel-levels f6 and f4 are not neighbors, fuel-levels f6 and f7 are not neighbors, fuel-levels f7 and f0 are not neighbors, fuel-levels f7 and f1 are not neighbors, fuel-levels f7 and f2 are not neighbors, fuel-levels f7 and f4 are not neighbors, location l0 and location l1 are not connected, location l1 is not connected to location l0, space s0 does not neighbour space s1 and spaces s1 and s0 are not neighbors?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "4bd5b77b-7ae5-440a-90e5-afca37978403", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_23", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f3, fuel level f0 does not neighbour fuel level f5, fuel level f0 does not neighbour fuel level f7, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f7, fuel level f1 neighbors fuel level f2, fuel level f2 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f7, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f6, fuel level f3 neighbors fuel level f4, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f4, fuel level f5 does not neighbour fuel level f7, fuel level f6 does not neighbour fuel level f2, fuel level f6 does not neighbour fuel level f5, fuel level f7 does not neighbour fuel level f0, fuel level f7 does not neighbour fuel level f1, fuel level f7 does not neighbour fuel level f2, fuel level f7 does not neighbour fuel level f3, fuel-levels f0 and f1 are neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f6 are not neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f1 and f6 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f2 and f6 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f7 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f4 and f6 are not neighbors, fuel-levels f4 and f7 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f0 are not neighbors, fuel-levels f6 and f1 are not neighbors, fuel-levels f6 and f3 are not neighbors, fuel-levels f6 and f4 are not neighbors, fuel-levels f6 and f7 are neighbors, fuel-levels f7 and f4 are not neighbors, fuel-levels f7 and f5 are not neighbors, fuel-levels f7 and f6 are not neighbors, location l0 and location l1 are connected, location l1 is connected to location l0, spaces s0 and s1 are neighbors and spaces s1 and s0 are not neighbors?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "80ce6c2c-d5f1-4674-9928-705c169109ac", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_24", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 does not neighbour fuel level f5, fuel level f0 neighbors fuel level f2, fuel level f0 neighbors fuel level f3, fuel level f1 does not neighbour fuel level f2, fuel level f1 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f5, fuel level f1 neighbors fuel level f0, fuel level f1 neighbors fuel level f3, fuel level f2 does not neighbour fuel level f3, fuel level f2 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f6, fuel level f2 neighbors fuel level f4, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f5, fuel level f3 neighbors fuel level f6, fuel level f3 neighbors fuel level f7, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f2, fuel level f4 neighbors fuel level f6, fuel level f5 neighbors fuel level f3, fuel level f6 does not neighbour fuel level f0, fuel level f6 does not neighbour fuel level f3, fuel level f6 does not neighbour fuel level f7, fuel level f6 neighbors fuel level f2, fuel level f7 does not neighbour fuel level f3, fuel level f7 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f6 are neighbors, fuel-levels f0 and f7 are neighbors, fuel-levels f1 and f6 are neighbors, fuel-levels f1 and f7 are not neighbors, fuel-levels f2 and f0 are neighbors, fuel-levels f2 and f1 are neighbors, fuel-levels f2 and f7 are not neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f4 and f7 are not neighbors, fuel-levels f5 and f0 are neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f4 are neighbors, fuel-levels f5 and f6 are not neighbors, fuel-levels f5 and f7 are neighbors, fuel-levels f6 and f1 are neighbors, fuel-levels f6 and f4 are not neighbors, fuel-levels f6 and f5 are neighbors, fuel-levels f7 and f0 are neighbors, fuel-levels f7 and f1 are neighbors, fuel-levels f7 and f2 are neighbors, fuel-levels f7 and f4 are not neighbors, fuel-levels f7 and f5 are not neighbors, location l1 and location l0 are not connected, space s0 does not neighbour space s1, spaces s1 and s0 are not neighbors and there is a connection between locations l0 and l1?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "4079761b-517e-4c7f-ba09-725d5079a9cc", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_7", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state,. What are the self constraint properties of the state for c2? Write None if there are none", "answer": "cargo c2 is situated at location l0", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "ee81ce93-b5d2-4b7e-b069-e6f6fcfa742f", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_8", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state,. What are the self constraint properties of the state for c1? Write None if there are none", "answer": "cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c1 is not in vehicle v1 and cargo c1 is not located in vehicle v0", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "942f89bd-dfe3-4918-a209-8c966da6867d", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_9", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state,. What are the self constraint properties of the state for f4? Write None if there are none", "answer": "location l0 does not have a fuel-level of f4 and location l1 does not have a fuel-level of f4", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "b6abd203-df02-4ddd-bd1e-56dce5d3c61c", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_10", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state,. What are the static properties of the state for f7? Write None if there are none", "answer": "fuel-levels f6 and f7 are neighbors", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "d198eb6e-4562-468f-b99b-7764451f25b3", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_11", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state,. What are the static properties of the state for f2? Write None if there are none", "answer": "fuel level f2 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f2, fuel-levels f0 and f2 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f2 and f6 are not neighbors, fuel-levels f2 and f7 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f6 and f2 are not neighbors and fuel-levels f7 and f2 are not neighbors", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "a075f45d-6651-415d-8cb1-87ec69e23e50", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_12", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state,. What are the static properties of the state for f4? Write None if there are none", "answer": "fuel level f1 does not neighbour fuel level f4, fuel level f3 neighbors fuel level f4, fuel level f4 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f3, fuel level f4 does not neighbour fuel level f6, fuel level f4 does not neighbour fuel level f7, fuel level f5 does not neighbour fuel level f4, fuel-levels f0 and f4 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f6 and f4 are not neighbors and fuel-levels f7 and f4 are not neighbors", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "d26cbe44-f9cd-4f74-b9c9-f341feb4b5f3", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, is it True or False that vehicle v1 has space s1?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "3b71753e-f906-4c97-bda3-54377f6965cf", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, is it True or False that location l1 does not have a fuel-level of f2?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "2396b751-275b-439f-a76c-78397c939cb7", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, is it True or False that cargo c3 is not in vehicle v1?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "9da5faa1-5be1-4aa2-971a-274f2daf5edd", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_13", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, is it True or False that fuel-levels f5 and f6 are neighbors?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "5a385722-e4ee-4acc-9bf1-6a2df019cd18", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_14", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, is it True or False that fuel level f1 does not neighbour fuel level f2?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "e55db227-ea90-4e4b-9b78-d425859725f1", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_15", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, is it True or False that fuel-levels f2 and f4 are not neighbors?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "488c6a82-708e-4d58-9ea4-f0821ffd696e", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is present at location l0, cargo c1 is at location l0, cargo c2 is present at location l0, cargo c3 is situated at location l0, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is situated at location l1, location l0 has fuel f0, location l1 has fuel f2, vehicle v0 contains cargo c6, vehicle v0 contains space s0 and vehicle v1 contains space s1?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "06f3700b-2e35-4406-a9d3-a69352ecfafb", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is at location l1, cargo c0 is in vehicle v1, cargo c0 is located in vehicle v0, cargo c0 is situated at location l0, cargo c1 is at location l1, cargo c1 is located in vehicle v0, cargo c1 is located in vehicle v1, cargo c1 is present at location l0, cargo c2 is at location l1, cargo c2 is in vehicle v0, cargo c2 is present at location l0, cargo c3 is at location l0, cargo c3 is at location l1, cargo c3 is located in vehicle v0, cargo c4 is at location l0, cargo c4 is at location l1, cargo c5 is at location l1, cargo c5 is in vehicle v0, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c6 is in vehicle v0, cargo c6 is in vehicle v1, cargo c6 is situated at location l0, cargo c7 is at location l1, cargo c7 is located in vehicle v1, cargo c7 is present at location l0, cargo c8 is at location l0, cargo c8 is in vehicle v0, cargo c8 is situated at location l1, cargo v0 is at location l0, cargo v0 is situated at location l1, cargo v1 is present at location l1, cargo v1 is situated at location l0, fuel f3 exists in location l1, fuel f5 exists in location l0, fuel f7 exists in location l0, location l0 has a fuel-level of f0, location l0 has a fuel-level of f4, location l0 has a fuel-level of f6, location l0 has fuel f1, location l0 has fuel f2, location l0 has fuel f3, location l1 has a fuel-level of f0, location l1 has a fuel-level of f1, location l1 has a fuel-level of f5, location l1 has a fuel-level of f6, location l1 has a fuel-level of f7, location l1 has fuel f2, location l1 has fuel f4, vehicle v0 contains cargo c4, vehicle v0 contains cargo c7, vehicle v0 contains space s1, vehicle v0 has space s0, vehicle v1 contains cargo c2, vehicle v1 contains cargo c3, vehicle v1 contains cargo c4, vehicle v1 contains cargo c5, vehicle v1 contains cargo c8, vehicle v1 has space s0 and vehicle v1 has space s1?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "963928d9-7b0c-4821-b7ee-82dd4df0ee21", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is not in vehicle v0, cargo c0 is not situated at location l1, cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c1 is not in vehicle v0, cargo c1 is not located in vehicle v1, cargo c2 is not located in vehicle v0, cargo c2 is not located in vehicle v1, cargo c2 is not situated at location l1, cargo c3 is not in vehicle v1, cargo c3 is not located in vehicle v0, cargo c3 is not situated at location l1, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c4 is not in vehicle v0, cargo c4 is not located in vehicle v1, cargo c5 is not in vehicle v0, cargo c5 is not in vehicle v1, cargo c5 is not situated at location l1, cargo c6 is not at location l1cargo c6 is not present at location l1, cargo c6 is not located in vehicle v1, cargo c6 is not situated at location l0, cargo c7 is not at location l0cargo c7 is not present at location l0, cargo c7 is not located in vehicle v0, cargo c7 is not located in vehicle v1, cargo c8 is not in vehicle v0, cargo c8 is not situated at location l1, cargo v0 is not situated at location l1, cargo v1 is not at location l0cargo v1 is not present at location l0, fuel f1 does not exist in location l1, fuel f2 does not exist in location l0, fuel f3 does not exist in location l1, fuel f6 does not exist in location l0, fuel f6 does not exist in location l1, fuel f7 does not exist in location l0, location l0 does not have a fuel-level of f4, location l0 does not have fuel f1, location l0 does not have fuel f3, location l0 does not have fuel f5, location l1 does not have a fuel-level of f5, location l1 does not have a fuel-level of f7, location l1 does not have fuel f0, location l1 does not have fuel f4, vehicle v0 does not have space s1, vehicle v1 does not contain cargo c0, vehicle v1 does not contain cargo c8 and vehicle v1 does not have space s0?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "070ac739-202f-488a-a2ae-3f2ea479d4bb", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c0 is not at location l1cargo c0 is not present at location l1, cargo c0 is not in vehicle v0, cargo c1 is not at location l0cargo c1 is not present at location l0, cargo c1 is not located in vehicle v0, cargo c1 is not located in vehicle v1, cargo c1 is not situated at location l1, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c2 is not at location l1cargo c2 is not present at location l1, cargo c2 is not in vehicle v1, cargo c2 is not located in vehicle v0, cargo c3 is not in vehicle v1, cargo c3 is not located in vehicle v0, cargo c3 is not situated at location l0, cargo c3 is not situated at location l1, cargo c4 is not at location l0cargo c4 is not present at location l0, cargo c4 is not located in vehicle v0, cargo c4 is not located in vehicle v1, cargo c4 is not situated at location l1, cargo c5 is not at location l0cargo c5 is not present at location l0, cargo c5 is not situated at location l1, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not at location l1cargo c6 is not present at location l1, cargo c7 is not at location l0cargo c7 is not present at location l0, cargo c7 is not at location l1cargo c7 is not present at location l1, cargo c7 is not located in vehicle v1, cargo c8 is not at location l1cargo c8 is not present at location l1, cargo c8 is not located in vehicle v1, cargo c8 is not situated at location l0, cargo v0 is not situated at location l0, cargo v0 is not situated at location l1, cargo v1 is not situated at location l0, cargo v1 is not situated at location l1, fuel f1 does not exist in location l0, fuel f5 does not exist in location l0, fuel f5 does not exist in location l1, fuel f6 does not exist in location l1, fuel f7 does not exist in location l0, location l0 does not have fuel f0, location l0 does not have fuel f2, location l0 does not have fuel f3, location l0 does not have fuel f4, location l0 does not have fuel f6, location l1 does not have a fuel-level of f0, location l1 does not have a fuel-level of f1, location l1 does not have a fuel-level of f4, location l1 does not have fuel f2, location l1 does not have fuel f3, location l1 does not have fuel f7, vehicle v0 does not contain cargo c5, vehicle v0 does not contain cargo c6, vehicle v0 does not contain cargo c7, vehicle v0 does not contain cargo c8, vehicle v0 does not contain space s0, vehicle v0 does not have space s1, vehicle v1 does not contain cargo c0, vehicle v1 does not contain cargo c5, vehicle v1 does not contain cargo c6, vehicle v1 does not have space s0 and vehicle v1 does not have space s1?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "04a22f79-005d-4e39-9f02-39a72b15135c", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is not in vehicle v0, cargo c0 is not in vehicle v1, cargo c0 is not situated at location l1, cargo c0 is present at location l0, cargo c1 is at location l0, cargo c1 is not situated at location l1, cargo c2 is not in vehicle v1, cargo c2 is not situated at location l1, cargo c2 is present at location l0, cargo c3 is not at location l1cargo c3 is not present at location l1, cargo c3 is not located in vehicle v0, cargo c3 is situated at location l0, cargo c4 is not in vehicle v1, cargo c4 is not situated at location l1, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c5 is not in vehicle v0, cargo c6 is located in vehicle v0, cargo c6 is not located in vehicle v1, cargo c6 is not situated at location l0, cargo c6 is not situated at location l1, cargo c7 is at location l1, cargo c7 is not at location l0cargo c7 is not present at location l0, cargo c7 is not in vehicle v0, cargo c7 is not located in vehicle v1, cargo c8 is not in vehicle v0, cargo c8 is not situated at location l1, cargo c8 is present at location l0, cargo v0 is at location l0, cargo v0 is not at location l1cargo v0 is not present at location l1, cargo v1 is not situated at location l0, cargo v1 is situated at location l1, fuel f2 does not exist in location l0, fuel f3 does not exist in location l0, fuel f5 does not exist in location l1, fuel f6 does not exist in location l1, location l0 does not have a fuel-level of f1, location l0 does not have a fuel-level of f4, location l0 does not have a fuel-level of f6, location l0 does not have fuel f5, location l0 does not have fuel f7, location l0 has a fuel-level of f0, location l1 does not have a fuel-level of f0, location l1 does not have a fuel-level of f1, location l1 does not have a fuel-level of f3, location l1 does not have a fuel-level of f7, location l1 does not have fuel f4, location l1 has a fuel-level of f2, vehicle v0 contains space s0, vehicle v0 does not contain cargo c1, vehicle v0 does not contain cargo c2, vehicle v0 does not contain cargo c4, vehicle v0 does not have space s1, vehicle v1 does not contain cargo c1, vehicle v1 does not contain cargo c3, vehicle v1 does not contain cargo c5, vehicle v1 does not contain cargo c8, vehicle v1 does not have space s0 and vehicle v1 has space s1?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "a18531b7-c70b-481b-93a6-47ba46ea3c4f", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, are all of the following properties of the state True or False: cargo c0 is at location l0, cargo c0 is in vehicle v1, cargo c0 is not located in vehicle v0, cargo c0 is present at location l1, cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c1 is not in vehicle v1, cargo c1 is present at location l0, cargo c2 is in vehicle v0, cargo c2 is in vehicle v1, cargo c2 is not situated at location l0, cargo c2 is not situated at location l1, cargo c3 is not in vehicle v1, cargo c3 is present at location l0, cargo c3 is situated at location l1, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c4 is not situated at location l0, cargo c5 is at location l1, cargo c5 is located in vehicle v0, cargo c5 is located in vehicle v1, cargo c5 is present at location l0, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not in vehicle v0, cargo c6 is present at location l1, cargo c7 is at location l1, cargo c7 is in vehicle v1, cargo c7 is not at location l0cargo c7 is not present at location l0, cargo c8 is at location l0, cargo c8 is at location l1, cargo c8 is located in vehicle v0, cargo c8 is not in vehicle v1, cargo v0 is not situated at location l0, cargo v0 is situated at location l1, cargo v1 is not at location l0cargo v1 is not present at location l0, cargo v1 is present at location l1, fuel f0 exists in location l0, fuel f2 exists in location l0, fuel f3 exists in location l1, fuel f4 does not exist in location l1, fuel f5 does not exist in location l1, fuel f5 exists in location l0, fuel f6 does not exist in location l0, fuel f6 does not exist in location l1, fuel f7 exists in location l0, fuel f7 exists in location l1, location l0 does not have fuel f4, location l0 has fuel f1, location l0 has fuel f3, location l1 has a fuel-level of f0, location l1 has fuel f1, location l1 has fuel f2, vehicle v0 contains cargo c3, vehicle v0 contains space s1, vehicle v0 does not contain cargo c1, vehicle v0 does not contain cargo c4, vehicle v0 does not contain cargo c7, vehicle v0 has space s0, vehicle v1 contains cargo c4, vehicle v1 contains cargo c6, vehicle v1 does not contain space s0 and vehicle v1 has space s1?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "6526c95a-c7b6-4521-a7d3-245089241664", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_19", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f6 neighbors fuel level f7, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l1 is connected to location l0 and spaces s0 and s1 are neighbors?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "7c1ee7aa-63ec-44e1-ba04-c9c119a59032", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_20", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 neighbors fuel level f6, fuel level f0 neighbors fuel level f7, fuel level f1 neighbors fuel level f0, fuel level f1 neighbors fuel level f2, fuel level f1 neighbors fuel level f3, fuel level f1 neighbors fuel level f4, fuel level f1 neighbors fuel level f6, fuel level f1 neighbors fuel level f7, fuel level f2 neighbors fuel level f3, fuel level f2 neighbors fuel level f5, fuel level f2 neighbors fuel level f6, fuel level f2 neighbors fuel level f7, fuel level f3 neighbors fuel level f0, fuel level f3 neighbors fuel level f4, fuel level f3 neighbors fuel level f7, fuel level f4 neighbors fuel level f0, fuel level f4 neighbors fuel level f2, fuel level f4 neighbors fuel level f3, fuel level f5 neighbors fuel level f0, fuel level f5 neighbors fuel level f1, fuel level f7 neighbors fuel level f1, fuel level f7 neighbors fuel level f4, fuel level f7 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f0 and f2 are neighbors, fuel-levels f0 and f3 are neighbors, fuel-levels f0 and f4 are neighbors, fuel-levels f0 and f5 are neighbors, fuel-levels f1 and f5 are neighbors, fuel-levels f2 and f0 are neighbors, fuel-levels f2 and f1 are neighbors, fuel-levels f2 and f4 are neighbors, fuel-levels f3 and f1 are neighbors, fuel-levels f3 and f2 are neighbors, fuel-levels f3 and f5 are neighbors, fuel-levels f3 and f6 are neighbors, fuel-levels f4 and f1 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f4 and f6 are neighbors, fuel-levels f4 and f7 are neighbors, fuel-levels f5 and f2 are neighbors, fuel-levels f5 and f3 are neighbors, fuel-levels f5 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f5 and f7 are neighbors, fuel-levels f6 and f0 are neighbors, fuel-levels f6 and f1 are neighbors, fuel-levels f6 and f2 are neighbors, fuel-levels f6 and f3 are neighbors, fuel-levels f6 and f4 are neighbors, fuel-levels f6 and f5 are neighbors, fuel-levels f6 and f7 are neighbors, fuel-levels f7 and f0 are neighbors, fuel-levels f7 and f2 are neighbors, fuel-levels f7 and f3 are neighbors, fuel-levels f7 and f6 are neighbors, location l0 and location l1 are connected, space s1 neighbors space s0, spaces s0 and s1 are neighbors and there is a connection between locations l1 and l0?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "75cb881a-7fce-4173-bf1d-6cdb6dd9bc6f", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_21", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 does not neighbour fuel level f4, fuel level f0 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f1, fuel level f2 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f6, fuel level f2 does not neighbour fuel level f7, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f7, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f6, fuel level f4 does not neighbour fuel level f7, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f3, fuel level f6 does not neighbour fuel level f2, fuel level f6 does not neighbour fuel level f3, fuel level f6 does not neighbour fuel level f4, fuel level f6 does not neighbour fuel level f5, fuel level f7 does not neighbour fuel level f0, fuel level f7 does not neighbour fuel level f1, fuel level f7 does not neighbour fuel level f2, fuel level f7 does not neighbour fuel level f5, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f6 are not neighbors, fuel-levels f0 and f7 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f1 and f6 are not neighbors, fuel-levels f1 and f7 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f3 and f6 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f4 are not neighbors, fuel-levels f5 and f7 are not neighbors, fuel-levels f6 and f0 are not neighbors, fuel-levels f6 and f1 are not neighbors, fuel-levels f7 and f3 are not neighbors, fuel-levels f7 and f4 are not neighbors, fuel-levels f7 and f6 are not neighbors and space s1 does not neighbour space s0?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "93a0fe0f-a6d8-4b70-9b31-675674c12012", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_22", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 does not neighbour fuel level f1, fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f3, fuel level f0 does not neighbour fuel level f6, fuel level f0 does not neighbour fuel level f7, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f3, fuel level f2 does not neighbour fuel level f1, fuel level f2 does not neighbour fuel level f3, fuel level f2 does not neighbour fuel level f4, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f4, fuel level f3 does not neighbour fuel level f5, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f3, fuel level f4 does not neighbour fuel level f5, fuel level f4 does not neighbour fuel level f6, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f4, fuel level f6 does not neighbour fuel level f0, fuel level f6 does not neighbour fuel level f3, fuel level f6 does not neighbour fuel level f4, fuel level f6 does not neighbour fuel level f5, fuel level f7 does not neighbour fuel level f0, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f1 and f2 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f1 and f6 are not neighbors, fuel-levels f1 and f7 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f2 and f6 are not neighbors, fuel-levels f2 and f7 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f6 are not neighbors, fuel-levels f3 and f7 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f7 are not neighbors, fuel-levels f5 and f6 are not neighbors, fuel-levels f5 and f7 are not neighbors, fuel-levels f6 and f1 are not neighbors, fuel-levels f6 and f2 are not neighbors, fuel-levels f6 and f7 are not neighbors, fuel-levels f7 and f1 are not neighbors, fuel-levels f7 and f2 are not neighbors, fuel-levels f7 and f3 are not neighbors, fuel-levels f7 and f4 are not neighbors, fuel-levels f7 and f5 are not neighbors, fuel-levels f7 and f6 are not neighbors, location l0 is not connected to location l1, space s1 does not neighbour space s0, spaces s0 and s1 are not neighbors and there is no connection between locations l1 and l0?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "7230bb04-6eba-4294-85a2-359e25bc2f1b", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_23", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f3, fuel level f0 neighbors fuel level f1, fuel level f1 does not neighbour fuel level f0, fuel level f1 neighbors fuel level f2, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f1, fuel level f2 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f6, fuel level f2 neighbors fuel level f3, fuel level f3 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f3, fuel level f4 does not neighbour fuel level f7, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f2, fuel level f6 does not neighbour fuel level f0, fuel level f6 does not neighbour fuel level f2, fuel level f6 does not neighbour fuel level f4, fuel level f6 does not neighbour fuel level f5, fuel level f7 does not neighbour fuel level f0, fuel level f7 does not neighbour fuel level f1, fuel level f7 does not neighbour fuel level f2, fuel level f7 does not neighbour fuel level f3, fuel level f7 does not neighbour fuel level f4, fuel level f7 does not neighbour fuel level f5, fuel level f7 does not neighbour fuel level f6, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f0 and f6 are not neighbors, fuel-levels f0 and f7 are not neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f1 and f6 are not neighbors, fuel-levels f1 and f7 are not neighbors, fuel-levels f2 and f7 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f3 and f6 are not neighbors, fuel-levels f3 and f7 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f4 and f6 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f5 and f4 are not neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f5 and f7 are not neighbors, fuel-levels f6 and f1 are not neighbors, fuel-levels f6 and f3 are not neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, space s0 neighbors space s1, spaces s1 and s0 are not neighbors and there is a connection between locations l1 and l0?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "a894a2fe-d420-4ab1-94fe-2ef86a68e449", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_24", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, are all of the following properties of the state True or False: fuel level f0 does not neighbour fuel level f1, fuel level f0 does not neighbour fuel level f2, fuel level f0 neighbors fuel level f5, fuel level f0 neighbors fuel level f7, fuel level f1 does not neighbour fuel level f2, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f4, fuel level f1 neighbors fuel level f0, fuel level f1 neighbors fuel level f6, fuel level f2 does not neighbour fuel level f3, fuel level f2 does not neighbour fuel level f6, fuel level f2 does not neighbour fuel level f7, fuel level f2 neighbors fuel level f4, fuel level f2 neighbors fuel level f5, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f7, fuel level f3 neighbors fuel level f5, fuel level f4 does not neighbour fuel level f3, fuel level f4 does not neighbour fuel level f6, fuel level f5 does not neighbour fuel level f7, fuel level f5 neighbors fuel level f0, fuel level f5 neighbors fuel level f4, fuel level f6 does not neighbour fuel level f1, fuel level f6 does not neighbour fuel level f3, fuel level f6 neighbors fuel level f4, fuel level f7 does not neighbour fuel level f0, fuel level f7 does not neighbour fuel level f4, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f6 are neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f1 and f7 are not neighbors, fuel-levels f2 and f0 are neighbors, fuel-levels f2 and f1 are neighbors, fuel-levels f3 and f0 are neighbors, fuel-levels f3 and f1 are neighbors, fuel-levels f3 and f4 are not neighbors, fuel-levels f3 and f6 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f5 are not neighbors, fuel-levels f4 and f7 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f3 are neighbors, fuel-levels f5 and f6 are not neighbors, fuel-levels f6 and f0 are not neighbors, fuel-levels f6 and f2 are neighbors, fuel-levels f6 and f5 are neighbors, fuel-levels f6 and f7 are not neighbors, fuel-levels f7 and f1 are neighbors, fuel-levels f7 and f2 are neighbors, fuel-levels f7 and f3 are not neighbors, fuel-levels f7 and f5 are not neighbors, fuel-levels f7 and f6 are neighbors, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s0 are neighbors and there is no connection between locations l0 and l1?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "3f50ba69-0b86-4c1a-861e-c42fee491cd0", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_7", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state,. What are the self constraint properties of the state for s0? Write None if there are none", "answer": "vehicle v0 has space s0", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "9b13c117-5d15-4428-996d-4c18e9cec6f5", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_8", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state,. What are the self constraint properties of the state for f6? Write None if there are none", "answer": "location l0 does not have a fuel-level of f6 and location l1 does not have a fuel-level of f6", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "219bdc0f-b779-4455-b707-763a63f72fca", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_9", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state,. What are the self constraint properties of the state for f2? Write None if there are none", "answer": "fuel f2 exists in location l1 and location l0 does not have a fuel-level of f2", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "2c08193b-6285-4a38-ae32-7fe4fe85dd0a", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_10", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state,. What are the static properties of the state for s0? Write None if there are none", "answer": "space s0 neighbors space s1", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "c5cf06a3-0a78-41b4-9893-cb97ad7e3074", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_11", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state,. What are the static properties of the state for l1? Write None if there are none", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "36b21afb-247f-4288-bd8e-be2033b4d222", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_12", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state,. What are the static properties of the state for f7? Write None if there are none", "answer": "fuel level f0 does not neighbour fuel level f7, fuel level f1 does not neighbour fuel level f7, fuel level f2 does not neighbour fuel level f7, fuel level f4 does not neighbour fuel level f7, fuel level f5 does not neighbour fuel level f7, fuel level f6 neighbors fuel level f7, fuel level f7 does not neighbour fuel level f1, fuel level f7 does not neighbour fuel level f3, fuel level f7 does not neighbour fuel level f5, fuel-levels f3 and f7 are not neighbors, fuel-levels f7 and f0 are not neighbors, fuel-levels f7 and f2 are not neighbors, fuel-levels f7 and f4 are not neighbors and fuel-levels f7 and f6 are not neighbors", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is situated at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, location l0 has a fuel-level of f5, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "56b22deb-0971-442e-a715-f4b097a59003", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, are all of the following properties: cargo c0 is at location l1, cargo c0 is not located in vehicle v1, cargo c0 is not situated at location l0, cargo c1 is at location l1, cargo c1 is not located in vehicle v0, cargo c1 is not located in vehicle v1, cargo c1 is not situated at location l0, cargo c2 is at location l1, cargo c2 is not in vehicle v0, cargo c2 is not situated at location l0, cargo c3 is not at location l1cargo c3 is not present at location l1, cargo c3 is not in vehicle v1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c4 is not in vehicle v0, cargo c4 is not in vehicle v1, cargo c4 is not situated at location l0, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c5 is not located in vehicle v0, cargo c5 is not located in vehicle v1, cargo c5 is present at location l0, cargo c6 is not in vehicle v1, cargo c6 is not located in vehicle v0, cargo c6 is not situated at location l0, cargo c6 is present at location l1, cargo c7 is not located in vehicle v1, cargo c7 is not situated at location l0, cargo c7 is situated at location l1, cargo c8 is not in vehicle v1, cargo c8 is not situated at location l1, cargo c8 is present at location l0, cargo v0 is not at location l0cargo v0 is not present at location l0, cargo v0 is present at location l1, cargo v1 is at location l1, cargo v1 is not at location l0cargo v1 is not present at location l0, fuel f0 does not exist in location l0, fuel f1 does not exist in location l0, fuel f1 does not exist in location l1, fuel f4 exists in location l0, fuel f6 does not exist in location l0, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f5, fuel level f1 neighbors fuel level f2, fuel level f2 does not neighbour fuel level f1, fuel level f2 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f6, fuel level f2 does not neighbour fuel level f7, fuel level f3 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f6, fuel level f3 neighbors fuel level f4, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f2, fuel level f4 neighbors fuel level f5, fuel level f5 does not neighbour fuel level f4, fuel level f6 does not neighbour fuel level f1, fuel level f6 does not neighbour fuel level f3, fuel level f7 does not neighbour fuel level f0, fuel level f7 does not neighbour fuel level f1, fuel level f7 does not neighbour fuel level f2, fuel-levels f0 and f1 are neighbors, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f0 and f6 are not neighbors, fuel-levels f0 and f7 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f6 are not neighbors, fuel-levels f1 and f7 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f3 and f7 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f4 and f6 are not neighbors, fuel-levels f4 and f7 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f5 and f7 are not neighbors, fuel-levels f6 and f0 are not neighbors, fuel-levels f6 and f2 are not neighbors, fuel-levels f6 and f4 are not neighbors, fuel-levels f6 and f5 are not neighbors, fuel-levels f6 and f7 are neighbors, fuel-levels f7 and f3 are not neighbors, fuel-levels f7 and f4 are not neighbors, fuel-levels f7 and f5 are not neighbors, fuel-levels f7 and f6 are not neighbors, location l0 and location l1 are connected, location l0 does not have a fuel-level of f2, location l0 does not have a fuel-level of f3, location l0 does not have a fuel-level of f5, location l0 does not have fuel f7, location l1 and location l0 are connected, location l1 does not have a fuel-level of f2, location l1 does not have a fuel-level of f6, location l1 does not have fuel f0, location l1 does not have fuel f3, location l1 does not have fuel f4, location l1 does not have fuel f5, location l1 has fuel f7, space s0 neighbors space s1, spaces s1 and s0 are not neighbors, vehicle v0 does not contain cargo c0, vehicle v0 does not contain cargo c3, vehicle v0 does not contain cargo c7, vehicle v0 does not contain cargo c8, vehicle v0 does not have space s0, vehicle v0 has space s1, vehicle v1 does not contain cargo c2, vehicle v1 does not contain space s0 and vehicle v1 has space s1, correct? Respond with True or False.", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel f5 exists in location l0, fuel f7 exists in location l1, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 is connected to location l1, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "b936415d-7cd9-406d-a06d-bebf9d8ac986", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, are all of the following properties: cargo c0 is at location l0, cargo c0 is located in vehicle v0, cargo c0 is not at location l1cargo c0 is not present at location l1, cargo c0 is not in vehicle v1, cargo c1 is located in vehicle v0, cargo c1 is located in vehicle v1, cargo c1 is not at location l0cargo c1 is not present at location l0, cargo c1 is situated at location l1, cargo c2 is in vehicle v0, cargo c2 is in vehicle v1, cargo c2 is not situated at location l0, cargo c2 is not situated at location l1, cargo c3 is at location l0, cargo c3 is in vehicle v0, cargo c3 is situated at location l1, cargo c4 is in vehicle v0, cargo c4 is not located in vehicle v1, cargo c4 is not situated at location l0, cargo c4 is not situated at location l1, cargo c5 is in vehicle v1, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c5 is not in vehicle v0, cargo c5 is present at location l0, cargo c6 is not at location l1cargo c6 is not present at location l1, cargo c6 is not located in vehicle v1, cargo c6 is present at location l0, cargo c7 is in vehicle v0, cargo c7 is not at location l1cargo c7 is not present at location l1, cargo c7 is not situated at location l0, cargo c8 is not situated at location l0, cargo c8 is situated at location l1, cargo v0 is not at location l0cargo v0 is not present at location l0, cargo v0 is situated at location l1, cargo v1 is not at location l0cargo v1 is not present at location l0, cargo v1 is not situated at location l1, fuel f0 does not exist in location l0, fuel f1 does not exist in location l0, fuel f2 does not exist in location l0, fuel f2 exists in location l1, fuel f3 does not exist in location l0, fuel f6 exists in location l0, fuel f7 does not exist in location l0, fuel level f0 does not neighbour fuel level f1, fuel level f0 does not neighbour fuel level f7, fuel level f0 neighbors fuel level f4, fuel level f0 neighbors fuel level f6, fuel level f1 does not neighbour fuel level f4, fuel level f1 neighbors fuel level f7, fuel level f2 does not neighbour fuel level f3, fuel level f2 neighbors fuel level f0, fuel level f2 neighbors fuel level f7, fuel level f3 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f7, fuel level f3 neighbors fuel level f4, fuel level f3 neighbors fuel level f6, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f5, fuel level f4 does not neighbour fuel level f6, fuel level f4 neighbors fuel level f0, fuel level f5 neighbors fuel level f0, fuel level f5 neighbors fuel level f1, fuel level f5 neighbors fuel level f3, fuel level f5 neighbors fuel level f4, fuel level f6 does not neighbour fuel level f2, fuel level f6 neighbors fuel level f0, fuel level f6 neighbors fuel level f4, fuel level f6 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel level f7 does not neighbour fuel level f3, fuel level f7 neighbors fuel level f5, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f3 are neighbors, fuel-levels f0 and f5 are neighbors, fuel-levels f1 and f0 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f1 and f6 are neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f2 and f6 are neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f3 and f2 are neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f4 and f7 are not neighbors, fuel-levels f5 and f2 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f5 and f7 are not neighbors, fuel-levels f6 and f1 are not neighbors, fuel-levels f6 and f3 are not neighbors, fuel-levels f7 and f0 are neighbors, fuel-levels f7 and f1 are not neighbors, fuel-levels f7 and f2 are not neighbors, fuel-levels f7 and f4 are not neighbors, fuel-levels f7 and f6 are neighbors, location l0 does not have fuel f5, location l0 has fuel f4, location l0 is not connected to location l1, location l1 does not have a fuel-level of f3, location l1 does not have a fuel-level of f5, location l1 does not have fuel f6, location l1 does not have fuel f7, location l1 has fuel f0, location l1 has fuel f1, location l1 has fuel f4, space s0 does not neighbour space s1, spaces s1 and s0 are neighbors, there is a connection between locations l1 and l0, vehicle v0 does not contain cargo c6, vehicle v0 does not contain cargo c8, vehicle v0 does not contain space s0, vehicle v0 does not have space s1, vehicle v1 contains cargo c7, vehicle v1 contains cargo c8, vehicle v1 contains space s1, vehicle v1 does not contain cargo c3 and vehicle v1 has space s0, correct? Respond with True or False.", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel f5 exists in location l0, fuel f7 exists in location l1, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 is connected to location l1, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "7be93e11-fc17-438f-9d6d-08d41f01c27e", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "cargo c0 is situated at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l1, cargo v1 is situated at location l1, fuel level f1 neighbors fuel level f2, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f4, location l0 is connected to location l1, location l1 has a fuel-level of f7, location l1 is connected to location l0, space s0 neighbors space s1, vehicle v0 has space s1 and vehicle v1 has space s1", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel f5 exists in location l0, fuel f7 exists in location l1, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 is connected to location l1, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "63a6a6c6-c380-4f18-96a8-bf94237e8d35", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c0 is not located in vehicle v0, cargo c0 is not located in vehicle v1, cargo c1 is not located in vehicle v0, cargo c1 is not situated at location l0, cargo c2 is not located in vehicle v1, cargo c2 is not situated at location l0, cargo c3 is not at location l1cargo c3 is not present at location l1, cargo c3 is not located in vehicle v0, cargo c4 is not located in vehicle v1, cargo c4 is not situated at location l0, cargo c5 is not in vehicle v0, cargo c5 is not located in vehicle v1, cargo c5 is not situated at location l1, cargo c6 is not located in vehicle v0, cargo c6 is not located in vehicle v1, cargo c6 is not situated at location l0, cargo c7 is not at location l0cargo c7 is not present at location l0, cargo c7 is not located in vehicle v0, cargo c8 is not in vehicle v0, cargo c8 is not situated at location l1, cargo v0 is not situated at location l0, cargo v1 is not at location l0cargo v1 is not present at location l0, fuel f1 does not exist in location l1, fuel f4 does not exist in location l1, fuel level f0 does not neighbour fuel level f3, fuel level f0 does not neighbour fuel level f7, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f7, fuel level f2 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f6, fuel level f2 does not neighbour fuel level f7, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f7, fuel level f4 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f3, fuel level f4 does not neighbour fuel level f6, fuel level f4 does not neighbour fuel level f7, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f2, fuel level f6 does not neighbour fuel level f0, fuel level f6 does not neighbour fuel level f1, fuel level f6 does not neighbour fuel level f2, fuel level f6 does not neighbour fuel level f3, fuel level f7 does not neighbour fuel level f0, fuel level f7 does not neighbour fuel level f2, fuel level f7 does not neighbour fuel level f3, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f0 and f6 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f1 and f6 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f3 and f6 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f5 and f4 are not neighbors, fuel-levels f5 and f7 are not neighbors, fuel-levels f6 and f4 are not neighbors, fuel-levels f6 and f5 are not neighbors, fuel-levels f7 and f1 are not neighbors, fuel-levels f7 and f4 are not neighbors, fuel-levels f7 and f5 are not neighbors, fuel-levels f7 and f6 are not neighbors, location l0 does not have a fuel-level of f3, location l0 does not have a fuel-level of f7, location l0 does not have fuel f0, location l0 does not have fuel f1, location l0 does not have fuel f2, location l0 does not have fuel f5, location l0 does not have fuel f6, location l1 does not have a fuel-level of f0, location l1 does not have fuel f2, location l1 does not have fuel f3, location l1 does not have fuel f5, location l1 does not have fuel f6, space s1 does not neighbour space s0, vehicle v0 does not contain cargo c2, vehicle v0 does not contain cargo c4, vehicle v0 does not contain space s0, vehicle v1 does not contain cargo c1, vehicle v1 does not contain cargo c3, vehicle v1 does not contain cargo c7, vehicle v1 does not contain cargo c8 and vehicle v1 does not contain space s0", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel f5 exists in location l0, fuel f7 exists in location l1, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 is connected to location l1, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "9e4a140b-4493-4781-a4e7-15718f47574b", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c0 is not located in vehicle v1, cargo c1 is not at location l0cargo c1 is not present at location l0, cargo c1 is not in vehicle v0, cargo c2 is not in vehicle v0, cargo c2 is not situated at location l0, cargo c3 is not at location l1cargo c3 is not present at location l1, cargo c3 is not in vehicle v0, cargo c3 is not located in vehicle v1, cargo c4 is not located in vehicle v1, cargo c4 is not situated at location l0, cargo c5 is not in vehicle v0, cargo c5 is not situated at location l1, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not located in vehicle v0, cargo c7 is not located in vehicle v1, cargo c7 is not situated at location l0, cargo c8 is not situated at location l1, cargo v0 is not situated at location l0, cargo v1 is not at location l0cargo v1 is not present at location l0, fuel f2 does not exist in location l0, fuel f3 does not exist in location l1, fuel f6 does not exist in location l0, fuel f6 does not exist in location l1, fuel f7 does not exist in location l0, fuel level f0 does not neighbour fuel level f4, fuel level f0 does not neighbour fuel level f6, fuel level f0 does not neighbour fuel level f7, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f6, fuel level f2 does not neighbour fuel level f1, fuel level f2 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f7, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f3, fuel level f6 does not neighbour fuel level f0, fuel level f6 does not neighbour fuel level f2, fuel level f6 does not neighbour fuel level f5, fuel level f7 does not neighbour fuel level f3, fuel level f7 does not neighbour fuel level f6, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f1 and f7 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f2 and f6 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f3 and f6 are not neighbors, fuel-levels f3 and f7 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f4 and f6 are not neighbors, fuel-levels f4 and f7 are not neighbors, fuel-levels f5 and f4 are not neighbors, fuel-levels f5 and f7 are not neighbors, fuel-levels f6 and f1 are not neighbors, fuel-levels f6 and f3 are not neighbors, fuel-levels f6 and f4 are not neighbors, fuel-levels f7 and f0 are not neighbors, fuel-levels f7 and f1 are not neighbors, fuel-levels f7 and f2 are not neighbors, fuel-levels f7 and f4 are not neighbors, fuel-levels f7 and f5 are not neighbors, location l0 does not have a fuel-level of f1, location l0 does not have fuel f0, location l0 does not have fuel f3, location l0 does not have fuel f5, location l1 does not have a fuel-level of f4, location l1 does not have a fuel-level of f5, location l1 does not have fuel f0, location l1 does not have fuel f1, location l1 does not have fuel f2, spaces s1 and s0 are not neighbors, vehicle v0 does not contain cargo c0, vehicle v0 does not contain cargo c4, vehicle v0 does not contain cargo c7, vehicle v0 does not contain cargo c8, vehicle v0 does not contain space s0, vehicle v1 does not contain cargo c1, vehicle v1 does not contain cargo c2, vehicle v1 does not contain cargo c5, vehicle v1 does not contain cargo c6, vehicle v1 does not contain cargo c8 and vehicle v1 does not contain space s0", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel f5 exists in location l0, fuel f7 exists in location l1, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 is connected to location l1, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "4724ec45-6fc6-43c5-a9c3-7eb26f4330ce", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, are all of the following properties: cargo c0 is at location l0, cargo c0 is not in vehicle v1, cargo c0 is not located in vehicle v0, cargo c0 is not situated at location l1, cargo c1 is not located in vehicle v0, cargo c1 is not located in vehicle v1, cargo c1 is not situated at location l0, cargo c1 is present at location l1, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c2 is not located in vehicle v0, cargo c2 is not located in vehicle v1, cargo c2 is present at location l1, cargo c3 is at location l0, cargo c3 is not at location l1cargo c3 is not present at location l1, cargo c3 is not in vehicle v0, cargo c3 is not located in vehicle v1, cargo c4 is not at location l0cargo c4 is not present at location l0, cargo c4 is situated at location l1, cargo c5 is not located in vehicle v0, cargo c5 is not located in vehicle v1, cargo c5 is not situated at location l1, cargo c5 is situated at location l0, cargo c6 is not located in vehicle v1, cargo c6 is not situated at location l0, cargo c6 is situated at location l1, cargo c7 is not in vehicle v0, cargo c7 is not located in vehicle v1, cargo c7 is not situated at location l0, cargo c7 is present at location l1, cargo c8 is not located in vehicle v0, cargo c8 is not situated at location l1, cargo c8 is situated at location l0, cargo v0 is at location l1, cargo v0 is not at location l0cargo v0 is not present at location l0, cargo v1 is at location l1, cargo v1 is not situated at location l0, fuel f0 does not exist in location l0, fuel f1 does not exist in location l1, fuel f4 does not exist in location l0, fuel f5 does not exist in location l0, fuel f6 exists in location l1, fuel level f0 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f7, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f1, fuel level f2 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f6, fuel level f3 neighbors fuel level f4, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f6, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f7, fuel level f5 neighbors fuel level f6, fuel level f6 does not neighbour fuel level f0, fuel level f6 does not neighbour fuel level f5, fuel level f6 neighbors fuel level f7, fuel level f7 does not neighbour fuel level f0, fuel level f7 does not neighbour fuel level f1, fuel level f7 does not neighbour fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f0 and f6 are not neighbors, fuel-levels f0 and f7 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f6 are not neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f2 and f6 are not neighbors, fuel-levels f2 and f7 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f3 and f7 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f4 and f7 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f5 and f4 are not neighbors, fuel-levels f6 and f1 are not neighbors, fuel-levels f6 and f2 are not neighbors, fuel-levels f6 and f3 are not neighbors, fuel-levels f6 and f4 are not neighbors, fuel-levels f7 and f2 are not neighbors, fuel-levels f7 and f3 are not neighbors, fuel-levels f7 and f4 are not neighbors, fuel-levels f7 and f5 are not neighbors, location l0 does not have a fuel-level of f2, location l0 does not have fuel f1, location l0 does not have fuel f6, location l0 does not have fuel f7, location l0 has a fuel-level of f3, location l1 and location l0 are connected, location l1 does not have a fuel-level of f5, location l1 does not have fuel f0, location l1 does not have fuel f2, location l1 does not have fuel f3, location l1 does not have fuel f4, location l1 does not have fuel f7, space s0 neighbors space s1, spaces s1 and s0 are not neighbors, there is a connection between locations l0 and l1, vehicle v0 does not contain cargo c4, vehicle v0 does not contain cargo c6, vehicle v0 does not have space s0, vehicle v0 has space s1, vehicle v1 does not contain cargo c4, vehicle v1 does not contain cargo c8, vehicle v1 does not contain space s0 and vehicle v1 has space s1, correct? Respond with True or False.", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel f5 exists in location l0, fuel f7 exists in location l1, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 is connected to location l1, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "68743ac2-edef-44a1-9311-be7803e45275", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, are all of the following properties: cargo c0 is located in vehicle v0, cargo c0 is not situated at location l1, cargo c0 is present at location l0, cargo c1 is located in vehicle v0, cargo c1 is not situated at location l1, cargo c1 is present at location l0, cargo c2 is in vehicle v1, cargo c2 is not in vehicle v0, cargo c2 is not situated at location l0, cargo c2 is situated at location l1, cargo c3 is not at location l0cargo c3 is not present at location l0, cargo c3 is not located in vehicle v0, cargo c3 is not situated at location l1, cargo c4 is at location l0, cargo c4 is in vehicle v0, cargo c4 is situated at location l1, cargo c5 is located in vehicle v1, cargo c5 is not situated at location l0, cargo c5 is present at location l1, cargo c6 is located in vehicle v0, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not situated at location l1, cargo c7 is located in vehicle v0, cargo c7 is not situated at location l0, cargo c7 is not situated at location l1, cargo c8 is in vehicle v1, cargo c8 is not at location l0cargo c8 is not present at location l0, cargo c8 is not situated at location l1, cargo v0 is not at location l0cargo v0 is not present at location l0, cargo v0 is present at location l1, cargo v1 is not at location l1cargo v1 is not present at location l1, cargo v1 is not situated at location l0, fuel f2 does not exist in location l0, fuel f2 does not exist in location l1, fuel f5 does not exist in location l0, fuel f5 exists in location l1, fuel f6 does not exist in location l1, fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f3, fuel level f0 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f2, fuel level f1 neighbors fuel level f3, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f3, fuel level f2 does not neighbour fuel level f6, fuel level f2 neighbors fuel level f4, fuel level f2 neighbors fuel level f7, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f4, fuel level f3 neighbors fuel level f0, fuel level f3 neighbors fuel level f1, fuel level f3 neighbors fuel level f5, fuel level f4 does not neighbour fuel level f2, fuel level f4 neighbors fuel level f1, fuel level f4 neighbors fuel level f3, fuel level f4 neighbors fuel level f6, fuel level f5 does not neighbour fuel level f2, fuel level f5 neighbors fuel level f1, fuel level f6 does not neighbour fuel level f2, fuel level f6 neighbors fuel level f1, fuel level f6 neighbors fuel level f5, fuel level f7 neighbors fuel level f0, fuel level f7 neighbors fuel level f2, fuel-levels f0 and f1 are neighbors, fuel-levels f0 and f4 are neighbors, fuel-levels f0 and f6 are neighbors, fuel-levels f0 and f7 are not neighbors, fuel-levels f1 and f4 are neighbors, fuel-levels f1 and f5 are neighbors, fuel-levels f1 and f6 are not neighbors, fuel-levels f1 and f7 are not neighbors, fuel-levels f2 and f1 are neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f3 and f6 are not neighbors, fuel-levels f3 and f7 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f4 and f7 are not neighbors, fuel-levels f5 and f0 are neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f5 and f4 are not neighbors, fuel-levels f5 and f6 are not neighbors, fuel-levels f5 and f7 are not neighbors, fuel-levels f6 and f0 are not neighbors, fuel-levels f6 and f3 are not neighbors, fuel-levels f6 and f4 are neighbors, fuel-levels f6 and f7 are not neighbors, fuel-levels f7 and f1 are neighbors, fuel-levels f7 and f3 are not neighbors, fuel-levels f7 and f4 are not neighbors, fuel-levels f7 and f5 are neighbors, fuel-levels f7 and f6 are neighbors, location l0 does not have a fuel-level of f0, location l0 does not have a fuel-level of f1, location l0 does not have a fuel-level of f3, location l0 does not have a fuel-level of f6, location l0 does not have a fuel-level of f7, location l0 has a fuel-level of f4, location l0 is not connected to location l1, location l1 and location l0 are connected, location l1 does not have a fuel-level of f0, location l1 does not have a fuel-level of f1, location l1 does not have a fuel-level of f3, location l1 does not have fuel f4, location l1 does not have fuel f7, spaces s0 and s1 are not neighbors, spaces s1 and s0 are not neighbors, vehicle v0 contains cargo c8, vehicle v0 does not contain cargo c5, vehicle v0 does not have space s0, vehicle v0 does not have space s1, vehicle v1 contains cargo c3, vehicle v1 contains cargo c4, vehicle v1 contains cargo c7, vehicle v1 does not contain cargo c0, vehicle v1 does not contain cargo c1, vehicle v1 does not contain cargo c6, vehicle v1 does not contain space s1 and vehicle v1 has space s0, correct? Respond with True or False.", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel f5 exists in location l0, fuel f7 exists in location l1, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 is connected to location l1, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "6d8d66ae-89a1-42b0-8383-7ac31376c2fe", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "cargo c0 is situated at location l0, cargo c1 is present at location l1, cargo c2 is at location l1, cargo c3 is situated at location l0, cargo c4 is situated at location l1, cargo c5 is situated at location l0, cargo c6 is situated at location l1, cargo c7 is situated at location l1, cargo c8 is at location l0, cargo v0 is present at location l1, cargo v1 is present at location l1, fuel level f0 neighbors fuel level f1, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f3, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f6, spaces s0 and s1 are neighbors, vehicle v0 contains space s1 and vehicle v1 has space s1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel f5 exists in location l0, fuel f7 exists in location l1, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 is connected to location l1, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "7997e0a0-b3bd-454a-a7de-5ced7d1f2c53", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "cargo c0 is not in vehicle v1, cargo c0 is not situated at location l1, cargo c1 is not at location l0cargo c1 is not present at location l0, cargo c1 is not in vehicle v0, cargo c1 is not located in vehicle v1, cargo c2 is not in vehicle v1, cargo c2 is not situated at location l0, cargo c3 is not situated at location l1, cargo c4 is not at location l0cargo c4 is not present at location l0, cargo c4 is not located in vehicle v0, cargo c4 is not located in vehicle v1, cargo c5 is not located in vehicle v0, cargo c5 is not situated at location l1, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not located in vehicle v0, cargo c7 is not located in vehicle v1, cargo c7 is not situated at location l0, cargo c8 is not at location l1cargo c8 is not present at location l1, cargo c8 is not located in vehicle v0, cargo v0 is not at location l0cargo v0 is not present at location l0, cargo v1 is not at location l0cargo v1 is not present at location l0, fuel f1 does not exist in location l1, fuel f2 does not exist in location l1, fuel f3 does not exist in location l1, fuel f4 does not exist in location l0, fuel f5 does not exist in location l0, fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f3, fuel level f0 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f6, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f6, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f7, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f7, fuel level f5 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f7, fuel level f6 does not neighbour fuel level f1, fuel level f7 does not neighbour fuel level f0, fuel level f7 does not neighbour fuel level f1, fuel level f7 does not neighbour fuel level f2, fuel level f7 does not neighbour fuel level f3, fuel level f7 does not neighbour fuel level f6, fuel-levels f0 and f5 are not neighbors, fuel-levels f0 and f6 are not neighbors, fuel-levels f0 and f7 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f7 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f2 and f7 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f3 and f6 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f4 and f6 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f4 are not neighbors, fuel-levels f6 and f0 are not neighbors, fuel-levels f6 and f2 are not neighbors, fuel-levels f6 and f3 are not neighbors, fuel-levels f6 and f4 are not neighbors, fuel-levels f6 and f5 are not neighbors, fuel-levels f7 and f4 are not neighbors, fuel-levels f7 and f5 are not neighbors, location l0 does not have a fuel-level of f0, location l0 does not have a fuel-level of f1, location l0 does not have a fuel-level of f6, location l0 does not have fuel f2, location l0 does not have fuel f7, location l1 does not have a fuel-level of f0, location l1 does not have a fuel-level of f5, location l1 does not have a fuel-level of f7, location l1 does not have fuel f4, space s1 does not neighbour space s0, vehicle v0 does not contain cargo c0, vehicle v0 does not contain cargo c2, vehicle v0 does not contain cargo c3, vehicle v0 does not contain cargo c7, vehicle v0 does not contain space s0, vehicle v1 does not contain cargo c3, vehicle v1 does not contain cargo c5, vehicle v1 does not contain cargo c6, vehicle v1 does not contain cargo c8 and vehicle v1 does not have space s0", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel f5 exists in location l0, fuel f7 exists in location l1, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 is connected to location l1, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "df9db031-2986-4503-85be-7a3e060722f9", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "cargo c0 is not in vehicle v0, cargo c0 is not located in vehicle v1, cargo c0 is not situated at location l1, cargo c1 is not in vehicle v1, cargo c1 is not situated at location l0, cargo c2 is not located in vehicle v1, cargo c2 is not situated at location l0, cargo c3 is not at location l1cargo c3 is not present at location l1, cargo c3 is not in vehicle v0, cargo c3 is not located in vehicle v1, cargo c4 is not in vehicle v1, cargo c4 is not situated at location l0, cargo c5 is not located in vehicle v1, cargo c5 is not situated at location l1, cargo c6 is not situated at location l0, cargo c7 is not located in vehicle v1, cargo c7 is not situated at location l0, cargo c8 is not at location l1cargo c8 is not present at location l1, cargo c8 is not located in vehicle v0, cargo v0 is not situated at location l0, cargo v1 is not situated at location l0, fuel f0 does not exist in location l0, fuel f4 does not exist in location l0, fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f6, fuel level f2 does not neighbour fuel level f1, fuel level f2 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f6, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f5, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f3, fuel level f4 does not neighbour fuel level f6, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f4, fuel level f5 does not neighbour fuel level f7, fuel level f6 does not neighbour fuel level f0, fuel level f6 does not neighbour fuel level f2, fuel level f6 does not neighbour fuel level f4, fuel level f7 does not neighbour fuel level f0, fuel level f7 does not neighbour fuel level f1, fuel level f7 does not neighbour fuel level f2, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f0 and f6 are not neighbors, fuel-levels f0 and f7 are not neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f7 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f2 and f7 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f3 and f6 are not neighbors, fuel-levels f3 and f7 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f7 are not neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f6 and f1 are not neighbors, fuel-levels f6 and f3 are not neighbors, fuel-levels f6 and f5 are not neighbors, fuel-levels f7 and f3 are not neighbors, fuel-levels f7 and f4 are not neighbors, fuel-levels f7 and f5 are not neighbors, fuel-levels f7 and f6 are not neighbors, location l0 does not have a fuel-level of f1, location l0 does not have a fuel-level of f2, location l0 does not have a fuel-level of f5, location l0 does not have a fuel-level of f6, location l0 does not have a fuel-level of f7, location l1 does not have a fuel-level of f0, location l1 does not have a fuel-level of f1, location l1 does not have a fuel-level of f4, location l1 does not have a fuel-level of f5, location l1 does not have a fuel-level of f7, location l1 does not have fuel f2, location l1 does not have fuel f3, space s1 does not neighbour space s0, vehicle v0 does not contain cargo c1, vehicle v0 does not contain cargo c2, vehicle v0 does not contain cargo c4, vehicle v0 does not contain cargo c5, vehicle v0 does not contain cargo c6, vehicle v0 does not contain cargo c7, vehicle v0 does not contain space s0, vehicle v1 does not contain cargo c6, vehicle v1 does not contain cargo c8 and vehicle v1 does not contain space s0", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel f5 exists in location l0, fuel f7 exists in location l1, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 is connected to location l1, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "6235c102-524d-4d85-9563-1033d9884908", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, are all of the following properties: cargo c0 is not at location l1cargo c0 is not present at location l1, cargo c0 is not located in vehicle v0, cargo c0 is situated at location l0, cargo c1 is at location l0, cargo c1 is not situated at location l1, cargo c2 is located in vehicle v0, cargo c2 is not located in vehicle v1, cargo c2 is not situated at location l0, cargo c2 is not situated at location l1, cargo c3 is at location l0, cargo c3 is not located in vehicle v0, cargo c3 is not situated at location l1, cargo c4 is not located in vehicle v1, cargo c4 is not situated at location l0, cargo c4 is present at location l1, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c5 is not in vehicle v1, cargo c5 is not located in vehicle v0, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c7 is not at location l0cargo c7 is not present at location l0, cargo c7 is not located in vehicle v0, cargo c7 is not located in vehicle v1, cargo c7 is situated at location l1, cargo c8 is not located in vehicle v0, cargo c8 is not located in vehicle v1, cargo c8 is not situated at location l1, cargo c8 is situated at location l0, cargo v0 is not situated at location l0, cargo v0 is present at location l1, cargo v1 is at location l1, cargo v1 is not situated at location l0, fuel f0 does not exist in location l1, fuel f1 does not exist in location l0, fuel f2 exists in location l0, fuel f3 does not exist in location l0, fuel f4 does not exist in location l0, fuel f4 does not exist in location l1, fuel f5 exists in location l1, fuel f6 does not exist in location l0, fuel f6 does not exist in location l1, fuel f7 does not exist in location l0, fuel level f0 does not neighbour fuel level f4, fuel level f0 does not neighbour fuel level f5, fuel level f0 does not neighbour fuel level f7, fuel level f0 neighbors fuel level f1, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f6, fuel level f2 does not neighbour fuel level f1, fuel level f2 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f6, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f6, fuel level f3 neighbors fuel level f4, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f7, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f4, fuel level f5 neighbors fuel level f6, fuel level f6 does not neighbour fuel level f5, fuel level f7 does not neighbour fuel level f2, fuel level f7 does not neighbour fuel level f3, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f6 are not neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f1 and f7 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f2 and f7 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f3 and f7 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f4 and f6 are not neighbors, fuel-levels f5 and f7 are not neighbors, fuel-levels f6 and f0 are not neighbors, fuel-levels f6 and f1 are not neighbors, fuel-levels f6 and f2 are not neighbors, fuel-levels f6 and f3 are not neighbors, fuel-levels f6 and f4 are not neighbors, fuel-levels f6 and f7 are neighbors, fuel-levels f7 and f0 are not neighbors, fuel-levels f7 and f1 are not neighbors, fuel-levels f7 and f4 are not neighbors, fuel-levels f7 and f5 are not neighbors, fuel-levels f7 and f6 are not neighbors, location l0 does not have a fuel-level of f0, location l0 does not have a fuel-level of f5, location l0 is connected to location l1, location l1 does not have a fuel-level of f1, location l1 does not have a fuel-level of f3, location l1 does not have fuel f2, location l1 does not have fuel f7, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s0 are not neighbors, vehicle v0 does not contain cargo c1, vehicle v0 does not contain cargo c4, vehicle v0 does not contain cargo c6, vehicle v0 does not contain space s1, vehicle v0 has space s0, vehicle v1 does not contain cargo c0, vehicle v1 does not contain cargo c1, vehicle v1 does not contain cargo c3, vehicle v1 does not contain cargo c6, vehicle v1 does not have space s0 and vehicle v1 has space s1, correct? Respond with True or False.", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel f5 exists in location l0, fuel f7 exists in location l1, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 is connected to location l1, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "133ea410-4ed0-4fb5-9b69-1acee3f2ddf0", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, are all of the following properties: cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c0 is not in vehicle v0, cargo c0 is not located in vehicle v1, cargo c0 is not situated at location l1, cargo c1 is at location l1, cargo c1 is in vehicle v0, cargo c1 is in vehicle v1, cargo c1 is situated at location l0, cargo c2 is located in vehicle v0, cargo c2 is located in vehicle v1, cargo c2 is not at location l1cargo c2 is not present at location l1, cargo c2 is not situated at location l0, cargo c3 is at location l1, cargo c3 is in vehicle v0, cargo c3 is situated at location l0, cargo c4 is located in vehicle v0, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c4 is not situated at location l0, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c5 is not in vehicle v1, cargo c5 is not located in vehicle v0, cargo c5 is present at location l0, cargo c6 is not at location l1cargo c6 is not present at location l1, cargo c6 is not in vehicle v1, cargo c6 is present at location l0, cargo c7 is located in vehicle v1, cargo c7 is not located in vehicle v0, cargo c7 is present at location l0, cargo c7 is situated at location l1, cargo c8 is in vehicle v0, cargo c8 is present at location l0, cargo c8 is present at location l1, cargo v0 is at location l1, cargo v0 is not situated at location l0, cargo v1 is not at location l1cargo v1 is not present at location l1, cargo v1 is not situated at location l0, fuel f1 exists in location l0, fuel f2 does not exist in location l0, fuel f4 does not exist in location l1, fuel f6 does not exist in location l0, fuel f6 exists in location l1, fuel level f0 does not neighbour fuel level f4, fuel level f0 neighbors fuel level f1, fuel level f0 neighbors fuel level f3, fuel level f0 neighbors fuel level f5, fuel level f1 neighbors fuel level f0, fuel level f1 neighbors fuel level f6, fuel level f1 neighbors fuel level f7, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f3, fuel level f2 does not neighbour fuel level f5, fuel level f3 neighbors fuel level f4, fuel level f3 neighbors fuel level f5, fuel level f3 neighbors fuel level f6, fuel level f4 does not neighbour fuel level f0, fuel level f4 neighbors fuel level f3, fuel level f4 neighbors fuel level f7, fuel level f5 does not neighbour fuel level f1, fuel level f5 neighbors fuel level f6, fuel level f6 does not neighbour fuel level f1, fuel level f6 does not neighbour fuel level f5, fuel level f6 neighbors fuel level f0, fuel level f6 neighbors fuel level f3, fuel level f6 neighbors fuel level f4, fuel level f6 neighbors fuel level f7, fuel level f7 neighbors fuel level f0, fuel level f7 neighbors fuel level f3, fuel level f7 neighbors fuel level f4, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f6 are not neighbors, fuel-levels f0 and f7 are not neighbors, fuel-levels f1 and f2 are not neighbors, fuel-levels f1 and f3 are neighbors, fuel-levels f1 and f4 are neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f2 and f1 are neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f2 and f6 are neighbors, fuel-levels f2 and f7 are not neighbors, fuel-levels f3 and f0 are neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f3 and f2 are neighbors, fuel-levels f3 and f7 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f5 are not neighbors, fuel-levels f4 and f6 are not neighbors, fuel-levels f5 and f0 are neighbors, fuel-levels f5 and f2 are neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f5 and f4 are neighbors, fuel-levels f5 and f7 are neighbors, fuel-levels f6 and f2 are not neighbors, fuel-levels f7 and f1 are neighbors, fuel-levels f7 and f2 are neighbors, fuel-levels f7 and f5 are neighbors, fuel-levels f7 and f6 are neighbors, location l0 does not have a fuel-level of f5, location l0 does not have a fuel-level of f7, location l0 does not have fuel f0, location l0 does not have fuel f3, location l0 has fuel f4, location l1 does not have a fuel-level of f1, location l1 does not have a fuel-level of f2, location l1 does not have a fuel-level of f7, location l1 does not have fuel f3, location l1 has fuel f0, location l1 has fuel f5, space s0 does not neighbour space s1, space s1 does not neighbour space s0, there is no connection between locations l0 and l1, there is no connection between locations l1 and l0, vehicle v0 does not contain cargo c6, vehicle v0 does not have space s0, vehicle v0 does not have space s1, vehicle v1 contains cargo c3, vehicle v1 does not contain cargo c4, vehicle v1 does not contain cargo c8, vehicle v1 does not have space s1 and vehicle v1 has space s0, correct? Respond with True or False.", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel f5 exists in location l0, fuel f7 exists in location l1, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 is connected to location l1, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "c31d9016-1fe0-4599-8caf-79c486b612ae", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "cargo c0 is situated at location l0, cargo c1 is situated at location l0, cargo c2 is in vehicle v0, cargo c3 is situated at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l1, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f2, location l1 and location l0 are connected, location l1 has a fuel-level of f5, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 has space s0 and vehicle v1 contains space s1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel f5 exists in location l0, fuel f7 exists in location l1, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 is connected to location l1, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "b6692d7d-0216-47fd-b3b8-e7907fffb2f8", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "cargo c0 is not at location l1cargo c0 is not present at location l1, cargo c0 is not in vehicle v1, cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c1 is not in vehicle v0, cargo c1 is not located in vehicle v1, cargo c2 is not at location l1cargo c2 is not present at location l1, cargo c2 is not located in vehicle v1, cargo c2 is not situated at location l0, cargo c3 is not at location l1cargo c3 is not present at location l1, cargo c3 is not located in vehicle v0, cargo c4 is not located in vehicle v1, cargo c4 is not situated at location l0, cargo c5 is not located in vehicle v0, cargo c5 is not situated at location l1, cargo c6 is not located in vehicle v0, cargo c6 is not located in vehicle v1, cargo c6 is not situated at location l0, cargo c7 is not in vehicle v0, cargo c7 is not in vehicle v1, cargo c7 is not situated at location l0, cargo c8 is not in vehicle v1, cargo c8 is not situated at location l1, cargo v0 is not situated at location l0, cargo v1 is not situated at location l0, fuel f2 does not exist in location l1, fuel f4 does not exist in location l0, fuel f4 does not exist in location l1, fuel f5 does not exist in location l0, fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f3, fuel level f0 does not neighbour fuel level f5, fuel level f0 does not neighbour fuel level f6, fuel level f1 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f6, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f6, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f6, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f3, fuel level f4 does not neighbour fuel level f6, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f7, fuel level f6 does not neighbour fuel level f5, fuel level f7 does not neighbour fuel level f0, fuel level f7 does not neighbour fuel level f1, fuel level f7 does not neighbour fuel level f6, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f7 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f1 and f7 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f2 and f7 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f3 and f7 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f7 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f5 and f4 are not neighbors, fuel-levels f6 and f0 are not neighbors, fuel-levels f6 and f1 are not neighbors, fuel-levels f6 and f2 are not neighbors, fuel-levels f6 and f3 are not neighbors, fuel-levels f6 and f4 are not neighbors, fuel-levels f7 and f2 are not neighbors, fuel-levels f7 and f3 are not neighbors, fuel-levels f7 and f4 are not neighbors, fuel-levels f7 and f5 are not neighbors, location l0 does not have a fuel-level of f0, location l0 does not have a fuel-level of f6, location l0 does not have fuel f1, location l0 does not have fuel f3, location l0 does not have fuel f7, location l1 does not have a fuel-level of f0, location l1 does not have a fuel-level of f1, location l1 does not have fuel f3, location l1 does not have fuel f6, location l1 does not have fuel f7, space s1 does not neighbour space s0, vehicle v0 does not contain cargo c0, vehicle v0 does not contain cargo c4, vehicle v0 does not contain cargo c8, vehicle v0 does not contain space s1, vehicle v1 does not contain cargo c3, vehicle v1 does not contain cargo c5 and vehicle v1 does not have space s0", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel f5 exists in location l0, fuel f7 exists in location l1, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 is connected to location l1, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "a0037927-f3cb-49fc-8499-a717523c4651", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "cargo c0 is not located in vehicle v0, cargo c0 is not located in vehicle v1, cargo c0 is not situated at location l1, cargo c1 is not in vehicle v0, cargo c1 is not located in vehicle v1, cargo c1 is not situated at location l1, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c2 is not in vehicle v1, cargo c2 is not situated at location l1, cargo c3 is not at location l1cargo c3 is not present at location l1, cargo c3 is not in vehicle v0, cargo c3 is not in vehicle v1, cargo c4 is not at location l0cargo c4 is not present at location l0, cargo c4 is not in vehicle v1, cargo c4 is not located in vehicle v0, cargo c5 is not in vehicle v0, cargo c5 is not located in vehicle v1, cargo c5 is not situated at location l1, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not located in vehicle v0, cargo c7 is not in vehicle v0, cargo c7 is not located in vehicle v1, cargo c7 is not situated at location l0, cargo c8 is not located in vehicle v0, cargo c8 is not situated at location l1, cargo v0 is not at location l0cargo v0 is not present at location l0, cargo v1 is not at location l0cargo v1 is not present at location l0, fuel f1 does not exist in location l1, fuel f3 does not exist in location l1, fuel f6 does not exist in location l0, fuel f6 does not exist in location l1, fuel level f0 does not neighbour fuel level f5, fuel level f0 does not neighbour fuel level f6, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f7, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f6, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f7, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f3, fuel level f4 does not neighbour fuel level f6, fuel level f4 does not neighbour fuel level f7, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f4, fuel level f6 does not neighbour fuel level f2, fuel level f6 does not neighbour fuel level f3, fuel level f6 does not neighbour fuel level f4, fuel level f6 does not neighbour fuel level f5, fuel level f7 does not neighbour fuel level f2, fuel level f7 does not neighbour fuel level f3, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f7 are not neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f1 and f6 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f2 and f7 are not neighbors, fuel-levels f3 and f6 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f5 and f7 are not neighbors, fuel-levels f6 and f0 are not neighbors, fuel-levels f6 and f1 are not neighbors, fuel-levels f7 and f0 are not neighbors, fuel-levels f7 and f1 are not neighbors, fuel-levels f7 and f4 are not neighbors, fuel-levels f7 and f5 are not neighbors, fuel-levels f7 and f6 are not neighbors, location l0 does not have a fuel-level of f0, location l0 does not have a fuel-level of f5, location l0 does not have fuel f1, location l0 does not have fuel f3, location l0 does not have fuel f4, location l0 does not have fuel f7, location l1 does not have a fuel-level of f2, location l1 does not have a fuel-level of f4, location l1 does not have a fuel-level of f7, location l1 does not have fuel f0, spaces s1 and s0 are not neighbors, vehicle v0 does not contain space s1, vehicle v1 does not contain cargo c6, vehicle v1 does not contain cargo c8 and vehicle v1 does not contain space s0", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel f5 exists in location l0, fuel f7 exists in location l1, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 is connected to location l1, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "9d013d4f-11cb-4dd8-8611-060240a3d3be", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, are all of the following properties: cargo c0 is not at location l1cargo c0 is not present at location l1, cargo c0 is not in vehicle v1, cargo c0 is not located in vehicle v0, cargo c0 is situated at location l0, cargo c1 is not in vehicle v1, cargo c1 is not situated at location l1, cargo c1 is present at location l0, cargo c2 is not at location l1cargo c2 is not present at location l1, cargo c2 is not in vehicle v0, cargo c2 is not located in vehicle v1, cargo c2 is situated at location l0, cargo c3 is at location l0, cargo c3 is not at location l1cargo c3 is not present at location l1, cargo c3 is not located in vehicle v0, cargo c3 is not located in vehicle v1, cargo c4 is in vehicle v0, cargo c4 is not at location l0cargo c4 is not present at location l0, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c4 is not in vehicle v1, cargo c5 is not located in vehicle v0, cargo c5 is not located in vehicle v1, cargo c5 is not situated at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c6 is not situated at location l0, cargo c7 is not situated at location l0, cargo c7 is situated at location l1, cargo c8 is not at location l1cargo c8 is not present at location l1, cargo c8 is not in vehicle v1, cargo c8 is situated at location l0, cargo v0 is not at location l1cargo v0 is not present at location l1, cargo v0 is present at location l0, cargo v1 is not at location l0cargo v1 is not present at location l0, cargo v1 is situated at location l1, fuel f1 does not exist in location l1, fuel f4 does not exist in location l0, fuel f7 does not exist in location l0, fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f7, fuel level f2 neighbors fuel level f3, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f6, fuel level f3 does not neighbour fuel level f7, fuel level f3 neighbors fuel level f4, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f4, fuel level f5 does not neighbour fuel level f7, fuel level f5 neighbors fuel level f6, fuel level f6 does not neighbour fuel level f3, fuel level f6 does not neighbour fuel level f5, fuel level f7 does not neighbour fuel level f0, fuel level f7 does not neighbour fuel level f1, fuel level f7 does not neighbour fuel level f2, fuel level f7 does not neighbour fuel level f4, fuel level f7 does not neighbour fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f6 are not neighbors, fuel-levels f0 and f7 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f1 and f6 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f2 and f6 are not neighbors, fuel-levels f2 and f7 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f4 and f6 are not neighbors, fuel-levels f4 and f7 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f6 and f0 are not neighbors, fuel-levels f6 and f1 are not neighbors, fuel-levels f6 and f2 are not neighbors, fuel-levels f6 and f4 are not neighbors, fuel-levels f6 and f7 are neighbors, fuel-levels f7 and f3 are not neighbors, fuel-levels f7 and f5 are not neighbors, location l0 and location l1 are connected, location l0 does not have a fuel-level of f0, location l0 does not have a fuel-level of f2, location l0 does not have a fuel-level of f5, location l0 does not have a fuel-level of f6, location l0 does not have fuel f3, location l0 has fuel f1, location l1 and location l0 are connected, location l1 does not have a fuel-level of f0, location l1 does not have a fuel-level of f2, location l1 does not have a fuel-level of f4, location l1 does not have a fuel-level of f6, location l1 does not have fuel f5, location l1 does not have fuel f7, location l1 has a fuel-level of f3, space s1 does not neighbour space s0, spaces s0 and s1 are neighbors, vehicle v0 does not contain cargo c1, vehicle v0 does not contain cargo c6, vehicle v0 does not contain cargo c7, vehicle v0 does not contain cargo c8, vehicle v0 does not contain space s1, vehicle v0 has space s0, vehicle v1 does not contain cargo c6, vehicle v1 does not contain cargo c7, vehicle v1 does not contain space s0 and vehicle v1 has space s1, correct? Respond with True or False.", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel f5 exists in location l0, fuel f7 exists in location l1, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 is connected to location l1, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "356dea70-8bdd-41ca-8869-239b686ff70a", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, are all of the following properties: cargo c0 is not situated at location l0, cargo c0 is not situated at location l1, cargo c1 is at location l0, cargo c1 is at location l1, cargo c1 is located in vehicle v0, cargo c2 is in vehicle v0, cargo c2 is not at location l1cargo c2 is not present at location l1, cargo c2 is not situated at location l0, cargo c3 is not at location l0cargo c3 is not present at location l0, cargo c3 is not at location l1cargo c3 is not present at location l1, cargo c3 is not in vehicle v1, cargo c4 is at location l0, cargo c4 is in vehicle v1, cargo c4 is not in vehicle v0, cargo c4 is present at location l1, cargo c5 is located in vehicle v1, cargo c5 is not situated at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c6 is not in vehicle v0, cargo c6 is not situated at location l0, cargo c7 is in vehicle v0, cargo c7 is in vehicle v1, cargo c7 is not at location l0cargo c7 is not present at location l0, cargo c7 is not at location l1cargo c7 is not present at location l1, cargo c8 is in vehicle v1, cargo c8 is located in vehicle v0, cargo c8 is not at location l0cargo c8 is not present at location l0, cargo c8 is present at location l1, cargo v0 is not at location l1cargo v0 is not present at location l1, cargo v0 is present at location l0, cargo v1 is present at location l0, cargo v1 is situated at location l1, fuel f0 does not exist in location l0, fuel f1 exists in location l1, fuel f2 exists in location l0, fuel f3 exists in location l0, fuel f4 exists in location l0, fuel f5 exists in location l1, fuel f7 does not exist in location l1, fuel level f0 does not neighbour fuel level f3, fuel level f0 does not neighbour fuel level f7, fuel level f0 neighbors fuel level f1, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f7, fuel level f1 neighbors fuel level f6, fuel level f2 does not neighbour fuel level f3, fuel level f2 does not neighbour fuel level f6, fuel level f2 neighbors fuel level f5, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f4, fuel level f3 neighbors fuel level f0, fuel level f3 neighbors fuel level f5, fuel level f3 neighbors fuel level f7, fuel level f4 does not neighbour fuel level f3, fuel level f4 neighbors fuel level f5, fuel level f4 neighbors fuel level f7, fuel level f5 does not neighbour fuel level f4, fuel level f5 neighbors fuel level f3, fuel level f5 neighbors fuel level f6, fuel level f6 does not neighbour fuel level f1, fuel level f7 does not neighbour fuel level f1, fuel level f7 neighbors fuel level f6, fuel-levels f0 and f2 are neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f5 are neighbors, fuel-levels f0 and f6 are not neighbors, fuel-levels f1 and f0 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f1 and f4 are neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f1 are neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f2 and f7 are neighbors, fuel-levels f3 and f6 are not neighbors, fuel-levels f4 and f0 are neighbors, fuel-levels f4 and f1 are neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f6 are not neighbors, fuel-levels f5 and f0 are neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f2 are neighbors, fuel-levels f5 and f7 are not neighbors, fuel-levels f6 and f0 are neighbors, fuel-levels f6 and f2 are not neighbors, fuel-levels f6 and f3 are neighbors, fuel-levels f6 and f4 are neighbors, fuel-levels f6 and f5 are not neighbors, fuel-levels f6 and f7 are not neighbors, fuel-levels f7 and f0 are neighbors, fuel-levels f7 and f2 are neighbors, fuel-levels f7 and f3 are not neighbors, fuel-levels f7 and f4 are neighbors, fuel-levels f7 and f5 are not neighbors, location l0 and location l1 are not connected, location l0 does not have fuel f6, location l0 does not have fuel f7, location l0 has a fuel-level of f1, location l0 has fuel f5, location l1 does not have a fuel-level of f2, location l1 does not have a fuel-level of f3, location l1 does not have a fuel-level of f4, location l1 has fuel f0, location l1 has fuel f6, space s0 neighbors space s1, spaces s1 and s0 are not neighbors, there is no connection between locations l1 and l0, vehicle v0 contains cargo c0, vehicle v0 contains cargo c5, vehicle v0 does not contain cargo c3, vehicle v0 does not have space s1, vehicle v0 has space s0, vehicle v1 does not contain cargo c0, vehicle v1 does not contain cargo c1, vehicle v1 does not contain cargo c2, vehicle v1 does not contain cargo c6, vehicle v1 has space s0 and vehicle v1 has space s1, correct? Respond with True or False.", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel f5 exists in location l0, fuel f7 exists in location l1, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 is connected to location l1, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "ff4469cd-aadd-40c9-8817-59583d4b69ba", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "cargo c0 is situated at location l0, cargo c1 is at location l0, cargo c2 is present at location l0, cargo c3 is at location l0, cargo c4 is in vehicle v0, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f3 neighbors fuel level f4, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 has fuel f1, location l0 is connected to location l1, location l1 has a fuel-level of f3, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 contains space s0 and vehicle v1 has space s1", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel f5 exists in location l0, fuel f7 exists in location l1, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 is connected to location l1, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "18e5c5db-960a-4bbf-a775-73d410b13ec5", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "cargo c0 is not at location l1cargo c0 is not present at location l1, cargo c0 is not in vehicle v0, cargo c0 is not located in vehicle v1, cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c1 is not located in vehicle v0, cargo c2 is not located in vehicle v1, cargo c2 is not situated at location l1, cargo c3 is not in vehicle v1, cargo c3 is not located in vehicle v0, cargo c3 is not situated at location l1, cargo c4 is not at location l0cargo c4 is not present at location l0, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c4 is not in vehicle v1, cargo c5 is not in vehicle v0, cargo c5 is not located in vehicle v1, cargo c5 is not situated at location l1, cargo c6 is not in vehicle v0, cargo c6 is not in vehicle v1, cargo c6 is not situated at location l0, cargo c7 is not located in vehicle v0, cargo c7 is not situated at location l0, cargo c8 is not at location l1cargo c8 is not present at location l1, cargo c8 is not in vehicle v0, cargo c8 is not located in vehicle v1, cargo v0 is not situated at location l1, cargo v1 is not situated at location l0, fuel f3 does not exist in location l0, fuel f7 does not exist in location l0, fuel f7 does not exist in location l1, fuel level f0 does not neighbour fuel level f3, fuel level f0 does not neighbour fuel level f6, fuel level f0 does not neighbour fuel level f7, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f6, fuel level f2 does not neighbour fuel level f7, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f6, fuel level f3 does not neighbour fuel level f7, fuel level f4 does not neighbour fuel level f6, fuel level f4 does not neighbour fuel level f7, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f7, fuel level f6 does not neighbour fuel level f0, fuel level f6 does not neighbour fuel level f1, fuel level f6 does not neighbour fuel level f4, fuel level f6 does not neighbour fuel level f5, fuel level f7 does not neighbour fuel level f2, fuel level f7 does not neighbour fuel level f3, fuel level f7 does not neighbour fuel level f4, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f1 and f6 are not neighbors, fuel-levels f1 and f7 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f5 and f4 are not neighbors, fuel-levels f6 and f2 are not neighbors, fuel-levels f6 and f3 are not neighbors, fuel-levels f7 and f0 are not neighbors, fuel-levels f7 and f1 are not neighbors, fuel-levels f7 and f5 are not neighbors, fuel-levels f7 and f6 are not neighbors, location l0 does not have a fuel-level of f2, location l0 does not have a fuel-level of f4, location l0 does not have fuel f0, location l0 does not have fuel f5, location l0 does not have fuel f6, location l1 does not have a fuel-level of f1, location l1 does not have a fuel-level of f5, location l1 does not have fuel f0, location l1 does not have fuel f2, location l1 does not have fuel f4, location l1 does not have fuel f6, spaces s1 and s0 are not neighbors, vehicle v0 does not contain cargo c2, vehicle v0 does not have space s1, vehicle v1 does not contain cargo c1, vehicle v1 does not contain cargo c7 and vehicle v1 does not contain space s0", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel f5 exists in location l0, fuel f7 exists in location l1, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 is connected to location l1, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "e79c43c4-7d39-4fe2-9a43-fab396d480e3", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "cargo c0 is not in vehicle v1, cargo c0 is not situated at location l1, cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c1 is not in vehicle v0, cargo c2 is not situated at location l1, cargo c3 is not situated at location l1, cargo c4 is not at location l0cargo c4 is not present at location l0, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c5 is not in vehicle v1, cargo c5 is not located in vehicle v0, cargo c5 is not situated at location l1, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not in vehicle v0, cargo c7 is not at location l0cargo c7 is not present at location l0, cargo c7 is not in vehicle v0, cargo c8 is not at location l1cargo c8 is not present at location l1, cargo c8 is not in vehicle v1, cargo c8 is not located in vehicle v0, cargo v0 is not situated at location l1, cargo v1 is not situated at location l0, fuel f0 does not exist in location l0, fuel f2 does not exist in location l0, fuel f4 does not exist in location l0, fuel f6 does not exist in location l1, fuel level f0 does not neighbour fuel level f4, fuel level f0 does not neighbour fuel level f5, fuel level f0 does not neighbour fuel level f6, fuel level f0 does not neighbour fuel level f7, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f7, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f1, fuel level f2 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f7, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f6, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f7, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f4, fuel level f6 does not neighbour fuel level f0, fuel level f6 does not neighbour fuel level f1, fuel level f6 does not neighbour fuel level f4, fuel level f6 does not neighbour fuel level f5, fuel level f7 does not neighbour fuel level f1, fuel level f7 does not neighbour fuel level f4, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f3 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f1 and f6 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f2 and f6 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f3 and f7 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f4 and f6 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f7 are not neighbors, fuel-levels f6 and f2 are not neighbors, fuel-levels f6 and f3 are not neighbors, fuel-levels f7 and f0 are not neighbors, fuel-levels f7 and f2 are not neighbors, fuel-levels f7 and f3 are not neighbors, fuel-levels f7 and f5 are not neighbors, fuel-levels f7 and f6 are not neighbors, location l0 does not have a fuel-level of f3, location l0 does not have fuel f5, location l0 does not have fuel f6, location l0 does not have fuel f7, location l1 does not have a fuel-level of f0, location l1 does not have a fuel-level of f5, location l1 does not have fuel f1, location l1 does not have fuel f2, location l1 does not have fuel f4, location l1 does not have fuel f7, spaces s1 and s0 are not neighbors, vehicle v0 does not contain cargo c0, vehicle v0 does not contain cargo c2, vehicle v0 does not contain cargo c3, vehicle v0 does not contain space s1, vehicle v1 does not contain cargo c1, vehicle v1 does not contain cargo c2, vehicle v1 does not contain cargo c3, vehicle v1 does not contain cargo c4, vehicle v1 does not contain cargo c6, vehicle v1 does not contain cargo c7 and vehicle v1 does not contain space s0", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel f5 exists in location l0, fuel f7 exists in location l1, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 is connected to location l1, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "afed0934-c41a-4eba-a74a-8ea6c107bdbb", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, are all of the following properties: cargo c0 is not at location l1cargo c0 is not present at location l1, cargo c0 is not located in vehicle v0, cargo c0 is not located in vehicle v1, cargo c0 is situated at location l0, cargo c1 is at location l0, cargo c1 is not located in vehicle v0, cargo c1 is not located in vehicle v1, cargo c1 is not situated at location l1, cargo c2 is not located in vehicle v0, cargo c2 is not located in vehicle v1, cargo c2 is not situated at location l1, cargo c2 is situated at location l0, cargo c3 is not at location l1cargo c3 is not present at location l1, cargo c3 is not in vehicle v0, cargo c3 is not in vehicle v1, cargo c3 is present at location l0, cargo c4 is at location l0, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c4 is not in vehicle v0, cargo c4 is not in vehicle v1, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c5 is not in vehicle v0, cargo c5 is not in vehicle v1, cargo c5 is situated at location l0, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not at location l1cargo c6 is not present at location l1, cargo c7 is not at location l0cargo c7 is not present at location l0, cargo c7 is not in vehicle v1, cargo c7 is not located in vehicle v0, cargo c7 is present at location l1, cargo c8 is at location l0, cargo c8 is not at location l1cargo c8 is not present at location l1, cargo c8 is not in vehicle v0, cargo c8 is not in vehicle v1, cargo v0 is not situated at location l1, cargo v0 is situated at location l0, cargo v1 is not at location l0cargo v1 is not present at location l0, cargo v1 is present at location l1, fuel f1 does not exist in location l0, fuel f2 exists in location l1, fuel f3 does not exist in location l0, fuel f6 does not exist in location l0, fuel f7 does not exist in location l0, fuel f7 does not exist in location l1, fuel level f0 does not neighbour fuel level f3, fuel level f0 does not neighbour fuel level f6, fuel level f0 neighbors fuel level f1, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f6, fuel level f1 does not neighbour fuel level f7, fuel level f1 neighbors fuel level f2, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f7, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f6, fuel level f3 does not neighbour fuel level f7, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f5 does not neighbour fuel level f4, fuel level f5 does not neighbour fuel level f7, fuel level f5 neighbors fuel level f6, fuel level f6 does not neighbour fuel level f0, fuel level f6 does not neighbour fuel level f3, fuel level f6 does not neighbour fuel level f4, fuel level f7 does not neighbour fuel level f0, fuel level f7 does not neighbour fuel level f1, fuel level f7 does not neighbour fuel level f3, fuel level f7 does not neighbour fuel level f5, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f0 and f7 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f2 and f6 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f4 and f6 are not neighbors, fuel-levels f4 and f7 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f6 and f1 are not neighbors, fuel-levels f6 and f2 are not neighbors, fuel-levels f6 and f5 are not neighbors, fuel-levels f6 and f7 are neighbors, fuel-levels f7 and f2 are not neighbors, fuel-levels f7 and f4 are not neighbors, fuel-levels f7 and f6 are not neighbors, location l0 does not have a fuel-level of f4, location l0 does not have a fuel-level of f5, location l0 does not have fuel f2, location l0 has a fuel-level of f0, location l0 is connected to location l1, location l1 does not have a fuel-level of f1, location l1 does not have a fuel-level of f3, location l1 does not have a fuel-level of f5, location l1 does not have fuel f0, location l1 does not have fuel f4, location l1 does not have fuel f6, location l1 is connected to location l0, space s0 neighbors space s1, space s1 does not neighbour space s0, vehicle v0 contains cargo c6, vehicle v0 does not contain space s1, vehicle v0 has space s0, vehicle v1 does not contain cargo c6, vehicle v1 does not contain space s0 and vehicle v1 has space s1, correct? Respond with True or False.", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel f5 exists in location l0, fuel f7 exists in location l1, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 is connected to location l1, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "f8eba891-def7-4bf7-9944-9999aee0fccc", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, are all of the following properties: cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c0 is not in vehicle v1, cargo c0 is not located in vehicle v0, cargo c0 is situated at location l1, cargo c1 is not at location l0cargo c1 is not present at location l0, cargo c1 is not in vehicle v1, cargo c1 is present at location l1, cargo c2 is at location l1, cargo c2 is located in vehicle v1, cargo c2 is not located in vehicle v0, cargo c2 is not situated at location l0, cargo c3 is in vehicle v1, cargo c3 is present at location l0, cargo c3 is present at location l1, cargo c4 is not in vehicle v0, cargo c4 is not in vehicle v1, cargo c4 is not situated at location l0, cargo c4 is not situated at location l1, cargo c5 is at location l0, cargo c5 is not located in vehicle v0, cargo c5 is not located in vehicle v1, cargo c5 is situated at location l1, cargo c6 is in vehicle v1, cargo c6 is not located in vehicle v0, cargo c6 is present at location l1, cargo c6 is situated at location l0, cargo c7 is at location l0, cargo c7 is located in vehicle v0, cargo c7 is located in vehicle v1, cargo c7 is situated at location l1, cargo c8 is located in vehicle v1, cargo c8 is not at location l0cargo c8 is not present at location l0, cargo c8 is not situated at location l1, cargo v0 is at location l1, cargo v0 is present at location l0, cargo v1 is present at location l1, cargo v1 is situated at location l0, fuel f0 does not exist in location l0, fuel f1 does not exist in location l0, fuel f1 exists in location l1, fuel f3 exists in location l0, fuel f4 does not exist in location l0, fuel level f0 does not neighbour fuel level f1, fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f4, fuel level f0 neighbors fuel level f3, fuel level f0 neighbors fuel level f6, fuel level f1 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f6, fuel level f1 neighbors fuel level f0, fuel level f2 does not neighbour fuel level f6, fuel level f2 neighbors fuel level f0, fuel level f2 neighbors fuel level f1, fuel level f2 neighbors fuel level f5, fuel level f3 neighbors fuel level f4, fuel level f3 neighbors fuel level f6, fuel level f4 does not neighbour fuel level f7, fuel level f4 neighbors fuel level f5, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f4, fuel level f5 neighbors fuel level f0, fuel level f5 neighbors fuel level f1, fuel level f5 neighbors fuel level f7, fuel level f6 does not neighbour fuel level f2, fuel level f6 does not neighbour fuel level f5, fuel level f6 neighbors fuel level f0, fuel level f6 neighbors fuel level f7, fuel level f7 does not neighbour fuel level f3, fuel level f7 does not neighbour fuel level f4, fuel level f7 does not neighbour fuel level f6, fuel level f7 neighbors fuel level f0, fuel level f7 neighbors fuel level f5, fuel-levels f0 and f5 are not neighbors, fuel-levels f0 and f7 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f1 and f3 are neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f1 and f7 are not neighbors, fuel-levels f2 and f3 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f2 and f7 are neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f1 are neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f3 and f5 are neighbors, fuel-levels f3 and f7 are neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f1 are neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f4 and f6 are not neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f5 and f6 are not neighbors, fuel-levels f6 and f1 are not neighbors, fuel-levels f6 and f3 are not neighbors, fuel-levels f6 and f4 are not neighbors, fuel-levels f7 and f1 are not neighbors, fuel-levels f7 and f2 are neighbors, location l0 does not have fuel f2, location l0 does not have fuel f6, location l0 has a fuel-level of f5, location l0 has a fuel-level of f7, location l0 is not connected to location l1, location l1 does not have a fuel-level of f5, location l1 does not have a fuel-level of f6, location l1 does not have a fuel-level of f7, location l1 does not have fuel f0, location l1 does not have fuel f3, location l1 does not have fuel f4, location l1 has a fuel-level of f2, location l1 is not connected to location l0, space s1 neighbors space s0, spaces s0 and s1 are not neighbors, vehicle v0 contains cargo c3, vehicle v0 contains cargo c8, vehicle v0 does not contain cargo c1, vehicle v0 does not have space s0, vehicle v0 does not have space s1, vehicle v1 contains space s0 and vehicle v1 does not have space s1, correct? Respond with True or False.", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel f5 exists in location l0, fuel f7 exists in location l1, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 is connected to location l1, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "a8408a51-0f54-4007-a869-a1ad3ea32a95", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "cargo c0 is present at location l0, cargo c1 is situated at location l0, cargo c2 is at location l0, cargo c3 is situated at location l0, cargo c4 is present at location l0, cargo c5 is situated at location l0, cargo c6 is in vehicle v0, cargo c7 is at location l1, cargo c8 is at location l0, cargo v0 is present at location l0, cargo v1 is situated at location l1, fuel f0 exists in location l0, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l1 has fuel f2, location l1 is connected to location l0, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 has space s0 and vehicle v1 has space s1", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel f5 exists in location l0, fuel f7 exists in location l1, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 is connected to location l1, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "0b5ac5ce-37c0-4786-8992-d0d31b0abc4a", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "cargo c0 is not at location l1cargo c0 is not present at location l1, cargo c0 is not located in vehicle v0, cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c1 is not located in vehicle v1, cargo c2 is not at location l1cargo c2 is not present at location l1, cargo c2 is not located in vehicle v1, cargo c3 is not in vehicle v0, cargo c3 is not situated at location l1, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c4 is not in vehicle v1, cargo c4 is not located in vehicle v0, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c5 is not in vehicle v0, cargo c5 is not in vehicle v1, cargo c6 is not at location l1cargo c6 is not present at location l1, cargo c6 is not located in vehicle v1, cargo c6 is not situated at location l0, cargo c7 is not at location l0cargo c7 is not present at location l0, cargo c7 is not located in vehicle v1, cargo c8 is not in vehicle v1, cargo c8 is not situated at location l1, cargo v0 is not situated at location l1, cargo v1 is not situated at location l0, fuel f0 does not exist in location l1, fuel f1 does not exist in location l1, fuel f3 does not exist in location l0, fuel f4 does not exist in location l0, fuel f5 does not exist in location l0, fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f3, fuel level f0 does not neighbour fuel level f4, fuel level f0 does not neighbour fuel level f7, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f6, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f7, fuel level f3 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f6, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f7, fuel level f6 does not neighbour fuel level f0, fuel level f6 does not neighbour fuel level f1, fuel level f6 does not neighbour fuel level f2, fuel level f6 does not neighbour fuel level f3, fuel level f6 does not neighbour fuel level f5, fuel level f7 does not neighbour fuel level f0, fuel level f7 does not neighbour fuel level f1, fuel level f7 does not neighbour fuel level f2, fuel level f7 does not neighbour fuel level f4, fuel-levels f0 and f5 are not neighbors, fuel-levels f0 and f6 are not neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f1 and f7 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f2 and f6 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f3 and f6 are not neighbors, fuel-levels f3 and f7 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f4 and f7 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f5 and f4 are not neighbors, fuel-levels f6 and f4 are not neighbors, fuel-levels f7 and f3 are not neighbors, fuel-levels f7 and f5 are not neighbors, fuel-levels f7 and f6 are not neighbors, location l0 does not have fuel f1, location l0 does not have fuel f2, location l0 does not have fuel f6, location l0 does not have fuel f7, location l1 does not have a fuel-level of f3, location l1 does not have a fuel-level of f4, location l1 does not have a fuel-level of f6, location l1 does not have a fuel-level of f7, location l1 does not have fuel f5, spaces s1 and s0 are not neighbors, vehicle v0 does not contain cargo c1, vehicle v0 does not contain cargo c2, vehicle v0 does not contain cargo c7, vehicle v0 does not contain cargo c8, vehicle v0 does not have space s1, vehicle v1 does not contain cargo c0, vehicle v1 does not contain cargo c3 and vehicle v1 does not have space s0", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel f5 exists in location l0, fuel f7 exists in location l1, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 is connected to location l1, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "97a86157-d6fa-4909-8a18-ec73ad64d6c7", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "cargo c0 is not in vehicle v0, cargo c0 is not situated at location l1, cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c2 is not in vehicle v0, cargo c2 is not in vehicle v1, cargo c2 is not situated at location l1, cargo c3 is not at location l1cargo c3 is not present at location l1, cargo c3 is not located in vehicle v0, cargo c3 is not located in vehicle v1, cargo c4 is not located in vehicle v1, cargo c4 is not situated at location l1, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c5 is not located in vehicle v1, cargo c6 is not at location l1cargo c6 is not present at location l1, cargo c6 is not situated at location l0, cargo c7 is not located in vehicle v0, cargo c7 is not located in vehicle v1, cargo c7 is not situated at location l0, cargo c8 is not in vehicle v0, cargo c8 is not in vehicle v1, cargo c8 is not situated at location l1, cargo v0 is not at location l1cargo v0 is not present at location l1, cargo v1 is not at location l0cargo v1 is not present at location l0, fuel f4 does not exist in location l1, fuel f5 does not exist in location l1, fuel f7 does not exist in location l0, fuel f7 does not exist in location l1, fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f4, fuel level f0 does not neighbour fuel level f5, fuel level f0 does not neighbour fuel level f7, fuel level f1 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f6, fuel level f1 does not neighbour fuel level f7, fuel level f2 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f7, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f5, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f6, fuel level f4 does not neighbour fuel level f7, fuel level f5 does not neighbour fuel level f1, fuel level f6 does not neighbour fuel level f0, fuel level f6 does not neighbour fuel level f1, fuel level f6 does not neighbour fuel level f2, fuel level f6 does not neighbour fuel level f3, fuel level f7 does not neighbour fuel level f0, fuel level f7 does not neighbour fuel level f2, fuel level f7 does not neighbour fuel level f3, fuel level f7 does not neighbour fuel level f4, fuel level f7 does not neighbour fuel level f5, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f6 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f2 and f6 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f3 and f6 are not neighbors, fuel-levels f3 and f7 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f5 and f4 are not neighbors, fuel-levels f5 and f7 are not neighbors, fuel-levels f6 and f4 are not neighbors, fuel-levels f6 and f5 are not neighbors, fuel-levels f7 and f1 are not neighbors, fuel-levels f7 and f6 are not neighbors, location l0 does not have a fuel-level of f2, location l0 does not have a fuel-level of f3, location l0 does not have a fuel-level of f5, location l0 does not have a fuel-level of f6, location l0 does not have fuel f1, location l0 does not have fuel f4, location l1 does not have a fuel-level of f1, location l1 does not have a fuel-level of f3, location l1 does not have a fuel-level of f6, location l1 does not have fuel f0, space s1 does not neighbour space s0, vehicle v0 does not contain cargo c1, vehicle v0 does not contain cargo c4, vehicle v0 does not contain cargo c5, vehicle v0 does not contain space s1, vehicle v1 does not contain cargo c0, vehicle v1 does not contain cargo c1, vehicle v1 does not contain cargo c6 and vehicle v1 does not have space s0", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is at location l1, cargo c2 is at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is at location l0, cargo c6 is at location l1, cargo c7 is at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is at location l1, fuel f5 exists in location l0, fuel f7 exists in location l1, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 is connected to location l1, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "eec9bf16-14ac-4ed7-b1a5-076103782606", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is at location l1, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel f7 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has fuel f5, location l1 is connected to location l0, spaces s0 and s1 are neighbors, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "0af62505-4971-4262-bd12-159b0eb8c3e0", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: at location l1, cargo c8 is loaded in vehicle v0 with spaces s1 and s0. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is at location l1, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel f7 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has fuel f5, location l1 is connected to location l0, spaces s0 and s1 are neighbors, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "60828813-d8e3-465e-8daf-33b326701921", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 1 the following actions are planned to be performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1. Is the action: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 executable at step 1, True or False?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is at location l1, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel f7 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has fuel f5, location l1 is connected to location l0, spaces s0 and s1 are neighbors, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "1f06e6ba-e192-460d-91b9-4f14149456f0", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 1 the following actions are planned to be performed: cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1. Is the action: cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 executable at step 1, True or False?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is at location l1, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel f7 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has fuel f5, location l1 is connected to location l0, spaces s0 and s1 are neighbors, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "5230e3d9-ff54-4dd2-bd8b-d444a0f50d23", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is at location l1, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel f7 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has fuel f5, location l1 is connected to location l0, spaces s0 and s1 are neighbors, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "d9b1f118-5598-41d3-981d-961d1178fe3c", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v1 moves to location l1 from location l0 that has fuel level f7 and f5 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "vehicle v1 moves to location l1 from location l0 that has fuel level f7 and f5", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is at location l1, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel f7 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has fuel f5, location l1 is connected to location l0, spaces s0 and s1 are neighbors, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "95cbdbc6-9131-4fc3-a4b4-6ac90fcf89a4", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c1 is loaded in vehicle v1 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l1, cargo c2 is loaded in vehicle v1 with spaces s1 and s0, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c7 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c0 is loaded in vehicle v1 with spaces s1 and s0, cargo c6 is loaded in vehicle v1 with space s1 and space s0 at location l1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c4 is loaded in vehicle v1 with spaces s1 and s0, cargo c7 is loaded in vehicle v1 with space s1 and space s0 at location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v1 moves from location l1 which has fuel-levels f7 and f6 to location l0", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is at location l1, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel f7 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has fuel f5, location l1 is connected to location l0, spaces s0 and s1 are neighbors, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "c609ae61-96da-4035-bd17-e8ad884eb43a", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "vehicle v0 moves from location l0 which has fuel-levels f1 and f3 to location l1, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f7 and f2, vehicle v1 moves from location l1 which has fuel-levels f6 and f5 to location l0, vehicle v1 moves to location l0 from location l1 that has fuel level f6 and f0, cargo c8 is unloaded from vehicle v1 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f3, cargo c0 is loaded in vehicle v1 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f4 to location l1, vehicle v1 moves from location l1 which has fuel-levels f4 and f0 to location l0, at location l0, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, cargo c0 is loaded in vehicle v1 with space s0 and space s1 at location l0, cargo c3 is loaded in vehicle v1 with space s1 and space s0 at location l0, vehicle v0 moves from location l1 which has fuel-levels f0 and f7 to location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f3, at location l0, cargo c4 is loaded in vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f0, cargo c6 is unloaded from vehicle v1 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f0 and f6 to location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f5 and f7, cargo c7 is loaded in vehicle v1 with space s0 and space s1 at location l1, vehicle v1 moves from location l1 which has fuel-levels f5 and f1 to location l0, vehicle v1 moves from location l1 which has fuel-levels f3 and f6 to location l0, vehicle v1 moves to location l0 from location l1 that has fuel level f4 and f7, vehicle v1 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c0 is loaded in vehicle v1 with space s0 and space s1 at location l1, vehicle v1 moves from location l0 which has fuel-levels f2 and f1 to location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f1, vehicle v1 moves from location l0 which has fuel-levels f7 and f5 to location l1, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f5, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f1, at location l0, cargo c6 is loaded in vehicle v1 with spaces s1 and s0, at location l1, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f4 and f7 to location l0, vehicle v1 moves to location l1 from location l0 that has fuel level f6 and f4, vehicle v1 moves from location l1 which has fuel-levels f0 and f7 to location l0, at location l1, cargo c4 is loaded in vehicle v0 with spaces s0 and s1, vehicle v1 moves to location l1 from location l0 that has fuel level f2 and f7, vehicle v1 moves to location l0 from location l1 that has fuel level f4 and f2, at location l1, cargo c8 is loaded in vehicle v1 with spaces s0 and s1, vehicle v1 moves to location l1 from location l0 that has fuel level f0 and f6, vehicle v1 moves from location l0 which has fuel-levels f2 and f4 to location l1, vehicle v1 moves from location l0 which has fuel-levels f1 and f4 to location l1, vehicle v1 moves from location l1 which has fuel-levels f3 and f2 to location l0, vehicle v1 moves to location l1 from location l0 that has fuel level f0 and f2, at location l1, cargo c5 is loaded in vehicle v0 with spaces s1 and s0, vehicle v1 moves from location l0 which has fuel-levels f5 and f6 to location l1, vehicle v0 moves from location l0 which has fuel-levels f0 and f5 to location l1, vehicle v1 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l1, cargo c0 is loaded in vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is unloaded from vehicle v1 with spaces s0 and s1, at location l0, cargo c0 is unloaded from vehicle v1 with spaces s0 and s1, cargo c5 is unloaded from vehicle v1 with space s0 and space s1 at location l0, vehicle v0 moves from location l1 which has fuel-levels f7 and f5 to location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f7 and f0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f0, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f4, vehicle v1 moves to location l1 from location l0 that has fuel level f7 and f3, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v1 moves to location l1 from location l0 that has fuel level f0 and f1, at location l1, cargo c3 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f0, vehicle v1 moves from location l0 which has fuel-levels f6 and f1 to location l1, vehicle v1 moves from location l1 which has fuel-levels f7 and f2 to location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f7, at location l0, cargo c1 is unloaded from vehicle v1 with spaces s1 and s0, vehicle v1 moves to location l0 from location l1 that has fuel level f0 and f3, vehicle v0 moves from location l1 which has fuel-levels f4 and f5 to location l0, vehicle v0 moves from location l1 which has fuel-levels f6 and f2 to location l0, vehicle v0 moves from location l0 which has fuel-levels f0 and f4 to location l1, vehicle v1 moves to location l0 from location l1 that has fuel level f1 and f4, at location l1, cargo c5 is loaded in vehicle v1 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f5, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f0, vehicle v0 moves from location l1 which has fuel-levels f5 and f1 to location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f7 and f4, vehicle v0 moves from location l0 which has fuel-levels f6 and f7 to location l1, cargo c6 is loaded in vehicle v0 with space s0 and space s1 at location l0, vehicle v1 moves to location l1 from location l0 that has fuel level f5 and f1, at location l0, cargo c5 is loaded in vehicle v1 with spaces s0 and s1, vehicle v1 moves to location l1 from location l0 that has fuel level f0 and f7, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f2, vehicle v0 moves from location l0 which has fuel-levels f4 and f6 to location l1, vehicle v1 moves from location l0 which has fuel-levels f4 and f1 to location l1, vehicle v0 moves from location l0 which has fuel-levels f3 and f1 to location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f4 and f7, vehicle v0 moves to location l1 from location l0 that has fuel level f0 and f3, vehicle v1 moves from location l1 which has fuel-levels f1 and f2 to location l0, at location l0, cargo c6 is loaded in vehicle v1 with spaces s0 and s1, cargo c7 is unloaded from vehicle v1 with space s1 and space s0 at location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s0 at location l0, cargo c3 is unloaded from vehicle v1 with space s1 and space s0 at location l1, vehicle v1 moves to location l0 from location l1 that has fuel level f3 and f5, vehicle v0 moves from location l1 which has fuel-levels f4 and f6 to location l0, vehicle v1 moves from location l1 which has fuel-levels f5 and f7 to location l0, vehicle v1 moves from location l1 which has fuel-levels f2 and f3 to location l0, vehicle v1 moves from location l1 which has fuel-levels f3 and f7 to location l0, at location l0, cargo c4 is loaded in vehicle v1 with spaces s1 and s0, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f6 and f5, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f7, cargo c8 is unloaded from vehicle v1 with space s1 and space s0 at location l0, at location l0, cargo c7 is loaded in vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f5 to location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f0 and f4, cargo c8 is loaded in vehicle v1 with space s1 and space s0 at location l0, vehicle v0 moves from location l1 which has fuel-levels f1 and f3 to location l0, vehicle v1 moves to location l1 from location l0 that has fuel level f5 and f3, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f7, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, cargo c0 is unloaded from vehicle v0 with space s1 and space s0 at location l1, vehicle v1 moves from location l0 which has fuel-levels f2 and f6 to location l1, vehicle v1 moves from location l0 which has fuel-levels f7 and f6 to location l1, at location l1, cargo c2 is unloaded from vehicle v1 with spaces s1 and s0, cargo c6 is loaded in vehicle v0 with space s0 and space s1 at location l1, vehicle v1 moves to location l0 from location l1 that has fuel level f1 and f6, vehicle v1 moves from location l1 which has fuel-levels f4 and f6 to location l0, cargo c5 is loaded in vehicle v1 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f7 and f5, vehicle v1 moves to location l1 from location l0 that has fuel level f7 and f0, vehicle v0 moves from location l0 which has fuel-levels f5 and f1 to location l1, vehicle v1 moves from location l1 which has fuel-levels f6 and f2 to location l0, vehicle v1 moves from location l0 which has fuel-levels f3 and f0 to location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f5, vehicle v1 moves to location l0 from location l1 that has fuel level f6 and f4, vehicle v1 moves to location l1 from location l0 that has fuel level f4 and f0, vehicle v0 moves from location l1 which has fuel-levels f5 and f7 to location l0, cargo c0 is loaded in vehicle v0 with space s0 and space s1 at location l0, vehicle v1 moves to location l0 from location l1 that has fuel level f1 and f7, vehicle v0 moves from location l1 which has fuel-levels f5 and f0 to location l0, cargo c5 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l1 which has fuel-levels f2 and f3 to location l0, at location l0, cargo c2 is unloaded from vehicle v1 with spaces s0 and s1, vehicle v1 moves to location l0 from location l1 that has fuel level f7 and f1, at location l1, cargo c8 is unloaded from vehicle v1 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f6, at location l0, cargo c3 is loaded in vehicle v1 with spaces s0 and s1, cargo c0 is unloaded from vehicle v1 with space s1 and space s0 at location l1, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, vehicle v1 moves from location l1 which has fuel-levels f5 and f3 to location l0, at location l1, cargo c8 is loaded in vehicle v0 with spaces s0 and s1, vehicle v1 moves to location l1 from location l0 that has fuel level f1 and f6, cargo c3 is loaded in vehicle v1 with space s0 and space s1 at location l1, cargo c5 is loaded in vehicle v1 with space s1 and space s0 at location l0, cargo c7 is unloaded from vehicle v0 with space s1 and space s0 at location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, cargo c3 is unloaded from vehicle v1 with space s0 and space s1 at location l0, at location l1, cargo c6 is unloaded from vehicle v1 with spaces s0 and s1, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v1 with space s1 and space s0 at location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f4, cargo c2 is loaded in vehicle v1 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f0, at location l1, cargo c7 is unloaded from vehicle v1 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f0 and f2, at location l0, cargo c7 is loaded in vehicle v0 with spaces s1 and s0, cargo c5 is unloaded from vehicle v1 with space s1 and space s0 at location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f7 and f3, cargo c3 is unloaded from vehicle v1 with space s0 and space s1 at location l1, at location l0, cargo c1 is loaded in vehicle v1 with spaces s0 and s1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c7 is loaded in vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f0 and f2, vehicle v1 moves to location l1 from location l0 that has fuel level f3 and f4, vehicle v1 moves from location l1 which has fuel-levels f5 and f2 to location l0, vehicle v0 moves from location l0 which has fuel-levels f5 and f2 to location l1, vehicle v1 moves from location l0 which has fuel-levels f1 and f2 to location l1, vehicle v1 moves from location l1 which has fuel-levels f7 and f4 to location l0, cargo c6 is unloaded from vehicle v0 with space s1 and space s0 at location l0, cargo c2 is loaded in vehicle v0 with space s0 and space s1 at location l0, vehicle v1 moves from location l1 which has fuel-levels f4 and f1 to location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c1 is unloaded from vehicle v1 with space s0 and space s1 at location l0, cargo c3 is unloaded from vehicle v1 with space s1 and space s0 at location l0, vehicle v1 moves to location l0 from location l1 that has fuel level f5 and f0, vehicle v1 moves from location l0 which has fuel-levels f2 and f3 to location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f0, cargo c3 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c8 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l1 which has fuel-levels f3 and f6 to location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f6 and f2, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f2, vehicle v0 moves from location l0 which has fuel-levels f4 and f2 to location l1, at location l0, cargo c2 is loaded in vehicle v1 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, vehicle v1 moves to location l0 from location l1 that has fuel level f2 and f0, vehicle v1 moves to location l1 from location l0 that has fuel level f6 and f0, cargo c7 is loaded in vehicle v1 with space s0 and space s1 at location l0, cargo c2 is unloaded from vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f7 and f6 to location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f6 and f3, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f6, vehicle v0 moves from location l1 which has fuel-levels f6 and f4 to location l0, at location l0, cargo c3 is loaded in vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f0 and f7 to location l1, vehicle v0 moves from location l1 which has fuel-levels f1 and f6 to location l0, vehicle v1 moves from location l0 which has fuel-levels f3 and f5 to location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f7 and f4, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f4, vehicle v0 moves from location l1 which has fuel-levels f0 and f5 to location l0, vehicle v1 moves from location l1 which has fuel-levels f0 and f6 to location l0, at location l1, cargo c8 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f5 and f3 to location l1, cargo c4 is loaded in vehicle v1 with space s0 and space s1 at location l0, vehicle v1 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l0, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v1 moves from location l0 which has fuel-levels f1 and f7 to location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f6, cargo c2 is unloaded from vehicle v1 with space s0 and space s1 at location l1, at location l0, cargo c0 is unloaded from vehicle v1 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f4, at location l0, cargo c7 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v1 moves to location l1 from location l0 that has fuel level f5 and f0, vehicle v1 moves from location l0 which has fuel-levels f0 and f5 to location l1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f6 and f3, vehicle v0 moves from location l1 which has fuel-levels f1 and f7 to location l0, vehicle v0 moves from location l0 which has fuel-levels f6 and f0 to location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f6, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f1, vehicle v0 moves from location l0 which has fuel-levels f0 and f1 to location l1, cargo c4 is unloaded from vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f2, vehicle v0 moves from location l1 which has fuel-levels f2 and f6 to location l0, vehicle v0 moves from location l1 which has fuel-levels f0 and f6 to location l0, vehicle v1 moves from location l1 which has fuel-levels f3 and f0 to location l0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, vehicle v0 moves to location l1 from location l0 that has fuel level f7 and f1, vehicle v1 moves from location l0 which has fuel-levels f1 and f5 to location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f6 and f5, vehicle v0 moves to location l0 from location l1 that has fuel level f0 and f1, vehicle v1 moves to location l0 from location l1 that has fuel level f4 and f3, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f4, at location l1, cargo c8 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f1 and f5 to location l0, at location l0, cargo c8 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v1 moves from location l0 which has fuel-levels f4 and f3 to location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f0 and f3, vehicle v1 moves from location l1 which has fuel-levels f2 and f7 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, at location l0, cargo c1 is loaded in vehicle v1 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f2 and f7 to location l0, vehicle v1 moves from location l1 which has fuel-levels f2 and f6 to location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f7, vehicle v1 moves from location l0 which has fuel-levels f6 and f7 to location l1, vehicle v1 moves from location l1 which has fuel-levels f0 and f5 to location l0, cargo c5 is unloaded from vehicle v0 with space s1 and space s0 at location l0, at location l0, cargo c2 is unloaded from vehicle v1 with spaces s1 and s0, cargo c8 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v1 moves to location l0 from location l1 that has fuel level f2 and f4, vehicle v1 moves to location l0 from location l1 that has fuel level f5 and f6, cargo c4 is unloaded from vehicle v1 with space s1 and space s0 at location l0, vehicle v1 moves to location l1 from location l0 that has fuel level f3 and f1, vehicle v1 moves to location l0 from location l1 that has fuel level f3 and f1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f3 to location l1, vehicle v1 moves from location l0 which has fuel-levels f0 and f4 to location l1, cargo c8 is unloaded from vehicle v1 with space s0 and space s1 at location l0, vehicle v1 moves to location l0 from location l1 that has fuel level f7 and f0, vehicle v0 moves to location l0 from location l1 that has fuel level f1 and f0, cargo c4 is unloaded from vehicle v1 with space s1 and space s0 at location l1, cargo c4 is loaded in vehicle v1 with space s0 and space s1 at location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l0, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v1 moves from location l0 which has fuel-levels f6 and f2 to location l1, cargo c1 is unloaded from vehicle v1 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f1 to location l0, vehicle v1 moves from location l1 which has fuel-levels f0 and f4 to location l0, vehicle v0 moves from location l1 which has fuel-levels f5 and f3 to location l0, at location l1, cargo c1 is loaded in vehicle v1 with spaces s0 and s1, vehicle v1 moves from location l1 which has fuel-levels f1 and f5 to location l0, at location l0, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, vehicle v1 moves to location l0 from location l1 that has fuel level f6 and f3, vehicle v0 moves from location l0 which has fuel-levels f6 and f1 to location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f2 and f0, at location l1, cargo c7 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c7 is unloaded from vehicle v1 with spaces s1 and s0, vehicle v1 moves from location l0 which has fuel-levels f5 and f2 to location l1, vehicle v0 moves from location l0 which has fuel-levels f7 and f2 to location l1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v1 moves from location l1 which has fuel-levels f3 and f4 to location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f7, cargo c5 is loaded in vehicle v0 with space s0 and space s1 at location l0, at location l1, cargo c5 is unloaded from vehicle v1 with spaces s0 and s1, at location l0, cargo c8 is loaded in vehicle v1 with spaces s0 and s1, cargo c7 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v1 moves to location l0 from location l1 that has fuel level f1 and f3, at location l0, cargo c2 is loaded in vehicle v1 with spaces s1 and s0, cargo c7 is loaded in vehicle v1 with space s1 and space s0 at location l0, vehicle v1 moves from location l1 which has fuel-levels f2 and f5 to location l0, vehicle v1 moves to location l0 from location l1 that has fuel level f0 and f2, vehicle v0 moves from location l0 which has fuel-levels f1 and f5 to location l1, at location l1, cargo c4 is unloaded from vehicle v1 with spaces s0 and s1, at location l0, cargo c4 is unloaded from vehicle v1 with spaces s0 and s1, vehicle v1 moves to location l0 from location l1 that has fuel level f7 and f5, vehicle v1 moves to location l1 from location l0 that has fuel level f7 and f1, vehicle v0 moves from location l1 which has fuel-levels f4 and f0 to location l0, cargo c5 is unloaded from vehicle v0 with space s1 and space s0 at location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f0 and f3, at location l1, cargo c3 is loaded in vehicle v1 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f6 to location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f3 and f6, at location l1, cargo c3 is loaded in vehicle v0 with spaces s0 and s1, at location l0, cargo c6 is unloaded from vehicle v1 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f1 and f7 to location l1, cargo c8 is loaded in vehicle v0 with space s0 and space s1 at location l0, cargo c5 is loaded in vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c0 is unloaded from vehicle v1 with spaces s0 and s1, vehicle v1 moves from location l0 which has fuel-levels f4 and f2 to location l1, vehicle v1 moves from location l1 which has fuel-levels f2 and f1 to location l0, vehicle v0 moves from location l1 which has fuel-levels f6 and f7 to location l0, vehicle v0 moves from location l1 which has fuel-levels f7 and f1 to location l0, vehicle v1 moves to location l0 from location l1 that has fuel level f4 and f5, cargo c6 is loaded in vehicle v1 with space s0 and space s1 at location l1, vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f2, vehicle v0 moves from location l1 which has fuel-levels f1 and f4 to location l0, at location l0, cargo c7 is unloaded from vehicle v1 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f5, vehicle v1 moves from location l1 which has fuel-levels f6 and f1 to location l0, cargo c2 is unloaded from vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l0 which has fuel-levels f2 and f0 to location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f1 and f3, cargo c5 is unloaded from vehicle v1 with space s1 and space s0 at location l0, vehicle v1 moves to location l0 from location l1 that has fuel level f0 and f1, at location l1, cargo c1 is unloaded from vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is loaded in vehicle v0 with spaces s0 and s1, at location l0, cargo c1 is loaded in vehicle v0 with spaces s0 and s1, cargo c0 is unloaded from vehicle v0 with space s1 and space s0 at location l0, vehicle v1 moves to location l0 from location l1 that has fuel level f7 and f3, vehicle v1 moves to location l1 from location l0 that has fuel level f4 and f5, vehicle v1 moves from location l0 which has fuel-levels f1 and f0 to location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, vehicle v1 moves to location l1 from location l0 that has fuel level f2 and f5, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v1 moves to location l1 from location l0 that has fuel level f3 and f7, at location l0, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c8 is loaded in vehicle v1 with spaces s1 and s0, vehicle v1 moves from location l1 which has fuel-levels f1 and f0 to location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f0 to location l1, vehicle v1 moves from location l1 which has fuel-levels f6 and f7 to location l0, vehicle v0 moves from location l0 which has fuel-levels f6 and f4 to location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f4 and f6 and vehicle v0 moves to location l0 from location l1 that has fuel level f1 and f2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is at location l1, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel f7 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has fuel f5, location l1 is connected to location l0, spaces s0 and s1 are neighbors, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "9660949c-c7b6-46bd-bdd0-5a797383260b", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is at location l1, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel f7 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has fuel f5, location l1 is connected to location l0, spaces s0 and s1 are neighbors, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "792ab6d8-9f93-433d-a1f2-c6c56321421b", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: at location l1, cargo c8 is unloaded from vehicle v0 with spaces s0 and s1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 and vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is at location l1, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel f7 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has fuel f5, location l1 is connected to location l0, spaces s0 and s1 are neighbors, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "8f22288a-9a7b-4256-a728-7eb065157cab", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 5 the following actions are planned to be performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3. Is the action: at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 executable at step 4, True or False?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is at location l1, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel f7 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has fuel f5, location l1 is connected to location l0, spaces s0 and s1 are neighbors, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "c287fe5b-60a4-4906-8776-207911329b9c", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 5 the following actions are planned to be performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is unloaded from vehicle v1 with space s0 and space s1 at location l0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1. Is the action: cargo c0 is unloaded from vehicle v1 with space s0 and space s1 at location l0 executable at step 2, True or False?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is at location l1, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel f7 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has fuel f5, location l1 is connected to location l0, spaces s0 and s1 are neighbors, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "29701663-28c1-455d-bc88-06e7ac0db925", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is at location l1, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel f7 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has fuel f5, location l1 is connected to location l0, spaces s0 and s1 are neighbors, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "6d64a33a-6c7e-487a-a4cd-279e0c4152c4", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is unloaded from vehicle v1 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "at location l1, cargo c0 is unloaded from vehicle v1 with spaces s0 and s1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is at location l1, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel f7 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has fuel f5, location l1 is connected to location l0, spaces s0 and s1 are neighbors, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "edcaaebf-cd9a-435f-8698-4cc6f2afb611", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "vehicle v1 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c1 is loaded in vehicle v1 with space s1 and space s0 at location l1, cargo c2 is loaded in vehicle v1 with space s1 and space s0 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c7 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is loaded in vehicle v1 with space s1 and space s0 at location l1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c4 is loaded in vehicle v1 with spaces s1 and s0, at location l1, cargo c7 is loaded in vehicle v1 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is at location l1, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel f7 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has fuel f5, location l1 is connected to location l0, spaces s0 and s1 are neighbors, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "a0701956-9738-4e0a-916a-01ad27755017", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f3, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v1 moves from location l0 which has fuel-levels f7 and f2 to location l1, vehicle v1 moves from location l1 which has fuel-levels f6 and f0 to location l0, at location l1, cargo c8 is unloaded from vehicle v1 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f3, at location l0, cargo c0 is loaded in vehicle v1 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f4 to location l1, vehicle v1 moves to location l0 from location l1 that has fuel level f4 and f0, at location l0, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, at location l0, cargo c0 is loaded in vehicle v1 with spaces s0 and s1, cargo c3 is loaded in vehicle v1 with space s1 and space s0 at location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f0 and f7, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f3, at location l0, cargo c4 is loaded in vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f0 to location l0, at location l0, cargo c6 is unloaded from vehicle v1 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f0 and f6, vehicle v1 moves from location l0 which has fuel-levels f5 and f7 to location l1, cargo c7 is loaded in vehicle v1 with space s0 and space s1 at location l1, vehicle v1 moves to location l0 from location l1 that has fuel level f5 and f1, vehicle v1 moves from location l1 which has fuel-levels f3 and f6 to location l0, vehicle v1 moves to location l0 from location l1 that has fuel level f4 and f7, vehicle v1 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c0 is loaded in vehicle v1 with spaces s0 and s1, vehicle v1 moves to location l1 from location l0 that has fuel level f2 and f1, vehicle v0 moves from location l0 which has fuel-levels f4 and f1 to location l1, vehicle v1 moves from location l0 which has fuel-levels f7 and f5 to location l1, cargo c4 is unloaded from vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f5 to location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f1, at location l0, cargo c6 is loaded in vehicle v1 with spaces s1 and s0, at location l1, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f4 and f7 to location l0, vehicle v1 moves to location l1 from location l0 that has fuel level f6 and f4, vehicle v1 moves from location l1 which has fuel-levels f0 and f7 to location l0, cargo c4 is loaded in vehicle v0 with space s0 and space s1 at location l1, vehicle v1 moves from location l0 which has fuel-levels f2 and f7 to location l1, vehicle v1 moves to location l0 from location l1 that has fuel level f4 and f2, cargo c8 is loaded in vehicle v1 with space s0 and space s1 at location l1, vehicle v1 moves from location l0 which has fuel-levels f0 and f6 to location l1, vehicle v1 moves from location l0 which has fuel-levels f2 and f4 to location l1, vehicle v1 moves from location l0 which has fuel-levels f1 and f4 to location l1, vehicle v1 moves from location l1 which has fuel-levels f3 and f2 to location l0, vehicle v1 moves to location l1 from location l0 that has fuel level f0 and f2, at location l1, cargo c5 is loaded in vehicle v0 with spaces s1 and s0, vehicle v1 moves to location l1 from location l0 that has fuel level f5 and f6, vehicle v0 moves from location l0 which has fuel-levels f0 and f5 to location l1, vehicle v1 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s0 and space s1 at location l1, cargo c1 is unloaded from vehicle v1 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v1 with spaces s0 and s1, cargo c5 is unloaded from vehicle v1 with space s0 and space s1 at location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f5, vehicle v0 moves from location l0 which has fuel-levels f7 and f0 to location l1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f0, vehicle v0 moves from location l1 which has fuel-levels f3 and f4 to location l0, vehicle v1 moves from location l0 which has fuel-levels f7 and f3 to location l1, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v1 moves from location l0 which has fuel-levels f0 and f1 to location l1, cargo c3 is unloaded from vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f0, vehicle v1 moves to location l1 from location l0 that has fuel level f6 and f1, vehicle v1 moves from location l1 which has fuel-levels f7 and f2 to location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f7, at location l0, cargo c1 is unloaded from vehicle v1 with spaces s1 and s0, vehicle v1 moves to location l0 from location l1 that has fuel level f0 and f3, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f5, vehicle v0 moves from location l1 which has fuel-levels f6 and f2 to location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f0 and f4, vehicle v1 moves from location l1 which has fuel-levels f1 and f4 to location l0, cargo c5 is loaded in vehicle v1 with space s0 and space s1 at location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f5, vehicle v0 moves from location l0 which has fuel-levels f4 and f0 to location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f1 to location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f7 and f4, vehicle v0 moves from location l0 which has fuel-levels f6 and f7 to location l1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s0 and s1, vehicle v1 moves from location l0 which has fuel-levels f5 and f1 to location l1, cargo c5 is loaded in vehicle v1 with space s0 and space s1 at location l0, vehicle v1 moves to location l1 from location l0 that has fuel level f0 and f7, vehicle v0 moves from location l1 which has fuel-levels f4 and f2 to location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f6 to location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f4 and f1, vehicle v0 moves from location l0 which has fuel-levels f3 and f1 to location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f4 and f7, vehicle v0 moves from location l0 which has fuel-levels f0 and f3 to location l1, vehicle v1 moves from location l1 which has fuel-levels f1 and f2 to location l0, cargo c6 is loaded in vehicle v1 with space s0 and space s1 at location l0, at location l0, cargo c7 is unloaded from vehicle v1 with spaces s1 and s0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s0, at location l1, cargo c3 is unloaded from vehicle v1 with spaces s1 and s0, vehicle v1 moves to location l0 from location l1 that has fuel level f3 and f5, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f6, vehicle v1 moves to location l0 from location l1 that has fuel level f5 and f7, vehicle v1 moves from location l1 which has fuel-levels f2 and f3 to location l0, vehicle v1 moves from location l1 which has fuel-levels f3 and f7 to location l0, at location l0, cargo c4 is loaded in vehicle v1 with spaces s1 and s0, at location l1, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f6 and f5 to location l1, vehicle v0 moves from location l0 which has fuel-levels f4 and f7 to location l1, at location l0, cargo c8 is unloaded from vehicle v1 with spaces s1 and s0, cargo c7 is loaded in vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f5, vehicle v0 moves from location l1 which has fuel-levels f0 and f4 to location l0, at location l0, cargo c8 is loaded in vehicle v1 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f1 and f3 to location l0, vehicle v1 moves to location l1 from location l0 that has fuel level f5 and f3, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f7, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v1 moves from location l0 which has fuel-levels f2 and f6 to location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f7 and f6, cargo c2 is unloaded from vehicle v1 with space s1 and space s0 at location l1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s0 and s1, vehicle v1 moves from location l1 which has fuel-levels f1 and f6 to location l0, vehicle v1 moves to location l0 from location l1 that has fuel level f4 and f6, cargo c5 is loaded in vehicle v1 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, vehicle v0 moves from location l0 which has fuel-levels f7 and f5 to location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f7 and f0, vehicle v0 moves from location l0 which has fuel-levels f5 and f1 to location l1, vehicle v1 moves from location l1 which has fuel-levels f6 and f2 to location l0, vehicle v1 moves to location l1 from location l0 that has fuel level f3 and f0, vehicle v0 moves from location l0 which has fuel-levels f2 and f5 to location l1, vehicle v1 moves to location l0 from location l1 that has fuel level f6 and f4, vehicle v1 moves to location l1 from location l0 that has fuel level f4 and f0, vehicle v0 moves from location l1 which has fuel-levels f5 and f7 to location l0, at location l0, cargo c0 is loaded in vehicle v0 with spaces s0 and s1, vehicle v1 moves to location l0 from location l1 that has fuel level f1 and f7, vehicle v0 moves from location l1 which has fuel-levels f5 and f0 to location l0, at location l0, cargo c5 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f2 and f3 to location l0, at location l0, cargo c2 is unloaded from vehicle v1 with spaces s0 and s1, vehicle v1 moves from location l1 which has fuel-levels f7 and f1 to location l0, at location l1, cargo c8 is unloaded from vehicle v1 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f6, at location l0, cargo c3 is loaded in vehicle v1 with spaces s0 and s1, cargo c0 is unloaded from vehicle v1 with space s1 and space s0 at location l1, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, vehicle v1 moves from location l1 which has fuel-levels f5 and f3 to location l0, cargo c8 is loaded in vehicle v0 with space s0 and space s1 at location l1, vehicle v1 moves from location l0 which has fuel-levels f1 and f6 to location l1, at location l1, cargo c3 is loaded in vehicle v1 with spaces s0 and s1, cargo c5 is loaded in vehicle v1 with space s1 and space s0 at location l0, at location l1, cargo c7 is unloaded from vehicle v0 with spaces s1 and s0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l0, cargo c3 is unloaded from vehicle v1 with spaces s0 and s1, cargo c6 is unloaded from vehicle v1 with space s0 and space s1 at location l1, at location l0, cargo c8 is loaded in vehicle v0 with spaces s1 and s0, cargo c6 is unloaded from vehicle v1 with space s1 and space s0 at location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f4, cargo c2 is loaded in vehicle v1 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f0, cargo c7 is unloaded from vehicle v1 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f0 and f2 to location l0, cargo c7 is loaded in vehicle v0 with space s1 and space s0 at location l0, at location l1, cargo c5 is unloaded from vehicle v1 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f7 and f3, cargo c3 is unloaded from vehicle v1 with space s0 and space s1 at location l1, at location l0, cargo c1 is loaded in vehicle v1 with spaces s0 and s1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, cargo c7 is loaded in vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f0 and f2, vehicle v1 moves to location l1 from location l0 that has fuel level f3 and f4, vehicle v1 moves from location l1 which has fuel-levels f5 and f2 to location l0, vehicle v0 moves from location l0 which has fuel-levels f5 and f2 to location l1, vehicle v1 moves from location l0 which has fuel-levels f1 and f2 to location l1, vehicle v1 moves from location l1 which has fuel-levels f7 and f4 to location l0, at location l0, cargo c6 is unloaded from vehicle v0 with spaces s1 and s0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s0 and s1, vehicle v1 moves from location l1 which has fuel-levels f4 and f1 to location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v1 with space s0 and space s1 at location l0, at location l0, cargo c3 is unloaded from vehicle v1 with spaces s1 and s0, vehicle v1 moves from location l1 which has fuel-levels f5 and f0 to location l0, vehicle v1 moves to location l1 from location l0 that has fuel level f2 and f3, at location l1, cargo c0 is loaded in vehicle v1 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f5 and f0 to location l1, at location l1, cargo c3 is unloaded from vehicle v0 with spaces s0 and s1, at location l0, cargo c8 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f6, vehicle v0 moves from location l0 which has fuel-levels f6 and f2 to location l1, vehicle v0 moves from location l0 which has fuel-levels f1 and f2 to location l1, vehicle v0 moves from location l0 which has fuel-levels f4 and f2 to location l1, at location l0, cargo c2 is loaded in vehicle v1 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, vehicle v1 moves to location l0 from location l1 that has fuel level f2 and f0, vehicle v1 moves from location l0 which has fuel-levels f6 and f0 to location l1, cargo c7 is loaded in vehicle v1 with space s0 and space s1 at location l0, cargo c2 is unloaded from vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f7 and f6 to location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f6 and f3, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f6, vehicle v0 moves from location l1 which has fuel-levels f6 and f4 to location l0, at location l0, cargo c3 is loaded in vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f0 and f7, vehicle v0 moves to location l0 from location l1 that has fuel level f1 and f6, vehicle v1 moves from location l0 which has fuel-levels f3 and f5 to location l1, vehicle v1 moves from location l0 which has fuel-levels f7 and f4 to location l1, vehicle v0 moves from location l1 which has fuel-levels f2 and f4 to location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f0 and f5, vehicle v1 moves from location l1 which has fuel-levels f0 and f6 to location l0, at location l1, cargo c8 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f3, cargo c4 is loaded in vehicle v1 with space s0 and space s1 at location l0, vehicle v1 moves to location l1 from location l0 that has fuel level f3 and f2, at location l0, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v1 moves from location l0 which has fuel-levels f1 and f7 to location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f6, at location l1, cargo c2 is unloaded from vehicle v1 with spaces s0 and s1, at location l0, cargo c0 is unloaded from vehicle v1 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f1 and f4 to location l1, at location l0, cargo c7 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v1 moves from location l0 which has fuel-levels f5 and f0 to location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f0 and f5, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, vehicle v0 moves to location l1 from location l0 that has fuel level f6 and f3, vehicle v0 moves from location l1 which has fuel-levels f1 and f7 to location l0, vehicle v0 moves from location l0 which has fuel-levels f6 and f0 to location l1, vehicle v0 moves from location l0 which has fuel-levels f1 and f6 to location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f1, vehicle v0 moves to location l1 from location l0 that has fuel level f0 and f1, at location l1, cargo c4 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f2, vehicle v0 moves from location l1 which has fuel-levels f2 and f6 to location l0, vehicle v0 moves from location l1 which has fuel-levels f0 and f6 to location l0, vehicle v1 moves from location l1 which has fuel-levels f3 and f0 to location l0, cargo c3 is unloaded from vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, vehicle v0 moves from location l0 which has fuel-levels f7 and f1 to location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f1 and f5, vehicle v1 moves from location l0 which has fuel-levels f6 and f5 to location l1, vehicle v0 moves from location l1 which has fuel-levels f0 and f1 to location l0, vehicle v1 moves to location l0 from location l1 that has fuel level f4 and f3, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f4, cargo c8 is unloaded from vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f1 and f5, cargo c8 is unloaded from vehicle v0 with space s1 and space s0 at location l0, vehicle v1 moves from location l0 which has fuel-levels f4 and f3 to location l1, vehicle v0 moves from location l1 which has fuel-levels f0 and f3 to location l0, vehicle v1 moves to location l0 from location l1 that has fuel level f2 and f7, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, cargo c1 is loaded in vehicle v1 with space s1 and space s0 at location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f7, vehicle v1 moves from location l1 which has fuel-levels f2 and f6 to location l0, vehicle v0 moves from location l1 which has fuel-levels f3 and f7 to location l0, vehicle v1 moves to location l1 from location l0 that has fuel level f6 and f7, vehicle v1 moves from location l1 which has fuel-levels f0 and f5 to location l0, at location l0, cargo c5 is unloaded from vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v1 with space s1 and space s0 at location l0, cargo c8 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c6 is unloaded from vehicle v0 with space s1 and space s0 at location l1, vehicle v1 moves from location l1 which has fuel-levels f2 and f4 to location l0, vehicle v1 moves from location l1 which has fuel-levels f5 and f6 to location l0, at location l0, cargo c4 is unloaded from vehicle v1 with spaces s1 and s0, vehicle v1 moves from location l0 which has fuel-levels f3 and f1 to location l1, vehicle v1 moves to location l0 from location l1 that has fuel level f3 and f1, cargo c1 is loaded in vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f3, vehicle v1 moves to location l1 from location l0 that has fuel level f0 and f4, cargo c8 is unloaded from vehicle v1 with space s0 and space s1 at location l0, vehicle v1 moves to location l0 from location l1 that has fuel level f7 and f0, vehicle v0 moves to location l0 from location l1 that has fuel level f1 and f0, at location l1, cargo c4 is unloaded from vehicle v1 with spaces s1 and s0, at location l1, cargo c4 is loaded in vehicle v1 with spaces s0 and s1, at location l0, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v1 moves from location l0 which has fuel-levels f6 and f2 to location l1, cargo c1 is unloaded from vehicle v1 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f1, vehicle v1 moves to location l0 from location l1 that has fuel level f0 and f4, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f3, cargo c1 is loaded in vehicle v1 with space s0 and space s1 at location l1, vehicle v1 moves to location l0 from location l1 that has fuel level f1 and f5, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, vehicle v1 moves from location l1 which has fuel-levels f6 and f3 to location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f6 and f1, vehicle v1 moves to location l1 from location l0 that has fuel level f2 and f0, cargo c7 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c7 is unloaded from vehicle v1 with space s1 and space s0 at location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f5 and f2, vehicle v0 moves to location l1 from location l0 that has fuel level f7 and f2, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v1 moves from location l1 which has fuel-levels f3 and f4 to location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f7 to location l1, cargo c5 is loaded in vehicle v0 with space s0 and space s1 at location l0, at location l1, cargo c5 is unloaded from vehicle v1 with spaces s0 and s1, cargo c8 is loaded in vehicle v1 with space s0 and space s1 at location l0, at location l0, cargo c7 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v1 moves to location l0 from location l1 that has fuel level f1 and f3, cargo c2 is loaded in vehicle v1 with space s1 and space s0 at location l0, cargo c7 is loaded in vehicle v1 with space s1 and space s0 at location l0, vehicle v1 moves from location l1 which has fuel-levels f2 and f5 to location l0, vehicle v1 moves from location l1 which has fuel-levels f0 and f2 to location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f5 to location l1, at location l1, cargo c4 is unloaded from vehicle v1 with spaces s0 and s1, at location l0, cargo c4 is unloaded from vehicle v1 with spaces s0 and s1, vehicle v1 moves to location l0 from location l1 that has fuel level f7 and f5, vehicle v1 moves to location l1 from location l0 that has fuel level f7 and f1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f0, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v1 moves from location l0 which has fuel-levels f0 and f3 to location l1, at location l1, cargo c3 is loaded in vehicle v1 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f6 to location l1, vehicle v1 moves from location l0 which has fuel-levels f3 and f6 to location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s0 and s1, cargo c6 is unloaded from vehicle v1 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f7 to location l1, at location l0, cargo c8 is loaded in vehicle v0 with spaces s0 and s1, cargo c5 is loaded in vehicle v0 with space s0 and space s1 at location l1, cargo c0 is unloaded from vehicle v1 with space s0 and space s1 at location l1, vehicle v1 moves from location l0 which has fuel-levels f4 and f2 to location l1, vehicle v1 moves to location l0 from location l1 that has fuel level f2 and f1, vehicle v0 moves from location l1 which has fuel-levels f6 and f7 to location l0, vehicle v0 moves from location l1 which has fuel-levels f7 and f1 to location l0, vehicle v1 moves from location l1 which has fuel-levels f4 and f5 to location l0, at location l1, cargo c6 is loaded in vehicle v1 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f2, vehicle v0 moves to location l0 from location l1 that has fuel level f1 and f4, at location l0, cargo c7 is unloaded from vehicle v1 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f5, vehicle v1 moves from location l1 which has fuel-levels f6 and f1 to location l0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f0, vehicle v1 moves to location l1 from location l0 that has fuel level f1 and f3, at location l0, cargo c5 is unloaded from vehicle v1 with spaces s1 and s0, vehicle v1 moves from location l1 which has fuel-levels f0 and f1 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s0 at location l1, cargo c2 is loaded in vehicle v0 with space s0 and space s1 at location l1, at location l0, cargo c1 is loaded in vehicle v0 with spaces s0 and s1, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v1 moves from location l1 which has fuel-levels f7 and f3 to location l0, vehicle v1 moves to location l1 from location l0 that has fuel level f4 and f5, vehicle v1 moves to location l1 from location l0 that has fuel level f1 and f0, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f2 and f5, vehicle v1 moves to location l0 from location l1 that has fuel level f7 and f6, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l0, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, vehicle v1 moves from location l0 which has fuel-levels f3 and f7 to location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l0, cargo c8 is loaded in vehicle v1 with space s1 and space s0 at location l1, vehicle v1 moves from location l1 which has fuel-levels f1 and f0 to location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f0 to location l1, vehicle v1 moves to location l0 from location l1 that has fuel level f6 and f7, vehicle v0 moves to location l1 from location l0 that has fuel level f6 and f4, vehicle v1 moves from location l0 which has fuel-levels f4 and f6 to location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f1 and f2", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is at location l1, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel f7 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has fuel f5, location l1 is connected to location l0, spaces s0 and s1 are neighbors, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "cb370716-b07e-49b0-a73e-bd46b82b9693", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is at location l1, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel f7 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has fuel f5, location l1 is connected to location l0, spaces s0 and s1 are neighbors, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "f3404538-5536-4354-9565-79bab5df0386", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f4 to location l0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is at location l1, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel f7 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has fuel f5, location l1 is connected to location l0, spaces s0 and s1 are neighbors, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "0fd89f58-aa3f-4658-82c9-4868155eb830", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 10 the following actions are planned to be performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0. Is the action: vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5 executable at step 7, True or False?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is at location l1, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel f7 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has fuel f5, location l1 is connected to location l0, spaces s0 and s1 are neighbors, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "786e22e2-c999-4899-8ad4-5a169375faa4", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 10 the following actions are planned to be performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c5 is unloaded from vehicle v1 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1. Is the action: cargo c5 is unloaded from vehicle v1 with space s0 and space s1 at location l1 executable at step 2, True or False?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is at location l1, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel f7 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has fuel f5, location l1 is connected to location l0, spaces s0 and s1 are neighbors, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "756bc44d-c8f5-4665-9fa5-0b45bf749f55", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is at location l1, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel f7 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has fuel f5, location l1 is connected to location l0, spaces s0 and s1 are neighbors, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "33a52193-5ced-4805-9521-d74cc2643b1b", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c3 is loaded in vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "at location l0, cargo c3 is loaded in vehicle v0 with spaces s0 and s1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is at location l1, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel f7 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has fuel f5, location l1 is connected to location l0, spaces s0 and s1 are neighbors, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "ea49f0d1-a872-48c0-874b-90118764335b", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "at location l1, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v1 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c6 is loaded in vehicle v1 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c4 is loaded in vehicle v1 with space s1 and space s0 at location l1 and at location l1, cargo c7 is loaded in vehicle v1 with spaces s1 and s0", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is at location l1, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel f7 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has fuel f5, location l1 is connected to location l0, spaces s0 and s1 are neighbors, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "40240eb3-2160-437a-a69f-1c2c5e1c836c", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "vehicle v0 moves from location l0 which has fuel-levels f1 and f3 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v1 moves to location l1 from location l0 that has fuel level f7 and f2, vehicle v1 moves to location l0 from location l1 that has fuel level f6 and f5, vehicle v1 moves from location l1 which has fuel-levels f6 and f0 to location l0, cargo c8 is unloaded from vehicle v1 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f3, cargo c0 is loaded in vehicle v1 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f4, vehicle v1 moves to location l0 from location l1 that has fuel level f4 and f0, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l0, cargo c0 is loaded in vehicle v1 with space s0 and space s1 at location l0, at location l0, cargo c3 is loaded in vehicle v1 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f0 and f7, vehicle v0 moves from location l1 which has fuel-levels f7 and f3 to location l0, at location l0, cargo c4 is loaded in vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f0 to location l0, cargo c6 is unloaded from vehicle v1 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f0 and f6 to location l1, vehicle v1 moves from location l0 which has fuel-levels f5 and f7 to location l1, cargo c7 is loaded in vehicle v1 with space s0 and space s1 at location l1, vehicle v1 moves from location l1 which has fuel-levels f5 and f1 to location l0, vehicle v1 moves from location l1 which has fuel-levels f3 and f6 to location l0, vehicle v1 moves to location l0 from location l1 that has fuel level f4 and f7, vehicle v1 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v1 with spaces s0 and s1, vehicle v1 moves to location l1 from location l0 that has fuel level f2 and f1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f1, vehicle v1 moves to location l1 from location l0 that has fuel level f7 and f5, cargo c4 is unloaded from vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f5, vehicle v0 moves from location l1 which has fuel-levels f6 and f1 to location l0, cargo c6 is loaded in vehicle v1 with space s1 and space s0 at location l0, at location l1, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f7, vehicle v1 moves from location l0 which has fuel-levels f6 and f4 to location l1, vehicle v1 moves from location l1 which has fuel-levels f0 and f7 to location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s0 and s1, vehicle v1 moves from location l0 which has fuel-levels f2 and f7 to location l1, vehicle v1 moves from location l1 which has fuel-levels f4 and f2 to location l0, at location l1, cargo c1 is loaded in vehicle v1 with spaces s1 and s0, at location l1, cargo c8 is loaded in vehicle v1 with spaces s0 and s1, vehicle v1 moves to location l1 from location l0 that has fuel level f0 and f6, vehicle v1 moves from location l0 which has fuel-levels f2 and f4 to location l1, vehicle v1 moves from location l0 which has fuel-levels f1 and f4 to location l1, vehicle v1 moves from location l1 which has fuel-levels f3 and f2 to location l0, vehicle v1 moves from location l0 which has fuel-levels f0 and f2 to location l1, cargo c5 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f5 and f6, vehicle v0 moves to location l1 from location l0 that has fuel level f0 and f5, at location l1, cargo c0 is loaded in vehicle v0 with spaces s0 and s1, cargo c1 is unloaded from vehicle v1 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v1 with spaces s0 and s1, at location l0, cargo c5 is unloaded from vehicle v1 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f7 and f5 to location l0, vehicle v0 moves from location l0 which has fuel-levels f7 and f0 to location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l1 which has fuel-levels f6 and f0 to location l0, vehicle v0 moves from location l1 which has fuel-levels f3 and f4 to location l0, vehicle v1 moves from location l0 which has fuel-levels f7 and f3 to location l1, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s0 and s1, cargo c2 is loaded in vehicle v1 with space s1 and space s0 at location l1, vehicle v1 moves from location l0 which has fuel-levels f0 and f1 to location l1, at location l1, cargo c3 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f0, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v1 moves from location l0 which has fuel-levels f6 and f1 to location l1, vehicle v1 moves from location l1 which has fuel-levels f7 and f2 to location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f7, at location l0, cargo c1 is unloaded from vehicle v1 with spaces s1 and s0, vehicle v1 moves to location l0 from location l1 that has fuel level f0 and f3, vehicle v0 moves from location l1 which has fuel-levels f4 and f5 to location l0, vehicle v0 moves from location l1 which has fuel-levels f6 and f2 to location l0, vehicle v0 moves from location l0 which has fuel-levels f0 and f4 to location l1, cargo c7 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v1 moves from location l1 which has fuel-levels f1 and f4 to location l0, cargo c5 is loaded in vehicle v1 with space s0 and space s1 at location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f5, vehicle v0 moves from location l0 which has fuel-levels f4 and f0 to location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f1 to location l0, vehicle v0 moves from location l0 which has fuel-levels f7 and f4 to location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f6 and f7, at location l0, cargo c6 is loaded in vehicle v0 with spaces s0 and s1, vehicle v1 moves from location l0 which has fuel-levels f5 and f1 to location l1, at location l0, cargo c5 is loaded in vehicle v1 with spaces s0 and s1, vehicle v1 moves from location l0 which has fuel-levels f0 and f7 to location l1, vehicle v0 moves from location l1 which has fuel-levels f4 and f2 to location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f6, vehicle v1 moves from location l0 which has fuel-levels f4 and f1 to location l1, vehicle v0 moves from location l0 which has fuel-levels f3 and f1 to location l1, vehicle v1 moves from location l0 which has fuel-levels f4 and f7 to location l1, vehicle v0 moves from location l0 which has fuel-levels f0 and f3 to location l1, vehicle v1 moves from location l1 which has fuel-levels f1 and f2 to location l0, at location l0, cargo c6 is loaded in vehicle v1 with spaces s0 and s1, cargo c7 is unloaded from vehicle v1 with space s1 and space s0 at location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s0, at location l1, cargo c3 is unloaded from vehicle v1 with spaces s1 and s0, vehicle v1 moves from location l1 which has fuel-levels f3 and f5 to location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f6, vehicle v1 moves from location l1 which has fuel-levels f5 and f7 to location l0, vehicle v1 moves from location l1 which has fuel-levels f2 and f3 to location l0, vehicle v1 moves to location l0 from location l1 that has fuel level f3 and f7, at location l0, cargo c4 is loaded in vehicle v1 with spaces s1 and s0, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l0 which has fuel-levels f6 and f5 to location l1, vehicle v0 moves from location l0 which has fuel-levels f4 and f7 to location l1, at location l0, cargo c8 is unloaded from vehicle v1 with spaces s1 and s0, cargo c7 is loaded in vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f5, vehicle v0 moves to location l0 from location l1 that has fuel level f0 and f4, at location l0, cargo c8 is loaded in vehicle v1 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f1 and f3 to location l0, vehicle v1 moves from location l0 which has fuel-levels f5 and f3 to location l1, vehicle v0 moves from location l0 which has fuel-levels f3 and f7 to location l1, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v1 moves from location l0 which has fuel-levels f2 and f6 to location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f7 and f6, at location l1, cargo c2 is unloaded from vehicle v1 with spaces s1 and s0, cargo c6 is loaded in vehicle v0 with space s0 and space s1 at location l1, vehicle v1 moves to location l0 from location l1 that has fuel level f1 and f6, vehicle v1 moves to location l0 from location l1 that has fuel level f4 and f6, cargo c5 is loaded in vehicle v1 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, vehicle v0 moves from location l0 which has fuel-levels f7 and f5 to location l1, vehicle v1 moves from location l0 which has fuel-levels f7 and f0 to location l1, vehicle v0 moves from location l0 which has fuel-levels f5 and f1 to location l1, vehicle v1 moves from location l1 which has fuel-levels f6 and f2 to location l0, vehicle v1 moves from location l0 which has fuel-levels f3 and f0 to location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f5, vehicle v1 moves to location l0 from location l1 that has fuel level f6 and f4, vehicle v1 moves to location l1 from location l0 that has fuel level f4 and f0, vehicle v0 moves from location l1 which has fuel-levels f5 and f7 to location l0, at location l0, cargo c0 is loaded in vehicle v0 with spaces s0 and s1, vehicle v1 moves from location l1 which has fuel-levels f1 and f7 to location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f0, cargo c5 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l1 which has fuel-levels f2 and f3 to location l0, cargo c2 is unloaded from vehicle v1 with space s0 and space s1 at location l0, vehicle v1 moves from location l1 which has fuel-levels f7 and f1 to location l0, cargo c8 is unloaded from vehicle v1 with space s1 and space s0 at location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f6, cargo c3 is loaded in vehicle v1 with space s0 and space s1 at location l0, cargo c0 is unloaded from vehicle v1 with space s1 and space s0 at location l1, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, vehicle v1 moves from location l1 which has fuel-levels f5 and f3 to location l0, cargo c8 is loaded in vehicle v0 with space s0 and space s1 at location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f1 and f6, cargo c3 is loaded in vehicle v1 with space s0 and space s1 at location l1, at location l0, cargo c5 is loaded in vehicle v1 with spaces s1 and s0, at location l1, cargo c7 is unloaded from vehicle v0 with spaces s1 and s0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, cargo c3 is unloaded from vehicle v1 with space s0 and space s1 at location l0, at location l1, cargo c6 is unloaded from vehicle v1 with spaces s0 and s1, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0, at location l1, cargo c6 is unloaded from vehicle v1 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f4, cargo c2 is loaded in vehicle v1 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f0, cargo c7 is unloaded from vehicle v1 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f0 and f2, cargo c7 is loaded in vehicle v0 with space s1 and space s0 at location l0, at location l1, cargo c5 is unloaded from vehicle v1 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f7 and f3, at location l1, cargo c3 is unloaded from vehicle v1 with spaces s0 and s1, at location l0, cargo c1 is loaded in vehicle v1 with spaces s0 and s1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c7 is loaded in vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f0 and f2, vehicle v1 moves from location l0 which has fuel-levels f3 and f4 to location l1, vehicle v1 moves from location l1 which has fuel-levels f5 and f2 to location l0, vehicle v0 moves from location l0 which has fuel-levels f5 and f2 to location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f1 and f2, vehicle v1 moves to location l0 from location l1 that has fuel level f7 and f4, at location l0, cargo c6 is unloaded from vehicle v0 with spaces s1 and s0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s0 and s1, vehicle v1 moves from location l1 which has fuel-levels f4 and f1 to location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v1 with space s0 and space s1 at location l0, at location l0, cargo c3 is unloaded from vehicle v1 with spaces s1 and s0, vehicle v1 moves to location l0 from location l1 that has fuel level f5 and f0, vehicle v1 moves from location l0 which has fuel-levels f2 and f3 to location l1, cargo c0 is loaded in vehicle v1 with space s1 and space s0 at location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f0, at location l1, cargo c3 is unloaded from vehicle v0 with spaces s0 and s1, cargo c8 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l1 which has fuel-levels f3 and f6 to location l0, vehicle v0 moves from location l0 which has fuel-levels f6 and f2 to location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f2, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f2, at location l0, cargo c2 is loaded in vehicle v1 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2, vehicle v1 moves from location l1 which has fuel-levels f2 and f0 to location l0, vehicle v1 moves to location l1 from location l0 that has fuel level f6 and f0, at location l0, cargo c7 is loaded in vehicle v1 with spaces s0 and s1, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f7 and f6, vehicle v1 moves from location l0 which has fuel-levels f6 and f3 to location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f6, vehicle v0 moves from location l1 which has fuel-levels f6 and f4 to location l0, cargo c3 is loaded in vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f0 and f7, vehicle v0 moves to location l0 from location l1 that has fuel level f1 and f6, vehicle v1 moves from location l0 which has fuel-levels f3 and f5 to location l1, vehicle v1 moves from location l0 which has fuel-levels f7 and f4 to location l1, vehicle v0 moves from location l1 which has fuel-levels f2 and f4 to location l0, vehicle v0 moves from location l1 which has fuel-levels f0 and f5 to location l0, vehicle v1 moves to location l0 from location l1 that has fuel level f0 and f6, at location l1, cargo c8 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f3, at location l0, cargo c4 is loaded in vehicle v1 with spaces s0 and s1, vehicle v1 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v1 moves to location l1 from location l0 that has fuel level f1 and f7, vehicle v0 moves from location l0 which has fuel-levels f5 and f6 to location l1, cargo c2 is unloaded from vehicle v1 with space s0 and space s1 at location l1, cargo c0 is unloaded from vehicle v1 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f4 to location l1, at location l0, cargo c7 is unloaded from vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v1 moves to location l1 from location l0 that has fuel level f5 and f0, vehicle v1 moves to location l1 from location l0 that has fuel level f0 and f5, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, vehicle v0 moves to location l1 from location l0 that has fuel level f6 and f3, vehicle v0 moves to location l0 from location l1 that has fuel level f1 and f7, vehicle v0 moves to location l1 from location l0 that has fuel level f6 and f0, vehicle v0 moves from location l0 which has fuel-levels f1 and f6 to location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f1, vehicle v0 moves from location l0 which has fuel-levels f0 and f1 to location l1, cargo c4 is unloaded from vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f2 to location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f6, vehicle v0 moves from location l1 which has fuel-levels f0 and f6 to location l0, vehicle v1 moves from location l1 which has fuel-levels f3 and f0 to location l0, cargo c3 is unloaded from vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f7 and f1, vehicle v1 moves to location l1 from location l0 that has fuel level f1 and f5, vehicle v1 moves to location l1 from location l0 that has fuel level f6 and f5, vehicle v0 moves from location l1 which has fuel-levels f0 and f1 to location l0, vehicle v1 moves to location l0 from location l1 that has fuel level f4 and f3, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f4, at location l1, cargo c8 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f1 and f5, cargo c8 is unloaded from vehicle v0 with space s1 and space s0 at location l0, vehicle v1 moves from location l0 which has fuel-levels f4 and f3 to location l1, vehicle v0 moves from location l1 which has fuel-levels f0 and f3 to location l0, vehicle v1 moves to location l0 from location l1 that has fuel level f2 and f7, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, cargo c1 is loaded in vehicle v1 with space s1 and space s0 at location l0, vehicle v0 moves from location l1 which has fuel-levels f2 and f7 to location l0, vehicle v1 moves from location l1 which has fuel-levels f2 and f6 to location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f7, vehicle v1 moves to location l1 from location l0 that has fuel level f6 and f7, vehicle v1 moves to location l0 from location l1 that has fuel level f0 and f5, at location l0, cargo c5 is unloaded from vehicle v0 with spaces s1 and s0, cargo c2 is unloaded from vehicle v1 with space s1 and space s0 at location l0, cargo c8 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v1 moves to location l0 from location l1 that has fuel level f2 and f4, vehicle v1 moves to location l0 from location l1 that has fuel level f5 and f6, at location l0, cargo c4 is unloaded from vehicle v1 with spaces s1 and s0, vehicle v1 moves to location l1 from location l0 that has fuel level f3 and f1, vehicle v1 moves to location l0 from location l1 that has fuel level f3 and f1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f3 to location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f0 and f4, cargo c8 is unloaded from vehicle v1 with space s0 and space s1 at location l0, vehicle v1 moves from location l1 which has fuel-levels f7 and f0 to location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f1 and f0, at location l1, cargo c4 is unloaded from vehicle v1 with spaces s1 and s0, at location l1, cargo c4 is loaded in vehicle v1 with spaces s0 and s1, at location l0, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v1 moves to location l1 from location l0 that has fuel level f6 and f2, cargo c1 is unloaded from vehicle v1 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f1 to location l0, vehicle v1 moves from location l1 which has fuel-levels f0 and f4 to location l0, vehicle v0 moves from location l1 which has fuel-levels f5 and f3 to location l0, at location l1, cargo c1 is loaded in vehicle v1 with spaces s0 and s1, vehicle v1 moves to location l0 from location l1 that has fuel level f1 and f5, at location l0, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, vehicle v1 moves to location l0 from location l1 that has fuel level f6 and f3, vehicle v0 moves from location l0 which has fuel-levels f6 and f1 to location l1, vehicle v1 moves from location l0 which has fuel-levels f2 and f0 to location l1, cargo c7 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c7 is unloaded from vehicle v1 with space s1 and space s0 at location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f5 and f2, vehicle v0 moves from location l0 which has fuel-levels f7 and f2 to location l1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v1 moves from location l1 which has fuel-levels f3 and f4 to location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f7, cargo c5 is loaded in vehicle v0 with space s0 and space s1 at location l0, at location l1, cargo c5 is unloaded from vehicle v1 with spaces s0 and s1, cargo c8 is loaded in vehicle v1 with space s0 and space s1 at location l0, at location l0, cargo c7 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v1 moves to location l0 from location l1 that has fuel level f1 and f3, at location l0, cargo c2 is loaded in vehicle v1 with spaces s1 and s0, cargo c7 is loaded in vehicle v1 with space s1 and space s0 at location l0, vehicle v1 moves from location l1 which has fuel-levels f2 and f5 to location l0, vehicle v1 moves from location l1 which has fuel-levels f0 and f2 to location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f5, cargo c4 is unloaded from vehicle v1 with space s0 and space s1 at location l1, cargo c4 is unloaded from vehicle v1 with space s0 and space s1 at location l0, vehicle v1 moves to location l0 from location l1 that has fuel level f7 and f5, vehicle v1 moves from location l0 which has fuel-levels f7 and f1 to location l1, vehicle v0 moves from location l1 which has fuel-levels f4 and f0 to location l0, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v1 moves to location l1 from location l0 that has fuel level f0 and f3, at location l1, cargo c3 is loaded in vehicle v1 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f6, vehicle v1 moves from location l0 which has fuel-levels f3 and f6 to location l1, cargo c3 is loaded in vehicle v0 with space s0 and space s1 at location l1, cargo c6 is unloaded from vehicle v1 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f7, at location l0, cargo c8 is loaded in vehicle v0 with spaces s0 and s1, cargo c5 is loaded in vehicle v0 with space s0 and space s1 at location l1, cargo c0 is unloaded from vehicle v1 with space s0 and space s1 at location l1, vehicle v1 moves from location l0 which has fuel-levels f4 and f2 to location l1, vehicle v1 moves to location l0 from location l1 that has fuel level f2 and f1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f7, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f1, vehicle v1 moves from location l1 which has fuel-levels f4 and f5 to location l0, cargo c6 is loaded in vehicle v1 with space s0 and space s1 at location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f2, vehicle v0 moves to location l0 from location l1 that has fuel level f1 and f4, at location l0, cargo c7 is unloaded from vehicle v1 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f2 and f5 to location l0, vehicle v1 moves to location l0 from location l1 that has fuel level f6 and f1, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f0, vehicle v1 moves to location l1 from location l0 that has fuel level f1 and f3, at location l0, cargo c5 is unloaded from vehicle v1 with spaces s1 and s0, vehicle v1 moves from location l1 which has fuel-levels f0 and f1 to location l0, cargo c1 is unloaded from vehicle v0 with space s1 and space s0 at location l1, cargo c2 is loaded in vehicle v0 with space s0 and space s1 at location l1, at location l0, cargo c1 is loaded in vehicle v0 with spaces s0 and s1, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v1 moves from location l1 which has fuel-levels f7 and f3 to location l0, vehicle v1 moves to location l1 from location l0 that has fuel level f4 and f5, vehicle v1 moves from location l0 which has fuel-levels f1 and f0 to location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v1 moves from location l0 which has fuel-levels f2 and f5 to location l1, vehicle v1 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l0, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, vehicle v1 moves to location l1 from location l0 that has fuel level f3 and f7, at location l0, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c8 is loaded in vehicle v1 with spaces s1 and s0, vehicle v1 moves to location l0 from location l1 that has fuel level f1 and f0, vehicle v0 moves from location l0 which has fuel-levels f3 and f0 to location l1, vehicle v1 moves to location l0 from location l1 that has fuel level f6 and f7, vehicle v0 moves from location l0 which has fuel-levels f6 and f4 to location l1, vehicle v1 moves from location l0 which has fuel-levels f4 and f6 to location l1 and vehicle v0 moves from location l1 which has fuel-levels f1 and f2 to location l0", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is at location l1, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel f7 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has fuel f5, location l1 is connected to location l0, spaces s0 and s1 are neighbors, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "b131ff07-1781-4d6a-9ab2-2ee789d524dc", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is at location l1, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel f7 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has fuel f5, location l1 is connected to location l0, spaces s0 and s1 are neighbors, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "6b23217b-ff5d-4dc2-a3b0-c400cd199c65", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, cargo c3 is loaded in vehicle v0 with space s0 and space s1 at location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1 and vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is at location l1, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel f7 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has fuel f5, location l1 is connected to location l0, spaces s0 and s1 are neighbors, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "e4e57063-3dae-4ed4-8c77-6dffff05b95c", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 15 the following actions are planned to be performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3. Is the action: cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1 executable at step 2, True or False?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is at location l1, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel f7 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has fuel f5, location l1 is connected to location l0, spaces s0 and s1 are neighbors, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "065843ee-8028-4e5c-bab8-5b794303c45d", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 15 the following actions are planned to be performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c7 is unloaded from vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3. Is the action: cargo c7 is unloaded from vehicle v0 with space s1 and space s0 at location l1 executable at step 2, True or False?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is at location l1, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel f7 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has fuel f5, location l1 is connected to location l0, spaces s0 and s1 are neighbors, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "b9715cb8-b2ca-4c99-baf0-465b86d0eeec", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is at location l1, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel f7 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has fuel f5, location l1 is connected to location l0, spaces s0 and s1 are neighbors, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "06e92791-76d7-4242-bff5-7ffb74babe21", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f1, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f1", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is at location l1, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel f7 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has fuel f5, location l1 is connected to location l0, spaces s0 and s1 are neighbors, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "8b8fdba6-1ec7-47de-ace9-39c079edb0ae", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "vehicle v1 moves from location l1 which has fuel-levels f3 and f2 to location l0, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, at location l1, cargo c6 is loaded in vehicle v1 with spaces s1 and s0 and cargo c7 is loaded in vehicle v1 with space s1 and space s0 at location l1", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is at location l1, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel f7 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has fuel f5, location l1 is connected to location l0, spaces s0 and s1 are neighbors, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "bcd739cf-ced0-4805-a01c-ba1fb56b2837", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f3, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v1 moves from location l0 which has fuel-levels f7 and f2 to location l1, vehicle v1 moves from location l1 which has fuel-levels f6 and f5 to location l0, vehicle v1 moves to location l0 from location l1 that has fuel level f6 and f0, cargo c8 is unloaded from vehicle v1 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f3, at location l0, cargo c0 is loaded in vehicle v1 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f4, vehicle v1 moves from location l1 which has fuel-levels f4 and f0 to location l0, at location l0, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, cargo c0 is loaded in vehicle v1 with space s0 and space s1 at location l0, cargo c3 is loaded in vehicle v1 with space s1 and space s0 at location l0, vehicle v0 moves from location l1 which has fuel-levels f0 and f7 to location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f3, cargo c4 is loaded in vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f0, at location l0, cargo c6 is unloaded from vehicle v1 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f0 and f6 to location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f5 and f7, at location l1, cargo c7 is loaded in vehicle v1 with spaces s0 and s1, vehicle v1 moves from location l1 which has fuel-levels f5 and f1 to location l0, vehicle v1 moves from location l1 which has fuel-levels f3 and f6 to location l0, vehicle v1 moves to location l0 from location l1 that has fuel level f4 and f7, vehicle v1 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c0 is loaded in vehicle v1 with spaces s0 and s1, vehicle v1 moves from location l0 which has fuel-levels f2 and f1 to location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f1, vehicle v1 moves to location l1 from location l0 that has fuel level f7 and f5, cargo c4 is unloaded from vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f5, vehicle v0 moves from location l1 which has fuel-levels f6 and f1 to location l0, at location l0, cargo c6 is loaded in vehicle v1 with spaces s1 and s0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f7, vehicle v1 moves from location l0 which has fuel-levels f6 and f4 to location l1, vehicle v1 moves to location l0 from location l1 that has fuel level f0 and f7, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s0 and s1, vehicle v1 moves from location l0 which has fuel-levels f2 and f7 to location l1, vehicle v1 moves to location l0 from location l1 that has fuel level f4 and f2, at location l1, cargo c1 is loaded in vehicle v1 with spaces s1 and s0, cargo c8 is loaded in vehicle v1 with space s0 and space s1 at location l1, vehicle v1 moves from location l0 which has fuel-levels f0 and f6 to location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f2 and f4, vehicle v1 moves from location l0 which has fuel-levels f1 and f4 to location l1, vehicle v1 moves from location l0 which has fuel-levels f0 and f2 to location l1, at location l1, cargo c5 is loaded in vehicle v0 with spaces s1 and s0, vehicle v1 moves from location l0 which has fuel-levels f5 and f6 to location l1, vehicle v0 moves from location l0 which has fuel-levels f0 and f5 to location l1, vehicle v1 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c0 is loaded in vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c1 is unloaded from vehicle v1 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v1 with spaces s0 and s1, cargo c5 is unloaded from vehicle v1 with space s0 and space s1 at location l0, vehicle v0 moves from location l1 which has fuel-levels f7 and f5 to location l0, vehicle v0 moves from location l0 which has fuel-levels f7 and f0 to location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f0, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f4, vehicle v1 moves from location l0 which has fuel-levels f7 and f3 to location l1, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s0 and s1, cargo c2 is loaded in vehicle v1 with space s1 and space s0 at location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f0 and f1, cargo c3 is unloaded from vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f0, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v1 moves from location l0 which has fuel-levels f6 and f1 to location l1, vehicle v1 moves from location l1 which has fuel-levels f7 and f2 to location l0, vehicle v0 moves from location l0 which has fuel-levels f5 and f7 to location l1, at location l0, cargo c1 is unloaded from vehicle v1 with spaces s1 and s0, vehicle v1 moves from location l1 which has fuel-levels f0 and f3 to location l0, vehicle v0 moves from location l1 which has fuel-levels f4 and f5 to location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f2, vehicle v0 moves from location l0 which has fuel-levels f0 and f4 to location l1, at location l1, cargo c7 is loaded in vehicle v0 with spaces s1 and s0, vehicle v1 moves from location l1 which has fuel-levels f1 and f4 to location l0, at location l1, cargo c5 is loaded in vehicle v1 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f5, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f1, vehicle v0 moves from location l0 which has fuel-levels f7 and f4 to location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f6 and f7, at location l0, cargo c6 is loaded in vehicle v0 with spaces s0 and s1, vehicle v1 moves to location l1 from location l0 that has fuel level f5 and f1, cargo c5 is loaded in vehicle v1 with space s0 and space s1 at location l0, vehicle v1 moves to location l1 from location l0 that has fuel level f0 and f7, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f2, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f6, vehicle v1 moves to location l1 from location l0 that has fuel level f4 and f1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f1, vehicle v1 moves from location l0 which has fuel-levels f4 and f7 to location l1, vehicle v0 moves from location l0 which has fuel-levels f0 and f3 to location l1, vehicle v1 moves to location l0 from location l1 that has fuel level f1 and f2, cargo c6 is loaded in vehicle v1 with space s0 and space s1 at location l0, at location l0, cargo c7 is unloaded from vehicle v1 with spaces s1 and s0, cargo c1 is unloaded from vehicle v0 with space s1 and space s0 at location l0, cargo c3 is unloaded from vehicle v1 with space s1 and space s0 at location l1, vehicle v1 moves to location l0 from location l1 that has fuel level f3 and f5, vehicle v0 moves from location l1 which has fuel-levels f4 and f6 to location l0, vehicle v1 moves from location l1 which has fuel-levels f5 and f7 to location l0, vehicle v1 moves to location l0 from location l1 that has fuel level f2 and f3, vehicle v1 moves to location l0 from location l1 that has fuel level f3 and f7, cargo c4 is loaded in vehicle v1 with space s1 and space s0 at location l0, at location l1, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f6 and f5, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f7, cargo c8 is unloaded from vehicle v1 with space s1 and space s0 at location l0, at location l0, cargo c7 is loaded in vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f3 and f5 to location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f0 and f4, cargo c8 is loaded in vehicle v1 with space s1 and space s0 at location l0, vehicle v0 moves from location l1 which has fuel-levels f1 and f3 to location l0, vehicle v1 moves to location l1 from location l0 that has fuel level f5 and f3, vehicle v0 moves from location l0 which has fuel-levels f3 and f7 to location l1, cargo c0 is unloaded from vehicle v0 with space s1 and space s0 at location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f2 and f6, vehicle v1 moves to location l1 from location l0 that has fuel level f7 and f6, at location l1, cargo c2 is unloaded from vehicle v1 with spaces s1 and s0, at location l1, cargo c6 is loaded in vehicle v0 with spaces s0 and s1, vehicle v1 moves to location l0 from location l1 that has fuel level f1 and f6, vehicle v1 moves from location l1 which has fuel-levels f4 and f6 to location l0, cargo c5 is loaded in vehicle v1 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f2 and f1 to location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f7 and f5, vehicle v1 moves to location l1 from location l0 that has fuel level f7 and f0, vehicle v0 moves from location l0 which has fuel-levels f5 and f1 to location l1, vehicle v1 moves to location l0 from location l1 that has fuel level f6 and f2, vehicle v1 moves from location l0 which has fuel-levels f3 and f0 to location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f5, vehicle v1 moves to location l0 from location l1 that has fuel level f6 and f4, vehicle v1 moves to location l1 from location l0 that has fuel level f4 and f0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f7, cargo c0 is loaded in vehicle v0 with space s0 and space s1 at location l0, vehicle v1 moves to location l0 from location l1 that has fuel level f1 and f7, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f0, cargo c5 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f3, cargo c2 is unloaded from vehicle v1 with space s0 and space s1 at location l0, vehicle v1 moves to location l0 from location l1 that has fuel level f7 and f1, at location l1, cargo c8 is unloaded from vehicle v1 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f6 to location l1, at location l0, cargo c3 is loaded in vehicle v1 with spaces s0 and s1, at location l1, cargo c0 is unloaded from vehicle v1 with spaces s1 and s0, vehicle v1 moves to location l0 from location l1 that has fuel level f5 and f3, cargo c8 is loaded in vehicle v0 with space s0 and space s1 at location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f1 and f6, at location l1, cargo c3 is loaded in vehicle v1 with spaces s0 and s1, cargo c5 is loaded in vehicle v1 with space s1 and space s0 at location l0, at location l1, cargo c7 is unloaded from vehicle v0 with spaces s1 and s0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, at location l0, cargo c3 is unloaded from vehicle v1 with spaces s0 and s1, at location l1, cargo c6 is unloaded from vehicle v1 with spaces s0 and s1, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0, cargo c6 is unloaded from vehicle v1 with space s1 and space s0 at location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f4, cargo c2 is loaded in vehicle v1 with space s0 and space s1 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f0, at location l1, cargo c7 is unloaded from vehicle v1 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f0 and f2, cargo c7 is loaded in vehicle v0 with space s1 and space s0 at location l0, cargo c5 is unloaded from vehicle v1 with space s1 and space s0 at location l1, vehicle v0 moves from location l0 which has fuel-levels f7 and f3 to location l1, cargo c3 is unloaded from vehicle v1 with space s0 and space s1 at location l1, at location l0, cargo c1 is loaded in vehicle v1 with spaces s0 and s1, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c7 is loaded in vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f0 and f2 to location l1, vehicle v1 moves from location l0 which has fuel-levels f3 and f4 to location l1, vehicle v1 moves to location l0 from location l1 that has fuel level f5 and f2, vehicle v0 moves from location l0 which has fuel-levels f5 and f2 to location l1, vehicle v1 moves from location l0 which has fuel-levels f1 and f2 to location l1, vehicle v1 moves from location l1 which has fuel-levels f7 and f4 to location l0, at location l0, cargo c6 is unloaded from vehicle v0 with spaces s1 and s0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s0 and s1, vehicle v1 moves from location l1 which has fuel-levels f4 and f1 to location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l0, cargo c1 is unloaded from vehicle v1 with spaces s0 and s1, cargo c3 is unloaded from vehicle v1 with space s1 and space s0 at location l0, vehicle v1 moves from location l1 which has fuel-levels f5 and f0 to location l0, vehicle v1 moves from location l0 which has fuel-levels f2 and f3 to location l1, at location l1, cargo c0 is loaded in vehicle v1 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f0, cargo c3 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c8 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l1 which has fuel-levels f3 and f6 to location l0, vehicle v0 moves from location l0 which has fuel-levels f6 and f2 to location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f2, vehicle v0 moves from location l0 which has fuel-levels f4 and f2 to location l1, cargo c2 is loaded in vehicle v1 with space s0 and space s1 at location l0, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, vehicle v1 moves from location l1 which has fuel-levels f2 and f0 to location l0, vehicle v1 moves from location l0 which has fuel-levels f6 and f0 to location l1, cargo c7 is loaded in vehicle v1 with space s0 and space s1 at location l0, cargo c2 is unloaded from vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f7 and f6, vehicle v1 moves to location l1 from location l0 that has fuel level f6 and f3, vehicle v0 moves from location l1 which has fuel-levels f5 and f6 to location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f4, at location l0, cargo c3 is loaded in vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f0 and f7 to location l1, vehicle v0 moves from location l1 which has fuel-levels f1 and f6 to location l0, vehicle v1 moves from location l0 which has fuel-levels f3 and f5 to location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f7 and f4, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f4, vehicle v0 moves to location l0 from location l1 that has fuel level f0 and f5, vehicle v1 moves from location l1 which has fuel-levels f0 and f6 to location l0, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l0 which has fuel-levels f5 and f3 to location l1, cargo c4 is loaded in vehicle v1 with space s0 and space s1 at location l0, vehicle v1 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v1 moves to location l1 from location l0 that has fuel level f1 and f7, vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f6, at location l1, cargo c2 is unloaded from vehicle v1 with spaces s0 and s1, cargo c0 is unloaded from vehicle v1 with space s1 and space s0 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f4 to location l1, at location l0, cargo c7 is unloaded from vehicle v0 with spaces s1 and s0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v1 moves from location l0 which has fuel-levels f5 and f0 to location l1, vehicle v1 moves from location l0 which has fuel-levels f0 and f5 to location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, vehicle v0 moves to location l1 from location l0 that has fuel level f6 and f3, vehicle v0 moves to location l0 from location l1 that has fuel level f1 and f7, vehicle v0 moves to location l1 from location l0 that has fuel level f6 and f0, vehicle v0 moves from location l0 which has fuel-levels f1 and f6 to location l1, vehicle v0 moves from location l1 which has fuel-levels f4 and f1 to location l0, vehicle v0 moves from location l0 which has fuel-levels f0 and f1 to location l1, cargo c4 is unloaded from vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f2, vehicle v0 moves from location l1 which has fuel-levels f2 and f6 to location l0, vehicle v0 moves from location l1 which has fuel-levels f0 and f6 to location l0, vehicle v1 moves from location l1 which has fuel-levels f3 and f0 to location l0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, vehicle v0 moves from location l0 which has fuel-levels f7 and f1 to location l1, vehicle v1 moves from location l0 which has fuel-levels f1 and f5 to location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f6 and f5, vehicle v0 moves from location l1 which has fuel-levels f0 and f1 to location l0, vehicle v1 moves from location l1 which has fuel-levels f4 and f3 to location l0, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f4, at location l1, cargo c8 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f1 and f5, cargo c8 is unloaded from vehicle v0 with space s1 and space s0 at location l0, vehicle v1 moves to location l1 from location l0 that has fuel level f4 and f3, vehicle v0 moves to location l0 from location l1 that has fuel level f0 and f3, vehicle v1 moves to location l0 from location l1 that has fuel level f2 and f7, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, cargo c1 is loaded in vehicle v1 with space s1 and space s0 at location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f7, vehicle v1 moves from location l1 which has fuel-levels f2 and f6 to location l0, vehicle v0 moves from location l1 which has fuel-levels f3 and f7 to location l0, vehicle v1 moves from location l0 which has fuel-levels f6 and f7 to location l1, vehicle v1 moves to location l0 from location l1 that has fuel level f0 and f5, cargo c5 is unloaded from vehicle v0 with space s1 and space s0 at location l0, at location l0, cargo c2 is unloaded from vehicle v1 with spaces s1 and s0, cargo c8 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c6 is unloaded from vehicle v0 with space s1 and space s0 at location l1, vehicle v1 moves to location l0 from location l1 that has fuel level f2 and f4, vehicle v1 moves to location l0 from location l1 that has fuel level f5 and f6, cargo c4 is unloaded from vehicle v1 with space s1 and space s0 at location l0, vehicle v1 moves to location l1 from location l0 that has fuel level f3 and f1, vehicle v1 moves to location l0 from location l1 that has fuel level f3 and f1, cargo c1 is loaded in vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l0 which has fuel-levels f2 and f3 to location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f0 and f4, cargo c8 is unloaded from vehicle v1 with space s0 and space s1 at location l0, vehicle v1 moves to location l0 from location l1 that has fuel level f7 and f0, vehicle v0 moves from location l1 which has fuel-levels f1 and f0 to location l0, cargo c4 is unloaded from vehicle v1 with space s1 and space s0 at location l1, at location l1, cargo c4 is loaded in vehicle v1 with spaces s0 and s1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f6 and f2, cargo c1 is unloaded from vehicle v1 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f1, vehicle v1 moves to location l0 from location l1 that has fuel level f0 and f4, vehicle v0 moves from location l1 which has fuel-levels f5 and f3 to location l0, cargo c1 is loaded in vehicle v1 with space s0 and space s1 at location l1, at location l1, cargo c4 is loaded in vehicle v1 with spaces s1 and s0, vehicle v1 moves to location l0 from location l1 that has fuel level f1 and f5, at location l0, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, vehicle v1 moves from location l1 which has fuel-levels f6 and f3 to location l0, vehicle v0 moves from location l0 which has fuel-levels f6 and f1 to location l1, vehicle v1 moves from location l0 which has fuel-levels f2 and f0 to location l1, at location l1, cargo c7 is unloaded from vehicle v0 with spaces s0 and s1, cargo c7 is unloaded from vehicle v1 with space s1 and space s0 at location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f5 and f2, vehicle v0 moves from location l0 which has fuel-levels f7 and f2 to location l1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v1 moves to location l0 from location l1 that has fuel level f3 and f4, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f7, cargo c5 is loaded in vehicle v0 with space s0 and space s1 at location l0, cargo c5 is unloaded from vehicle v1 with space s0 and space s1 at location l1, at location l0, cargo c8 is loaded in vehicle v1 with spaces s0 and s1, at location l0, cargo c7 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v1 moves from location l1 which has fuel-levels f1 and f3 to location l0, at location l0, cargo c2 is loaded in vehicle v1 with spaces s1 and s0, cargo c7 is loaded in vehicle v1 with space s1 and space s0 at location l0, vehicle v1 moves to location l0 from location l1 that has fuel level f2 and f5, vehicle v1 moves from location l1 which has fuel-levels f0 and f2 to location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f5, cargo c4 is unloaded from vehicle v1 with space s0 and space s1 at location l1, at location l0, cargo c4 is unloaded from vehicle v1 with spaces s0 and s1, vehicle v1 moves to location l0 from location l1 that has fuel level f7 and f5, vehicle v1 moves from location l0 which has fuel-levels f7 and f1 to location l1, vehicle v0 moves from location l1 which has fuel-levels f4 and f0 to location l0, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v1 moves from location l0 which has fuel-levels f0 and f3 to location l1, cargo c3 is loaded in vehicle v1 with space s1 and space s0 at location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f6, vehicle v1 moves from location l0 which has fuel-levels f3 and f6 to location l1, at location l1, cargo c3 is loaded in vehicle v0 with spaces s0 and s1, cargo c6 is unloaded from vehicle v1 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f7, cargo c8 is loaded in vehicle v0 with space s0 and space s1 at location l0, at location l1, cargo c5 is loaded in vehicle v0 with spaces s0 and s1, at location l1, cargo c0 is unloaded from vehicle v1 with spaces s0 and s1, vehicle v1 moves to location l1 from location l0 that has fuel level f4 and f2, vehicle v1 moves from location l1 which has fuel-levels f2 and f1 to location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f7, vehicle v0 moves from location l1 which has fuel-levels f7 and f1 to location l0, vehicle v1 moves from location l1 which has fuel-levels f4 and f5 to location l0, cargo c6 is loaded in vehicle v1 with space s0 and space s1 at location l1, vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f2 to location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f1 and f4, at location l0, cargo c7 is unloaded from vehicle v1 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f5, vehicle v1 moves from location l1 which has fuel-levels f6 and f1 to location l0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f0, vehicle v1 moves from location l0 which has fuel-levels f1 and f3 to location l1, at location l0, cargo c5 is unloaded from vehicle v1 with spaces s1 and s0, vehicle v1 moves to location l0 from location l1 that has fuel level f0 and f1, cargo c1 is unloaded from vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s0 and s1, at location l0, cargo c1 is loaded in vehicle v0 with spaces s0 and s1, cargo c0 is unloaded from vehicle v0 with space s1 and space s0 at location l0, vehicle v1 moves to location l0 from location l1 that has fuel level f7 and f3, vehicle v1 moves from location l0 which has fuel-levels f4 and f5 to location l1, vehicle v1 moves from location l0 which has fuel-levels f1 and f0 to location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v1 moves from location l0 which has fuel-levels f2 and f5 to location l1, vehicle v1 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l1, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, at location l0, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, vehicle v1 moves from location l0 which has fuel-levels f3 and f7 to location l1, cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l0, at location l1, cargo c8 is loaded in vehicle v1 with spaces s1 and s0, vehicle v1 moves from location l1 which has fuel-levels f1 and f0 to location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f0, vehicle v1 moves to location l0 from location l1 that has fuel level f6 and f7, vehicle v0 moves from location l0 which has fuel-levels f6 and f4 to location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f4 and f6 and vehicle v0 moves to location l0 from location l1 that has fuel level f1 and f2", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is at location l1, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel f7 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has fuel f5, location l1 is connected to location l0, spaces s0 and s1 are neighbors, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "08640106-6783-41cc-a9dd-13916ecf86ff", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is at location l1, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel f7 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has fuel f5, location l1 is connected to location l0, spaces s0 and s1 are neighbors, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "cace178a-c72a-4449-8417-4fff37d3fd85", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f6, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is at location l1, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel f7 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has fuel f5, location l1 is connected to location l0, spaces s0 and s1 are neighbors, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "f57136e9-9c17-452a-8495-1e1a546bf56e", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 19 the following actions are planned to be performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0. Is the action: cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 executable at step 18, True or False?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is at location l1, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel f7 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has fuel f5, location l1 is connected to location l0, spaces s0 and s1 are neighbors, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "6bd7e842-631c-44b2-a842-b7d64721800c", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 19 the following actions are planned to be performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f4 and f2 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0. Is the action: vehicle v0 moves from location l1 which has fuel-levels f4 and f2 to location l0 executable at step 11, True or False?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is at location l1, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel f7 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has fuel f5, location l1 is connected to location l0, spaces s0 and s1 are neighbors, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "2a6158d7-8bf3-4ca7-83c1-f0aa21585949", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is at location l1, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel f7 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has fuel f5, location l1 is connected to location l0, spaces s0 and s1 are neighbors, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "c0d87f17-fdc1-46c4-b01c-73882e5adc57", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, at location l0, cargo c6 is loaded in vehicle v0 with spaces s0 and s1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "cargo c6 is loaded in vehicle v0 with space s0 and space s1 at location l0", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is at location l1, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel f7 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has fuel f5, location l1 is connected to location l0, spaces s0 and s1 are neighbors, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "e2c4d086-a314-4b4e-bf13-69d7bad5bd48", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "cargo c7 is loaded in vehicle v1 with space s1 and space s0 at location l1, vehicle v1 moves from location l1 which has fuel-levels f2 and f1 to location l0 and cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l0", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is at location l1, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel f7 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has fuel f5, location l1 is connected to location l0, spaces s0 and s1 are neighbors, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "d9818aec-b2a3-48f0-928e-4bdba93489f3", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "vehicle v0 moves from location l0 which has fuel-levels f1 and f3 to location l1, at location l1, cargo c5 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v1 moves from location l0 which has fuel-levels f7 and f2 to location l1, vehicle v1 moves from location l1 which has fuel-levels f6 and f5 to location l0, vehicle v1 moves to location l0 from location l1 that has fuel level f6 and f0, at location l1, cargo c8 is unloaded from vehicle v1 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f3, at location l0, cargo c0 is loaded in vehicle v1 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f2 and f4 to location l1, vehicle v1 moves from location l1 which has fuel-levels f4 and f0 to location l0, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l0, at location l0, cargo c0 is loaded in vehicle v1 with spaces s0 and s1, cargo c3 is loaded in vehicle v1 with space s1 and space s0 at location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f0 and f7, vehicle v0 moves from location l1 which has fuel-levels f7 and f3 to location l0, at location l0, cargo c4 is loaded in vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f0, at location l0, cargo c6 is unloaded from vehicle v1 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f0 and f6, vehicle v1 moves to location l1 from location l0 that has fuel level f5 and f7, cargo c7 is loaded in vehicle v1 with space s0 and space s1 at location l1, vehicle v1 moves from location l1 which has fuel-levels f5 and f1 to location l0, vehicle v1 moves to location l0 from location l1 that has fuel level f3 and f6, vehicle v1 moves from location l1 which has fuel-levels f4 and f7 to location l0, vehicle v1 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l1, cargo c0 is loaded in vehicle v1 with spaces s0 and s1, vehicle v1 moves to location l1 from location l0 that has fuel level f2 and f1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f1, vehicle v1 moves to location l1 from location l0 that has fuel level f7 and f5, cargo c4 is unloaded from vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f5, vehicle v0 moves from location l1 which has fuel-levels f6 and f1 to location l0, at location l0, cargo c6 is loaded in vehicle v1 with spaces s1 and s0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f4 and f7 to location l0, vehicle v1 moves from location l0 which has fuel-levels f6 and f4 to location l1, vehicle v1 moves from location l1 which has fuel-levels f0 and f7 to location l0, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s0 and s1, vehicle v1 moves from location l0 which has fuel-levels f2 and f7 to location l1, vehicle v1 moves to location l0 from location l1 that has fuel level f4 and f2, at location l1, cargo c1 is loaded in vehicle v1 with spaces s1 and s0, cargo c8 is loaded in vehicle v1 with space s0 and space s1 at location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f0 and f6, vehicle v1 moves to location l1 from location l0 that has fuel level f2 and f4, vehicle v1 moves to location l1 from location l0 that has fuel level f1 and f4, vehicle v1 moves to location l0 from location l1 that has fuel level f3 and f2, vehicle v1 moves from location l0 which has fuel-levels f0 and f2 to location l1, cargo c5 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v1 moves from location l0 which has fuel-levels f5 and f6 to location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f0 and f5, vehicle v1 moves to location l0 from location l1 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s0 and s1, cargo c1 is unloaded from vehicle v1 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v1 with space s0 and space s1 at location l0, at location l0, cargo c5 is unloaded from vehicle v1 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f5, vehicle v0 moves from location l0 which has fuel-levels f7 and f0 to location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f0, vehicle v0 moves from location l1 which has fuel-levels f3 and f4 to location l0, vehicle v1 moves from location l0 which has fuel-levels f7 and f3 to location l1, cargo c3 is unloaded from vehicle v0 with space s0 and space s1 at location l0, cargo c2 is loaded in vehicle v1 with space s1 and space s0 at location l1, vehicle v1 moves from location l0 which has fuel-levels f0 and f1 to location l1, at location l1, cargo c3 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f0, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v1 moves from location l0 which has fuel-levels f6 and f1 to location l1, vehicle v1 moves from location l1 which has fuel-levels f7 and f2 to location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f7, at location l0, cargo c1 is unloaded from vehicle v1 with spaces s1 and s0, vehicle v1 moves to location l0 from location l1 that has fuel level f0 and f3, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f5, vehicle v0 moves from location l1 which has fuel-levels f6 and f2 to location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f0 and f4, cargo c7 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v1 moves to location l0 from location l1 that has fuel level f1 and f4, at location l1, cargo c5 is loaded in vehicle v1 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f5, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f0, vehicle v0 moves from location l1 which has fuel-levels f5 and f1 to location l0, vehicle v0 moves from location l0 which has fuel-levels f7 and f4 to location l1, vehicle v0 moves from location l0 which has fuel-levels f6 and f7 to location l1, at location l0, cargo c6 is loaded in vehicle v0 with spaces s0 and s1, vehicle v1 moves from location l0 which has fuel-levels f5 and f1 to location l1, cargo c5 is loaded in vehicle v1 with space s0 and space s1 at location l0, vehicle v1 moves from location l0 which has fuel-levels f0 and f7 to location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f2, vehicle v0 moves from location l0 which has fuel-levels f4 and f6 to location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f4 and f1, vehicle v0 moves from location l0 which has fuel-levels f3 and f1 to location l1, vehicle v1 moves from location l0 which has fuel-levels f4 and f7 to location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f0 and f3, vehicle v1 moves to location l0 from location l1 that has fuel level f1 and f2, cargo c6 is loaded in vehicle v1 with space s0 and space s1 at location l0, at location l0, cargo c7 is unloaded from vehicle v1 with spaces s1 and s0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s1 and s0, at location l1, cargo c3 is unloaded from vehicle v1 with spaces s1 and s0, vehicle v1 moves from location l1 which has fuel-levels f3 and f5 to location l0, vehicle v0 moves from location l1 which has fuel-levels f4 and f6 to location l0, vehicle v1 moves to location l0 from location l1 that has fuel level f5 and f7, vehicle v1 moves from location l1 which has fuel-levels f2 and f3 to location l0, vehicle v1 moves from location l1 which has fuel-levels f3 and f7 to location l0, at location l0, cargo c4 is loaded in vehicle v1 with spaces s1 and s0, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l0 which has fuel-levels f6 and f5 to location l1, vehicle v0 moves from location l0 which has fuel-levels f4 and f7 to location l1, at location l0, cargo c8 is unloaded from vehicle v1 with spaces s1 and s0, at location l0, cargo c7 is loaded in vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f5, vehicle v0 moves to location l0 from location l1 that has fuel level f0 and f4, at location l0, cargo c8 is loaded in vehicle v1 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f1 and f3, vehicle v1 moves from location l0 which has fuel-levels f5 and f3 to location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f7, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v1 moves to location l1 from location l0 that has fuel level f2 and f6, vehicle v1 moves to location l1 from location l0 that has fuel level f7 and f6, cargo c2 is unloaded from vehicle v1 with space s1 and space s0 at location l1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s0 and s1, vehicle v1 moves from location l1 which has fuel-levels f1 and f6 to location l0, vehicle v1 moves to location l0 from location l1 that has fuel level f4 and f6, at location l1, cargo c5 is loaded in vehicle v1 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f1, vehicle v0 moves from location l0 which has fuel-levels f7 and f5 to location l1, vehicle v1 moves from location l0 which has fuel-levels f7 and f0 to location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f1, vehicle v1 moves to location l0 from location l1 that has fuel level f6 and f2, vehicle v1 moves from location l0 which has fuel-levels f3 and f0 to location l1, vehicle v0 moves from location l0 which has fuel-levels f2 and f5 to location l1, vehicle v1 moves to location l0 from location l1 that has fuel level f6 and f4, vehicle v1 moves to location l1 from location l0 that has fuel level f4 and f0, vehicle v0 moves from location l1 which has fuel-levels f5 and f7 to location l0, at location l0, cargo c0 is loaded in vehicle v0 with spaces s0 and s1, vehicle v1 moves to location l0 from location l1 that has fuel level f1 and f7, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f0, cargo c5 is loaded in vehicle v0 with space s1 and space s0 at location l0, vehicle v0 moves from location l1 which has fuel-levels f2 and f3 to location l0, at location l0, cargo c2 is unloaded from vehicle v1 with spaces s0 and s1, vehicle v1 moves from location l1 which has fuel-levels f7 and f1 to location l0, cargo c8 is unloaded from vehicle v1 with space s1 and space s0 at location l1, vehicle v0 moves from location l0 which has fuel-levels f2 and f6 to location l1, at location l0, cargo c3 is loaded in vehicle v1 with spaces s0 and s1, cargo c0 is unloaded from vehicle v1 with space s1 and space s0 at location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, vehicle v1 moves from location l1 which has fuel-levels f5 and f3 to location l0, cargo c8 is loaded in vehicle v0 with space s0 and space s1 at location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f1 and f6, at location l1, cargo c3 is loaded in vehicle v1 with spaces s0 and s1, at location l0, cargo c5 is loaded in vehicle v1 with spaces s1 and s0, at location l1, cargo c7 is unloaded from vehicle v0 with spaces s1 and s0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, at location l0, cargo c3 is unloaded from vehicle v1 with spaces s0 and s1, cargo c6 is unloaded from vehicle v1 with space s0 and space s1 at location l1, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l0, at location l1, cargo c6 is unloaded from vehicle v1 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f3 and f4 to location l1, cargo c2 is loaded in vehicle v1 with space s0 and space s1 at location l1, vehicle v0 moves from location l1 which has fuel-levels f2 and f0 to location l0, at location l1, cargo c7 is unloaded from vehicle v1 with spaces s0 and s1, vehicle v0 moves from location l1 which has fuel-levels f0 and f2 to location l0, at location l0, cargo c7 is loaded in vehicle v0 with spaces s1 and s0, at location l1, cargo c5 is unloaded from vehicle v1 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f7 and f3, cargo c3 is unloaded from vehicle v1 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v1 with space s0 and space s1 at location l0, at location l1, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, cargo c7 is loaded in vehicle v0 with space s0 and space s1 at location l1, vehicle v0 moves from location l0 which has fuel-levels f0 and f2 to location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f3 and f4, vehicle v1 moves to location l0 from location l1 that has fuel level f5 and f2, vehicle v0 moves from location l0 which has fuel-levels f5 and f2 to location l1, vehicle v1 moves from location l0 which has fuel-levels f1 and f2 to location l1, vehicle v1 moves to location l0 from location l1 that has fuel level f7 and f4, at location l0, cargo c6 is unloaded from vehicle v0 with spaces s1 and s0, cargo c2 is loaded in vehicle v0 with space s0 and space s1 at location l0, vehicle v1 moves to location l0 from location l1 that has fuel level f4 and f1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c1 is unloaded from vehicle v1 with space s0 and space s1 at location l0, at location l0, cargo c3 is unloaded from vehicle v1 with spaces s1 and s0, vehicle v1 moves to location l0 from location l1 that has fuel level f5 and f0, vehicle v1 moves to location l1 from location l0 that has fuel level f2 and f3, at location l1, cargo c0 is loaded in vehicle v1 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f5 and f0 to location l1, cargo c3 is unloaded from vehicle v0 with space s0 and space s1 at location l1, at location l0, cargo c8 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f6, at location l1, cargo c6 is loaded in vehicle v1 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f6 and f2, vehicle v0 moves from location l0 which has fuel-levels f1 and f2 to location l1, vehicle v0 moves from location l0 which has fuel-levels f4 and f2 to location l1, cargo c2 is loaded in vehicle v1 with space s0 and space s1 at location l0, vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0, vehicle v1 moves to location l0 from location l1 that has fuel level f2 and f0, vehicle v1 moves to location l1 from location l0 that has fuel level f6 and f0, cargo c7 is loaded in vehicle v1 with space s0 and space s1 at location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f7 and f6, vehicle v1 moves to location l1 from location l0 that has fuel level f6 and f3, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f6, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f4, cargo c3 is loaded in vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f0 and f7 to location l1, vehicle v0 moves from location l1 which has fuel-levels f1 and f6 to location l0, vehicle v1 moves to location l1 from location l0 that has fuel level f3 and f5, vehicle v1 moves to location l1 from location l0 that has fuel level f7 and f4, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f4, vehicle v0 moves to location l0 from location l1 that has fuel level f0 and f5, vehicle v1 moves to location l0 from location l1 that has fuel level f0 and f6, cargo c8 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l0 which has fuel-levels f5 and f3 to location l1, cargo c4 is loaded in vehicle v1 with space s0 and space s1 at location l0, vehicle v1 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l0, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v1 moves to location l1 from location l0 that has fuel level f1 and f7, vehicle v0 moves from location l0 which has fuel-levels f5 and f6 to location l1, cargo c2 is unloaded from vehicle v1 with space s0 and space s1 at location l1, at location l0, cargo c0 is unloaded from vehicle v1 with spaces s1 and s0, vehicle v0 moves from location l0 which has fuel-levels f1 and f4 to location l1, at location l0, cargo c7 is unloaded from vehicle v0 with spaces s1 and s0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v1 moves from location l0 which has fuel-levels f5 and f0 to location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f0 and f5, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f6 and f3, vehicle v0 moves to location l0 from location l1 that has fuel level f1 and f7, vehicle v0 moves from location l0 which has fuel-levels f6 and f0 to location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f6, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f1, vehicle v0 moves to location l1 from location l0 that has fuel level f0 and f1, cargo c4 is unloaded from vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f2 to location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f6, vehicle v0 moves to location l0 from location l1 that has fuel level f0 and f6, vehicle v1 moves from location l1 which has fuel-levels f3 and f0 to location l0, at location l0, cargo c3 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, vehicle v0 moves from location l0 which has fuel-levels f7 and f1 to location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f1 and f5, vehicle v1 moves to location l1 from location l0 that has fuel level f6 and f5, vehicle v0 moves to location l0 from location l1 that has fuel level f0 and f1, vehicle v1 moves to location l0 from location l1 that has fuel level f4 and f3, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f4, at location l1, cargo c8 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f1 and f5, cargo c8 is unloaded from vehicle v0 with space s1 and space s0 at location l0, vehicle v1 moves to location l1 from location l0 that has fuel level f4 and f3, vehicle v0 moves from location l1 which has fuel-levels f0 and f3 to location l0, vehicle v1 moves from location l1 which has fuel-levels f2 and f7 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, at location l0, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, cargo c1 is loaded in vehicle v1 with space s1 and space s0 at location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f2 and f7, vehicle v1 moves from location l1 which has fuel-levels f2 and f6 to location l0, vehicle v0 moves from location l1 which has fuel-levels f3 and f7 to location l0, vehicle v1 moves from location l0 which has fuel-levels f6 and f7 to location l1, vehicle v1 moves to location l0 from location l1 that has fuel level f0 and f5, at location l0, cargo c5 is unloaded from vehicle v0 with spaces s1 and s0, at location l0, cargo c2 is unloaded from vehicle v1 with spaces s1 and s0, at location l1, cargo c8 is unloaded from vehicle v0 with spaces s0 and s1, cargo c6 is unloaded from vehicle v0 with space s1 and space s0 at location l1, vehicle v1 moves to location l0 from location l1 that has fuel level f2 and f4, vehicle v1 moves from location l1 which has fuel-levels f5 and f6 to location l0, cargo c4 is unloaded from vehicle v1 with space s1 and space s0 at location l0, vehicle v1 moves to location l1 from location l0 that has fuel level f3 and f1, vehicle v1 moves from location l1 which has fuel-levels f3 and f1 to location l0, at location l1, cargo c1 is loaded in vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f3 to location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f0 and f4, at location l0, cargo c8 is unloaded from vehicle v1 with spaces s0 and s1, vehicle v1 moves to location l0 from location l1 that has fuel level f7 and f0, vehicle v0 moves to location l0 from location l1 that has fuel level f1 and f0, at location l1, cargo c4 is unloaded from vehicle v1 with spaces s1 and s0, at location l1, cargo c4 is loaded in vehicle v1 with spaces s0 and s1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l0, at location l1, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v1 moves to location l1 from location l0 that has fuel level f6 and f2, at location l1, cargo c1 is unloaded from vehicle v1 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f1, vehicle v1 moves to location l0 from location l1 that has fuel level f0 and f4, vehicle v0 moves from location l1 which has fuel-levels f5 and f3 to location l0, cargo c1 is loaded in vehicle v1 with space s0 and space s1 at location l1, cargo c4 is loaded in vehicle v1 with space s1 and space s0 at location l1, vehicle v1 moves to location l0 from location l1 that has fuel level f1 and f5, cargo c5 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, vehicle v1 moves to location l0 from location l1 that has fuel level f6 and f3, vehicle v0 moves from location l0 which has fuel-levels f6 and f1 to location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f2 and f0, cargo c7 is unloaded from vehicle v0 with space s0 and space s1 at location l1, cargo c7 is unloaded from vehicle v1 with space s1 and space s0 at location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f5 and f2, vehicle v0 moves to location l1 from location l0 that has fuel level f7 and f2, at location l0, cargo c6 is loaded in vehicle v0 with spaces s1 and s0, vehicle v1 moves to location l0 from location l1 that has fuel level f3 and f4, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f7, cargo c5 is loaded in vehicle v0 with space s0 and space s1 at location l0, cargo c5 is unloaded from vehicle v1 with space s0 and space s1 at location l1, at location l0, cargo c8 is loaded in vehicle v1 with spaces s0 and s1, cargo c7 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v1 moves to location l0 from location l1 that has fuel level f1 and f3, cargo c2 is loaded in vehicle v1 with space s1 and space s0 at location l0, cargo c7 is loaded in vehicle v1 with space s1 and space s0 at location l0, vehicle v1 moves from location l1 which has fuel-levels f2 and f5 to location l0, vehicle v1 moves to location l0 from location l1 that has fuel level f0 and f2, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f5, cargo c4 is unloaded from vehicle v1 with space s0 and space s1 at location l1, cargo c4 is unloaded from vehicle v1 with space s0 and space s1 at location l0, vehicle v1 moves to location l0 from location l1 that has fuel level f7 and f5, vehicle v1 moves from location l0 which has fuel-levels f7 and f1 to location l1, vehicle v0 moves from location l1 which has fuel-levels f4 and f0 to location l0, cargo c5 is unloaded from vehicle v0 with space s1 and space s0 at location l1, vehicle v1 moves to location l1 from location l0 that has fuel level f0 and f3, cargo c3 is loaded in vehicle v1 with space s1 and space s0 at location l1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f6, vehicle v1 moves to location l1 from location l0 that has fuel level f3 and f6, cargo c3 is loaded in vehicle v0 with space s0 and space s1 at location l1, cargo c6 is unloaded from vehicle v1 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f7, at location l0, cargo c8 is loaded in vehicle v0 with spaces s0 and s1, at location l1, cargo c5 is loaded in vehicle v0 with spaces s0 and s1, cargo c0 is unloaded from vehicle v1 with space s0 and space s1 at location l1, vehicle v1 moves from location l0 which has fuel-levels f4 and f2 to location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f7, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f1, vehicle v1 moves to location l0 from location l1 that has fuel level f4 and f5, at location l1, cargo c6 is loaded in vehicle v1 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f2, vehicle v0 moves from location l1 which has fuel-levels f1 and f4 to location l0, cargo c7 is unloaded from vehicle v1 with space s0 and space s1 at location l0, vehicle v0 moves from location l1 which has fuel-levels f2 and f5 to location l0, vehicle v1 moves from location l1 which has fuel-levels f6 and f1 to location l0, at location l1, cargo c2 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f0, vehicle v1 moves from location l0 which has fuel-levels f1 and f3 to location l1, at location l0, cargo c5 is unloaded from vehicle v1 with spaces s1 and s0, vehicle v1 moves to location l0 from location l1 that has fuel level f0 and f1, cargo c1 is unloaded from vehicle v0 with space s1 and space s0 at location l1, cargo c2 is loaded in vehicle v0 with space s0 and space s1 at location l1, cargo c1 is loaded in vehicle v0 with space s0 and space s1 at location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s1 and s0, vehicle v1 moves from location l1 which has fuel-levels f7 and f3 to location l0, vehicle v1 moves from location l0 which has fuel-levels f4 and f5 to location l1, vehicle v1 moves from location l0 which has fuel-levels f1 and f0 to location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v1 moves from location l0 which has fuel-levels f2 and f5 to location l1, vehicle v1 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c3 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l0, cargo c3 is loaded in vehicle v0 with spaces s1 and s0, vehicle v1 moves to location l1 from location l0 that has fuel level f3 and f7, cargo c8 is loaded in vehicle v1 with space s1 and space s0 at location l1, vehicle v1 moves to location l0 from location l1 that has fuel level f1 and f0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f0, vehicle v1 moves to location l0 from location l1 that has fuel level f6 and f7, vehicle v0 moves to location l1 from location l0 that has fuel level f6 and f4, vehicle v1 moves from location l0 which has fuel-levels f4 and f6 to location l1 and vehicle v0 moves from location l1 which has fuel-levels f1 and f2 to location l0", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is at location l1, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel f7 exists in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f6 neighbors fuel level f7, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has fuel f5, location l1 is connected to location l0, spaces s0 and s1 are neighbors, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "4adfbeff-3fa5-4576-9010-afc75ff3ca01", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, if cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "9aa929b1-7883-4927-ba48-21a11d4dc3ec", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, if cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "7b8d202e-6d7b-447e-bdae-0f617c4ebc29", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_5", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, if at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "d7a98b36-4eb4-4a67-a597-68075b83aedf", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, if at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "88398e7a-8f5e-4d3c-8801-54a4c24974eb", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, if cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, is it True or False that cargo c0 is located in vehicle v0, cargo c0 is not situated at location l1, vehicle v0 contains space s0 and vehicle v0 does not have space s1?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "9bf4cc2e-325b-402b-8c26-20ccd79528f4", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, if cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, is it True or False that cargo c0 is at location l1, vehicle v0 contains cargo c0, vehicle v0 contains space s1 and vehicle v0 has space s0?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "49c2045f-ceee-4a81-b801-fd13c26e7cf9", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, if at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, is it True or False that cargo c0 is not at location l1cargo c0 is not present at location l1, vehicle v0 contains cargo c0, vehicle v0 does not contain space s1 and vehicle v0 has space s0?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "d30d8995-0753-4ca8-a923-cad58fb7ef59", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_12", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, if cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, is it True or False that cargo c0 is situated at location l0, cargo c3 is not at location l1cargo c3 is not present at location l1, cargo c4 is not at location l0cargo c4 is not present at location l0 and cargo c5 is located in vehicle v0?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "17bb2b7b-6feb-4be8-85bc-e7cfe8016c12", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_13", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, if at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "b6f61ddf-c649-4657-a4ae-af565f762487", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_14", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, if cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "4e6ca3a1-b69f-45f9-9a98-e8a199c2c912", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_15", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, if at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "6d5f7286-82e7-48cb-b0b5-6320929ef533", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_16", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, if cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "ab0da884-80f5-48fe-bbe2-0ca2f6e3d4d4", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, if cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, what would be all of the valid properties of the state? Write None if there are none.", "answer": "cargo c0 is located in vehicle v0, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is present at location l1, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f4, location l0 is connected to location l1, location l1 and location l0 are connected, location l1 has fuel f7, spaces s0 and s1 are neighbors, vehicle v0 contains space s0 and vehicle v1 has space s1", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "33ba037c-e07d-46e1-8283-a75412a514e9", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, if at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "cargo c0 is not in vehicle v1, cargo c0 is not situated at location l0, cargo c0 is not situated at location l1, cargo c1 is not in vehicle v1, cargo c1 is not situated at location l0, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c2 is not located in vehicle v0, cargo c2 is not located in vehicle v1, cargo c3 is not at location l1cargo c3 is not present at location l1, cargo c3 is not located in vehicle v1, cargo c4 is not at location l0cargo c4 is not present at location l0, cargo c4 is not located in vehicle v0, cargo c5 is not situated at location l1, cargo c6 is not located in vehicle v0, cargo c6 is not situated at location l0, cargo c7 is not located in vehicle v0, cargo c7 is not situated at location l0, cargo c8 is not in vehicle v1, cargo c8 is not located in vehicle v0, cargo c8 is not situated at location l1, cargo v0 is not situated at location l0, cargo v1 is not situated at location l0, fuel f2 does not exist in location l0, fuel f4 does not exist in location l1, fuel f6 does not exist in location l0, fuel level f0 does not neighbour fuel level f3, fuel level f0 does not neighbour fuel level f4, fuel level f0 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f6, fuel level f1 does not neighbour fuel level f7, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f6, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f7, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f4, fuel level f6 does not neighbour fuel level f2, fuel level f6 does not neighbour fuel level f5, fuel level f7 does not neighbour fuel level f0, fuel level f7 does not neighbour fuel level f3, fuel level f7 does not neighbour fuel level f5, fuel level f7 does not neighbour fuel level f6, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f6 are not neighbors, fuel-levels f0 and f7 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f7 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f3 and f6 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f6 are not neighbors, fuel-levels f4 and f7 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f5 and f7 are not neighbors, fuel-levels f6 and f0 are not neighbors, fuel-levels f6 and f1 are not neighbors, fuel-levels f6 and f3 are not neighbors, fuel-levels f6 and f4 are not neighbors, fuel-levels f7 and f1 are not neighbors, fuel-levels f7 and f2 are not neighbors, fuel-levels f7 and f4 are not neighbors, location l0 does not have a fuel-level of f0, location l0 does not have fuel f1, location l0 does not have fuel f3, location l0 does not have fuel f5, location l0 does not have fuel f7, location l1 does not have a fuel-level of f3, location l1 does not have a fuel-level of f5, location l1 does not have a fuel-level of f6, location l1 does not have fuel f0, location l1 does not have fuel f1, location l1 does not have fuel f2, spaces s1 and s0 are not neighbors, vehicle v0 does not contain cargo c1, vehicle v0 does not contain cargo c3, vehicle v0 does not contain cargo c5, vehicle v0 does not have space s1, vehicle v1 does not contain cargo c4, vehicle v1 does not contain cargo c5, vehicle v1 does not contain cargo c6, vehicle v1 does not contain cargo c7 and vehicle v1 does not have space s0", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "4302a205-93bb-4ddc-937d-d0ad00efa681", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, if at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, what would be all of the properties of the state? Write None if there are none.", "answer": "cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c0 is not in vehicle v1, cargo c0 is not situated at location l1, cargo c1 is not at location l0cargo c1 is not present at location l0, cargo c1 is not located in vehicle v0, cargo c1 is situated at location l1, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c2 is not in vehicle v0, cargo c2 is not in vehicle v1, cargo c2 is present at location l1, cargo c3 is not at location l1cargo c3 is not present at location l1, cargo c3 is not in vehicle v1, cargo c3 is situated at location l0, cargo c4 is at location l1, cargo c4 is not at location l0cargo c4 is not present at location l0, cargo c5 is at location l0, cargo c5 is not in vehicle v1, cargo c5 is not located in vehicle v0, cargo c5 is not situated at location l1, cargo c6 is not in vehicle v0, cargo c6 is not located in vehicle v1, cargo c6 is not situated at location l0, cargo c6 is present at location l1, cargo c7 is at location l1, cargo c7 is not in vehicle v0, cargo c7 is not in vehicle v1, cargo c7 is not situated at location l0, cargo c8 is not in vehicle v1, cargo c8 is not located in vehicle v0, cargo c8 is not situated at location l1, cargo c8 is situated at location l0, cargo v0 is at location l1, cargo v0 is not situated at location l0, cargo v1 is not at location l0cargo v1 is not present at location l0, cargo v1 is present at location l1, fuel f0 does not exist in location l0, fuel f0 does not exist in location l1, fuel f2 does not exist in location l0, fuel f3 does not exist in location l1, fuel f6 does not exist in location l0, fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f7, fuel level f0 neighbors fuel level f1, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f7, fuel level f2 does not neighbour fuel level f1, fuel level f2 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f7, fuel level f2 neighbors fuel level f3, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f7, fuel level f3 neighbors fuel level f4, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f3, fuel level f4 neighbors fuel level f5, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f2, fuel level f6 does not neighbour fuel level f2, fuel level f6 does not neighbour fuel level f5, fuel level f7 does not neighbour fuel level f1, fuel level f7 does not neighbour fuel level f4, fuel level f7 does not neighbour fuel level f5, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f0 and f6 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f1 and f6 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f6 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f3 and f6 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f6 are not neighbors, fuel-levels f4 and f7 are not neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f5 and f4 are not neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f5 and f7 are not neighbors, fuel-levels f6 and f0 are not neighbors, fuel-levels f6 and f1 are not neighbors, fuel-levels f6 and f3 are not neighbors, fuel-levels f6 and f4 are not neighbors, fuel-levels f6 and f7 are neighbors, fuel-levels f7 and f0 are not neighbors, fuel-levels f7 and f2 are not neighbors, fuel-levels f7 and f3 are not neighbors, fuel-levels f7 and f6 are not neighbors, location l0 does not have fuel f1, location l0 does not have fuel f3, location l0 does not have fuel f5, location l0 does not have fuel f7, location l0 has fuel f4, location l1 does not have a fuel-level of f5, location l1 does not have fuel f1, location l1 does not have fuel f2, location l1 does not have fuel f4, location l1 does not have fuel f6, location l1 has fuel f7, spaces s0 and s1 are neighbors, spaces s1 and s0 are not neighbors, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 contains cargo c0, vehicle v0 contains space s0, vehicle v0 does not contain cargo c3, vehicle v0 does not contain cargo c4, vehicle v0 does not contain space s1, vehicle v1 does not contain cargo c1, vehicle v1 does not contain cargo c4, vehicle v1 does not contain space s0 and vehicle v1 has space s1", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "aa43aaa6-240e-4df8-b6bf-0ab6dbbb3321", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, if at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "949b5e1e-26e4-4f05-8a94-cf31be297afd", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, if at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "b9167fc6-00d5-40ae-9340-8f864ecaa84c", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_5", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, if at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "966c5594-4f21-46e7-9f1e-677e59c0920d", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, if cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "16bff854-1540-4180-9962-c9459002dbd2", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, if at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, is it True or False that cargo c1 is not situated at location l1, vehicle v0 contains cargo c1, vehicle v0 does not contain space s1 and vehicle v0 has space s0?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "e0cc974f-d05c-46c0-ac5b-95613206c30c", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, if cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, is it True or False that cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c1 is not located in vehicle v0, vehicle v0 does not have space s0 and vehicle v0 does not have space s1?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "015632df-6be3-423e-8424-715d9e4c7453", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, if at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, is it True or False that cargo c1 is in vehicle v0, cargo c1 is not at location l1cargo c1 is not present at location l1, vehicle v0 contains space s0 and vehicle v0 does not contain space s1?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "e2e98cc1-f9b0-4d6b-8944-e73e29cccdc5", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_12", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. In this state, if cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, is it True or False that cargo c1 is not located in vehicle v1, cargo c7 is in vehicle v1, location l0 does not have a fuel-level of f4 and vehicle v0 contains cargo c4?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "e3946d61-c39d-4e2a-b59d-49d6658e5ba7", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_13", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, if at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "0cd6febf-3c0b-4f9a-b974-80bf64c19c22", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_14", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, if cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "723ebd46-0bb5-491e-8b19-ba51d71008c8", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_15", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, if cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "0b257b9b-7bf0-4461-b844-f5a0c037bb53", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_16", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. In this state, if at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "88f28773-58a9-4738-b99f-ec0b1906ef84", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, if cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, what would be all of the valid properties of the state? Write None if there are none.", "answer": "cargo c0 is present at location l0, cargo c1 is located in vehicle v0, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c4 is at location l1, cargo c5 is at location l0, cargo c6 is situated at location l1, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is at location l1, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f4 neighbors fuel level f5, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has a fuel-level of f3, location l1 and location l0 are connected, location l1 has fuel f6, space s0 neighbors space s1, there is a connection between locations l0 and l1, vehicle v0 contains space s0 and vehicle v1 has space s1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "f45224ca-d227-40e7-8ea6-1771146f5930", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, if at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "cargo c0 is not in vehicle v1, cargo c0 is not located in vehicle v0, cargo c0 is not situated at location l1, cargo c1 is not at location l0cargo c1 is not present at location l0, cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c1 is not located in vehicle v1, cargo c2 is not in vehicle v0, cargo c2 is not in vehicle v1, cargo c2 is not situated at location l0, cargo c3 is not at location l1cargo c3 is not present at location l1, cargo c3 is not in vehicle v0, cargo c3 is not located in vehicle v1, cargo c4 is not in vehicle v1, cargo c4 is not situated at location l0, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c5 is not located in vehicle v0, cargo c5 is not located in vehicle v1, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not located in vehicle v1, cargo c7 is not in vehicle v0, cargo c7 is not in vehicle v1, cargo c7 is not situated at location l0, cargo c8 is not situated at location l1, cargo v0 is not situated at location l0, cargo v1 is not at location l0cargo v1 is not present at location l0, fuel f0 does not exist in location l0, fuel level f0 does not neighbour fuel level f5, fuel level f0 does not neighbour fuel level f6, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f7, fuel level f2 does not neighbour fuel level f4, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f7, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f3, fuel level f4 does not neighbour fuel level f6, fuel level f4 does not neighbour fuel level f7, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f7, fuel level f6 does not neighbour fuel level f0, fuel level f6 does not neighbour fuel level f1, fuel level f6 does not neighbour fuel level f3, fuel level f6 does not neighbour fuel level f4, fuel level f6 does not neighbour fuel level f5, fuel level f7 does not neighbour fuel level f0, fuel level f7 does not neighbour fuel level f1, fuel level f7 does not neighbour fuel level f5, fuel level f7 does not neighbour fuel level f6, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f7 are not neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f1 and f6 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f2 and f6 are not neighbors, fuel-levels f2 and f7 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f3 and f6 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f5 and f4 are not neighbors, fuel-levels f6 and f2 are not neighbors, fuel-levels f7 and f2 are not neighbors, fuel-levels f7 and f3 are not neighbors, fuel-levels f7 and f4 are not neighbors, location l0 does not have fuel f1, location l0 does not have fuel f2, location l0 does not have fuel f4, location l0 does not have fuel f5, location l0 does not have fuel f6, location l0 does not have fuel f7, location l1 does not have a fuel-level of f0, location l1 does not have a fuel-level of f1, location l1 does not have a fuel-level of f5, location l1 does not have fuel f2, location l1 does not have fuel f3, location l1 does not have fuel f4, location l1 does not have fuel f7, space s1 does not neighbour space s0, vehicle v0 does not contain cargo c4, vehicle v0 does not contain cargo c6, vehicle v0 does not contain cargo c8, vehicle v0 does not have space s1, vehicle v1 does not contain cargo c8 and vehicle v1 does not contain space s0", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "9636ccd0-168a-42cc-a41d-03b658f9342b", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. In this state, if at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, what would be all of the properties of the state? Write None if there are none.", "answer": "cargo c0 is not at location l1cargo c0 is not present at location l1, cargo c0 is not in vehicle v0, cargo c0 is not located in vehicle v1, cargo c0 is situated at location l0, cargo c1 is not at location l0cargo c1 is not present at location l0, cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c1 is not located in vehicle v1, cargo c2 is at location l1, cargo c2 is not located in vehicle v0, cargo c2 is not situated at location l0, cargo c3 is at location l0, cargo c3 is not at location l1cargo c3 is not present at location l1, cargo c3 is not in vehicle v1, cargo c3 is not located in vehicle v0, cargo c4 is at location l1, cargo c4 is not at location l0cargo c4 is not present at location l0, cargo c4 is not in vehicle v1, cargo c4 is not located in vehicle v0, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c5 is not in vehicle v1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not in vehicle v1, cargo c6 is not located in vehicle v0, cargo c7 is not at location l0cargo c7 is not present at location l0, cargo c7 is not located in vehicle v1, cargo c7 is present at location l1, cargo c8 is not in vehicle v1, cargo c8 is not situated at location l1, cargo c8 is present at location l0, cargo v0 is not situated at location l0, cargo v0 is situated at location l1, cargo v1 is not situated at location l0, cargo v1 is present at location l1, fuel f1 does not exist in location l0, fuel f1 does not exist in location l1, fuel f4 does not exist in location l0, fuel f5 does not exist in location l1, fuel f6 exists in location l1, fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f4, fuel level f0 does not neighbour fuel level f5, fuel level f0 does not neighbour fuel level f6, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f4, fuel level f1 neighbors fuel level f2, fuel level f2 does not neighbour fuel level f0, fuel level f2 neighbors fuel level f3, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f5, fuel level f3 neighbors fuel level f4, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f3, fuel level f4 does not neighbour fuel level f6, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f3, fuel level f6 does not neighbour fuel level f1, fuel level f6 does not neighbour fuel level f3, fuel level f6 does not neighbour fuel level f5, fuel level f6 neighbors fuel level f7, fuel level f7 does not neighbour fuel level f0, fuel level f7 does not neighbour fuel level f1, fuel level f7 does not neighbour fuel level f2, fuel level f7 does not neighbour fuel level f4, fuel level f7 does not neighbour fuel level f5, fuel level f7 does not neighbour fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f7 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f1 and f6 are not neighbors, fuel-levels f1 and f7 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f2 and f6 are not neighbors, fuel-levels f2 and f7 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f3 and f6 are not neighbors, fuel-levels f3 and f7 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f4 and f7 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f4 are not neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f5 and f7 are not neighbors, fuel-levels f6 and f0 are not neighbors, fuel-levels f6 and f2 are not neighbors, fuel-levels f6 and f4 are not neighbors, fuel-levels f7 and f3 are not neighbors, location l0 and location l1 are connected, location l0 does not have a fuel-level of f0, location l0 does not have a fuel-level of f2, location l0 does not have a fuel-level of f5, location l0 does not have a fuel-level of f6, location l0 does not have fuel f7, location l0 has a fuel-level of f3, location l1 does not have a fuel-level of f4, location l1 does not have a fuel-level of f7, location l1 does not have fuel f0, location l1 does not have fuel f2, location l1 does not have fuel f3, location l1 is connected to location l0, space s1 does not neighbour space s0, spaces s0 and s1 are neighbors, vehicle v0 contains cargo c1, vehicle v0 does not contain cargo c5, vehicle v0 does not contain cargo c7, vehicle v0 does not contain cargo c8, vehicle v0 does not contain space s1, vehicle v0 has space s0, vehicle v1 contains space s1, vehicle v1 does not contain cargo c2 and vehicle v1 does not contain space s0", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "d39fa253-767b-49a9-8f8a-4983ca2f47fa", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, if vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "17de60c7-f855-4c13-bbfe-437bfc31b808", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, if vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "143396a2-4da3-4fba-b7a4-9e9b93008c95", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_5", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, if vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "88246e86-64d1-495e-9ea9-8ab2a2f232fc", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, if vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "898dfd6b-a279-450a-ada8-e845602eeeb6", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, if vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, is it True or False that cargo v0 is not situated at location l1, cargo v0 is situated at location l0, location l1 does not have a fuel-level of f5 and location l1 has a fuel-level of f4?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "9754380e-38fd-43f6-a4d1-453981204988", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, if vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, is it True or False that cargo v0 is at location l0, cargo v0 is not at location l1cargo v0 is not present at location l1, location l1 does not have a fuel-level of f4 and location l1 has a fuel-level of f5?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "ec77b0c4-15da-4b14-b486-3a560821cdb8", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, if vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, is it True or False that cargo v0 is not situated at location l1, cargo v0 is situated at location l0, location l1 does not have a fuel-level of f5 and location l1 has a fuel-level of f4?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "0a3db4be-4011-4021-aabb-ed73eec95914", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_12", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, if vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, is it True or False that cargo c1 is not located in vehicle v0, cargo c6 is not in vehicle v0, location l1 has a fuel-level of f3 and vehicle v0 does not have space s1?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "b912654e-08b0-4a91-8bb1-721ce42eecaf", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_13", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, if vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "bd28f72d-691c-49e1-b298-0377acbd862c", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_14", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, if vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "ca43c480-3534-44ca-ab0a-a3a580bc75e6", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_15", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, if vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "f5491c00-47a5-4eac-9903-5a66a1460acb", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_16", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, if vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "21f9cf5a-c90c-4d0a-8e05-c4861691c8ec", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, if vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, what would be all of the valid properties of the state? Write None if there are none.", "answer": "cargo c0 is at location l0, cargo c1 is present at location l0, cargo c2 is located in vehicle v0, cargo c3 is situated at location l0, cargo c4 is situated at location l1, cargo c5 is present at location l0, cargo c6 is present at location l1, cargo c7 is at location l1, cargo c8 is situated at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f3 neighbors fuel level f4, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 has a fuel-level of f2, location l0 is connected to location l1, location l1 has fuel f4, location l1 is connected to location l0, spaces s0 and s1 are neighbors, vehicle v0 has space s0 and vehicle v1 has space s1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "43ee985e-76b0-4f4e-b3b2-ca03dfdd795f", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, if vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "cargo c0 is not located in vehicle v0, cargo c0 is not situated at location l1, cargo c1 is not located in vehicle v1, cargo c1 is not situated at location l1, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c2 is not in vehicle v1, cargo c2 is not situated at location l1, cargo c3 is not situated at location l1, cargo c4 is not at location l0cargo c4 is not present at location l0, cargo c4 is not located in vehicle v0, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c5 is not in vehicle v1, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c7 is not in vehicle v0, cargo c7 is not in vehicle v1, cargo c7 is not situated at location l0, cargo c8 is not situated at location l1, cargo v0 is not situated at location l1, cargo v1 is not at location l0cargo v1 is not present at location l0, fuel f0 does not exist in location l0, fuel f0 does not exist in location l1, fuel f1 does not exist in location l1, fuel f3 does not exist in location l0, fuel f4 does not exist in location l0, fuel f5 does not exist in location l0, fuel f7 does not exist in location l0, fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f3, fuel level f0 does not neighbour fuel level f5, fuel level f0 does not neighbour fuel level f6, fuel level f0 does not neighbour fuel level f7, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f6, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f6, fuel level f3 does not neighbour fuel level f7, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f6, fuel level f4 does not neighbour fuel level f7, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f4, fuel level f5 does not neighbour fuel level f7, fuel level f6 does not neighbour fuel level f0, fuel level f6 does not neighbour fuel level f2, fuel level f6 does not neighbour fuel level f4, fuel level f6 does not neighbour fuel level f5, fuel level f7 does not neighbour fuel level f1, fuel level f7 does not neighbour fuel level f2, fuel level f7 does not neighbour fuel level f5, fuel level f7 does not neighbour fuel level f6, fuel-levels f0 and f4 are not neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f1 and f7 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f2 and f6 are not neighbors, fuel-levels f2 and f7 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f6 and f1 are not neighbors, fuel-levels f6 and f3 are not neighbors, fuel-levels f7 and f0 are not neighbors, fuel-levels f7 and f3 are not neighbors, fuel-levels f7 and f4 are not neighbors, location l0 does not have a fuel-level of f1, location l0 does not have a fuel-level of f6, location l1 does not have a fuel-level of f3, location l1 does not have a fuel-level of f5, location l1 does not have fuel f2, location l1 does not have fuel f6, location l1 does not have fuel f7, spaces s1 and s0 are not neighbors, vehicle v0 does not contain cargo c1, vehicle v0 does not contain cargo c3, vehicle v0 does not contain cargo c5, vehicle v0 does not contain cargo c6, vehicle v0 does not contain cargo c8, vehicle v0 does not contain space s1, vehicle v1 does not contain cargo c0, vehicle v1 does not contain cargo c3, vehicle v1 does not contain cargo c4, vehicle v1 does not contain cargo c6, vehicle v1 does not contain cargo c8 and vehicle v1 does not contain space s0", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "e2b94642-46e1-496b-81c7-85319ffc8e04", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, if vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, what would be all of the properties of the state? Write None if there are none.", "answer": "cargo c0 is not at location l1cargo c0 is not present at location l1, cargo c0 is situated at location l0, cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c1 is not in vehicle v0, cargo c1 is present at location l0, cargo c2 is in vehicle v0, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c2 is not at location l1cargo c2 is not present at location l1, cargo c3 is not situated at location l1, cargo c3 is situated at location l0, cargo c4 is not at location l0cargo c4 is not present at location l0, cargo c4 is present at location l1, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c5 is not located in vehicle v0, cargo c5 is situated at location l0, cargo c6 is not located in vehicle v1, cargo c6 is not situated at location l0, cargo c6 is situated at location l1, cargo c7 is at location l1, cargo c7 is not at location l0cargo c7 is not present at location l0, cargo c7 is not in vehicle v1, cargo c7 is not located in vehicle v0, cargo c8 is not in vehicle v0, cargo c8 is not located in vehicle v1, cargo c8 is not situated at location l1, cargo c8 is situated at location l0, cargo v0 is not situated at location l1, cargo v0 is situated at location l0, cargo v1 is not at location l0cargo v1 is not present at location l0, cargo v1 is present at location l1, fuel f0 does not exist in location l0, fuel f1 does not exist in location l1, fuel f3 does not exist in location l0, fuel f3 does not exist in location l1, fuel f5 does not exist in location l0, fuel f6 does not exist in location l1, fuel level f0 does not neighbour fuel level f2, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f7, fuel level f2 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f6, fuel level f3 neighbors fuel level f4, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f3, fuel level f4 does not neighbour fuel level f6, fuel level f4 does not neighbour fuel level f7, fuel level f4 neighbors fuel level f5, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f4, fuel level f5 neighbors fuel level f6, fuel level f6 does not neighbour fuel level f0, fuel level f6 does not neighbour fuel level f1, fuel level f6 does not neighbour fuel level f4, fuel level f6 neighbors fuel level f7, fuel level f7 does not neighbour fuel level f1, fuel level f7 does not neighbour fuel level f2, fuel level f7 does not neighbour fuel level f3, fuel level f7 does not neighbour fuel level f4, fuel level f7 does not neighbour fuel level f5, fuel level f7 does not neighbour fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f0 and f6 are not neighbors, fuel-levels f0 and f7 are not neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f1 and f6 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f2 and f6 are not neighbors, fuel-levels f2 and f7 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f3 and f7 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f7 are not neighbors, fuel-levels f6 and f2 are not neighbors, fuel-levels f6 and f3 are not neighbors, fuel-levels f6 and f5 are not neighbors, fuel-levels f7 and f0 are not neighbors, location l0 does not have a fuel-level of f1, location l0 does not have a fuel-level of f6, location l0 does not have a fuel-level of f7, location l0 does not have fuel f4, location l0 has fuel f2, location l1 does not have a fuel-level of f0, location l1 does not have a fuel-level of f7, location l1 does not have fuel f2, location l1 does not have fuel f5, location l1 has a fuel-level of f4, location l1 is connected to location l0, space s1 does not neighbour space s0, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s0, vehicle v0 does not contain cargo c0, vehicle v0 does not contain cargo c3, vehicle v0 does not contain cargo c4, vehicle v0 does not contain cargo c6, vehicle v0 does not have space s1, vehicle v1 does not contain cargo c0, vehicle v1 does not contain cargo c1, vehicle v1 does not contain cargo c2, vehicle v1 does not contain cargo c3, vehicle v1 does not contain cargo c4, vehicle v1 does not contain cargo c5, vehicle v1 does not contain space s0 and vehicle v1 has space s1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "ffc94968-0a75-4e1c-8237-51475fa5e8f4", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, if cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "676dfa36-7daf-4b57-9160-2da4f7338d47", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, if at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "7b2f682c-15ab-4070-9509-22b3ad16d436", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_5", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, if at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "678d5891-3eb8-46dd-82c2-ca1091f1ede7", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, if at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "4e89bcfd-8add-40f0-863b-7d37902dfc48", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, if cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, is it True or False that cargo c4 is not located in vehicle v0, cargo c4 is situated at location l0, vehicle v0 does not have space s0 and vehicle v0 has space s1?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "e1a010b0-3a91-45ea-903d-21616a9eca18", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, if cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, is it True or False that cargo c4 is at location l0, cargo c4 is in vehicle v0, vehicle v0 does not contain space s0 and vehicle v0 does not have space s1?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "219cbc62-ac7c-4bf9-8159-bae6416a263b", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, if at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, is it True or False that cargo c4 is situated at location l0, vehicle v0 contains space s1, vehicle v0 does not contain cargo c4 and vehicle v0 does not have space s0?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "84889fec-9563-4ca8-87c7-b156d02ff942", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_12", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, if cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, is it True or False that cargo c3 is present at location l1, cargo c7 is not at location l1cargo c7 is not present at location l1, fuel f7 does not exist in location l1 and location l0 has fuel f6?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "200af6d4-f77f-45ce-92b8-8042425bb146", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_13", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, if cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "5168fb8a-6ee8-439e-9c2f-e1e0bf5b157d", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_14", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, if at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "67620532-0970-4625-99dd-f8d3fe24a862", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_15", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, if cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "28803f77-79dd-4028-88b8-c3473f33a64c", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_16", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, if at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "8a6d2161-c749-4050-a613-7507b1999d46", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, if at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, what would be all of the valid properties of the state? Write None if there are none.", "answer": "cargo c0 is present at location l0, cargo c1 is situated at location l0, cargo c2 is situated at location l0, cargo c3 is situated at location l0, cargo c4 is at location l0, cargo c5 is at location l0, cargo c6 is present at location l1, cargo c7 is situated at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is present at location l1, fuel level f2 neighbors fuel level f3, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f1, location l1 has fuel f3, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "18eb2fc0-57f2-415d-951e-c964a0de14f7", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, if at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "cargo c0 is not located in vehicle v0, cargo c0 is not situated at location l1, cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c1 is not in vehicle v0, cargo c1 is not located in vehicle v1, cargo c2 is not located in vehicle v1, cargo c2 is not situated at location l1, cargo c3 is not at location l1cargo c3 is not present at location l1, cargo c3 is not located in vehicle v0, cargo c3 is not located in vehicle v1, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c4 is not in vehicle v1, cargo c5 is not in vehicle v1, cargo c5 is not located in vehicle v0, cargo c5 is not situated at location l1, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not in vehicle v1, cargo c7 is not located in vehicle v0, cargo c7 is not located in vehicle v1, cargo c7 is not situated at location l0, cargo c8 is not at location l1cargo c8 is not present at location l1, cargo v0 is not at location l1cargo v0 is not present at location l1, cargo v1 is not at location l0cargo v1 is not present at location l0, fuel f0 does not exist in location l0, fuel f2 does not exist in location l1, fuel f3 does not exist in location l0, fuel f5 does not exist in location l1, fuel f7 does not exist in location l0, fuel level f0 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f6, fuel level f1 does not neighbour fuel level f7, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f6, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f6, fuel level f3 does not neighbour fuel level f7, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f6, fuel level f4 does not neighbour fuel level f7, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f7, fuel level f6 does not neighbour fuel level f0, fuel level f6 does not neighbour fuel level f1, fuel level f6 does not neighbour fuel level f2, fuel level f6 does not neighbour fuel level f3, fuel level f6 does not neighbour fuel level f4, fuel level f7 does not neighbour fuel level f0, fuel level f7 does not neighbour fuel level f1, fuel level f7 does not neighbour fuel level f2, fuel level f7 does not neighbour fuel level f3, fuel level f7 does not neighbour fuel level f4, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f6 are not neighbors, fuel-levels f0 and f7 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f2 and f7 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f4 are not neighbors, fuel-levels f6 and f5 are not neighbors, fuel-levels f7 and f5 are not neighbors, fuel-levels f7 and f6 are not neighbors, location l0 does not have a fuel-level of f2, location l0 does not have a fuel-level of f5, location l0 does not have fuel f4, location l0 does not have fuel f6, location l1 does not have a fuel-level of f0, location l1 does not have a fuel-level of f1, location l1 does not have fuel f4, location l1 does not have fuel f6, location l1 does not have fuel f7, spaces s1 and s0 are not neighbors, vehicle v0 does not contain cargo c2, vehicle v0 does not contain cargo c4, vehicle v0 does not contain cargo c6, vehicle v0 does not contain cargo c8, vehicle v0 does not have space s0, vehicle v1 does not contain cargo c0, vehicle v1 does not contain cargo c8 and vehicle v1 does not contain space s0", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "cc923fd8-152e-42c7-8846-81c835bd6693", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, if at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, what would be all of the properties of the state? Write None if there are none.", "answer": "cargo c0 is not situated at location l1, cargo c0 is situated at location l0, cargo c1 is not located in vehicle v0, cargo c1 is not situated at location l1, cargo c1 is situated at location l0, cargo c2 is not in vehicle v0, cargo c2 is not situated at location l1, cargo c2 is present at location l0, cargo c3 is not situated at location l1, cargo c3 is situated at location l0, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c4 is not in vehicle v0, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c5 is not located in vehicle v0, cargo c6 is at location l1, cargo c6 is not in vehicle v1, cargo c6 is not situated at location l0, cargo c7 is not in vehicle v1, cargo c7 is not located in vehicle v0, cargo c7 is not situated at location l0, cargo c7 is present at location l1, cargo c8 is not located in vehicle v0, cargo c8 is not located in vehicle v1, cargo c8 is not situated at location l1, cargo c8 is situated at location l0, cargo v0 is not situated at location l1, cargo v0 is present at location l0, cargo v1 is not situated at location l0, cargo v1 is present at location l1, fuel f0 does not exist in location l0, fuel f1 exists in location l0, fuel f2 does not exist in location l1, fuel f3 does not exist in location l0, fuel f3 exists in location l1, fuel f4 does not exist in location l0, fuel f5 does not exist in location l0, fuel f6 does not exist in location l0, fuel f6 does not exist in location l1, fuel f7 does not exist in location l0, fuel f7 does not exist in location l1, fuel level f0 does not neighbour fuel level f7, fuel level f0 neighbors fuel level f1, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f7, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f1, fuel level f2 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f6, fuel level f2 neighbors fuel level f3, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f7, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f6, fuel level f4 does not neighbour fuel level f7, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f4, fuel level f5 neighbors fuel level f6, fuel level f6 does not neighbour fuel level f2, fuel level f6 does not neighbour fuel level f3, fuel level f6 does not neighbour fuel level f4, fuel level f6 neighbors fuel level f7, fuel level f7 does not neighbour fuel level f0, fuel level f7 does not neighbour fuel level f2, fuel level f7 does not neighbour fuel level f5, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f0 and f6 are not neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f1 and f6 are not neighbors, fuel-levels f2 and f7 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f3 and f6 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f5 and f7 are not neighbors, fuel-levels f6 and f0 are not neighbors, fuel-levels f6 and f1 are not neighbors, fuel-levels f6 and f5 are not neighbors, fuel-levels f7 and f1 are not neighbors, fuel-levels f7 and f3 are not neighbors, fuel-levels f7 and f4 are not neighbors, fuel-levels f7 and f6 are not neighbors, location l0 does not have fuel f2, location l1 and location l0 are connected, location l1 does not have a fuel-level of f1, location l1 does not have a fuel-level of f4, location l1 does not have a fuel-level of f5, location l1 does not have fuel f0, space s0 neighbors space s1, spaces s1 and s0 are not neighbors, there is a connection between locations l0 and l1, vehicle v0 does not contain cargo c0, vehicle v0 does not contain cargo c3, vehicle v0 does not contain cargo c6, vehicle v0 does not contain space s0, vehicle v0 has space s1, vehicle v1 contains space s1, vehicle v1 does not contain cargo c0, vehicle v1 does not contain cargo c1, vehicle v1 does not contain cargo c2, vehicle v1 does not contain cargo c3, vehicle v1 does not contain cargo c4, vehicle v1 does not contain cargo c5 and vehicle v1 does not have space s0", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "156e7359-4125-4df7-8e05-4324c8792b60", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, if cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l0, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "13c2e8ce-0a3a-4ce9-93f4-5bde92feb391", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, if at location l0, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "7dda974b-1a56-4f6d-b0f6-f8defae2aca2", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_5", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, if cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l0, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "b7e38ee7-f613-4f45-98fd-c7d61a9f34b3", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, if at location l0, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "471384c9-23b2-47c2-8cc4-11af28c08c97", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, if cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l0, is it True or False that cargo c6 is at location l0, cargo c6 is not in vehicle v0, vehicle v0 does not contain space s0 and vehicle v0 has space s1?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "47adc64b-a95c-402a-90a1-b01e8c33fd19", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, if cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l0, is it True or False that cargo c6 is located in vehicle v0, cargo c6 is situated at location l0, vehicle v0 does not have space s0 and vehicle v0 does not have space s1?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "adc27253-5760-40c3-94d3-0d541c49a8ef", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, if cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l0, is it True or False that cargo c6 is situated at location l0, vehicle v0 contains space s1, vehicle v0 does not contain cargo c6 and vehicle v0 does not contain space s0?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "489b65c5-cc56-42c6-b968-d6093e6ecc85", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_12", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, if at location l0, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, is it True or False that cargo c0 is not in vehicle v1, fuel f2 does not exist in location l0, location l1 does not have fuel f6 and vehicle v1 does not contain cargo c8?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "cb92af92-dca6-4c01-8390-2d0ac7cb93ea", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_13", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, if at location l0, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "cd12b5b6-5095-4f54-8342-d2d951f9cbe8", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_14", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, if cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l0, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "aeaee587-3622-4410-942a-e4866cc79933", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_15", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, if at location l0, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "2e6d653c-e5d3-4ca5-a0a3-e3133803fe2a", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_16", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, if cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l0, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "8972db58-326e-4947-bdbe-de79cbe62e39", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, if at location l0, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, what would be all of the valid properties of the state? Write None if there are none.", "answer": "cargo c0 is present at location l0, cargo c1 is present at location l0, cargo c2 is situated at location l0, cargo c3 is situated at location l0, cargo c4 is present at location l0, cargo c5 is present at location l0, cargo c6 is present at location l0, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is situated at location l0, cargo v1 is situated at location l1, fuel f0 exists in location l0, fuel f2 exists in location l1, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l1 and location l0 are connected, spaces s0 and s1 are neighbors, there is a connection between locations l0 and l1, vehicle v0 has space s1 and vehicle v1 contains space s1", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "6d58b695-8d4d-45d8-8861-408a0275aa53", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, if cargo c6 is unloaded from vehicle v0 with space s0 and space s1 at location l0, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "cargo c0 is not located in vehicle v0, cargo c0 is not located in vehicle v1, cargo c0 is not situated at location l1, cargo c1 is not in vehicle v1, cargo c1 is not situated at location l1, cargo c2 is not at location l1cargo c2 is not present at location l1, cargo c2 is not located in vehicle v0, cargo c3 is not at location l1cargo c3 is not present at location l1, cargo c3 is not in vehicle v1, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c4 is not located in vehicle v1, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c5 is not located in vehicle v0, cargo c6 is not at location l1cargo c6 is not present at location l1, cargo c6 is not in vehicle v0, cargo c7 is not located in vehicle v1, cargo c7 is not situated at location l0, cargo c8 is not in vehicle v0, cargo c8 is not in vehicle v1, cargo c8 is not situated at location l1, cargo v0 is not at location l1cargo v0 is not present at location l1, cargo v1 is not at location l0cargo v1 is not present at location l0, fuel f1 does not exist in location l0, fuel f1 does not exist in location l1, fuel f7 does not exist in location l0, fuel f7 does not exist in location l1, fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f3, fuel level f0 does not neighbour fuel level f4, fuel level f0 does not neighbour fuel level f5, fuel level f0 does not neighbour fuel level f7, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f6, fuel level f1 does not neighbour fuel level f7, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f1, fuel level f2 does not neighbour fuel level f7, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f7, fuel level f4 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f3, fuel level f4 does not neighbour fuel level f6, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f4, fuel level f5 does not neighbour fuel level f7, fuel level f6 does not neighbour fuel level f0, fuel level f6 does not neighbour fuel level f1, fuel level f6 does not neighbour fuel level f2, fuel level f6 does not neighbour fuel level f3, fuel level f6 does not neighbour fuel level f5, fuel level f7 does not neighbour fuel level f0, fuel level f7 does not neighbour fuel level f2, fuel level f7 does not neighbour fuel level f5, fuel level f7 does not neighbour fuel level f6, fuel-levels f0 and f6 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f2 and f6 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f3 and f6 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f7 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f6 and f4 are not neighbors, fuel-levels f7 and f1 are not neighbors, fuel-levels f7 and f3 are not neighbors, fuel-levels f7 and f4 are not neighbors, location l0 does not have a fuel-level of f2, location l0 does not have a fuel-level of f3, location l0 does not have fuel f4, location l0 does not have fuel f5, location l0 does not have fuel f6, location l1 does not have a fuel-level of f0, location l1 does not have a fuel-level of f4, location l1 does not have a fuel-level of f6, location l1 does not have fuel f3, location l1 does not have fuel f5, space s1 does not neighbour space s0, vehicle v0 does not contain cargo c1, vehicle v0 does not contain cargo c3, vehicle v0 does not contain cargo c4, vehicle v0 does not contain cargo c7, vehicle v0 does not have space s0, vehicle v1 does not contain cargo c2, vehicle v1 does not contain cargo c5, vehicle v1 does not contain cargo c6 and vehicle v1 does not contain space s0", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "49527804-503c-4d2e-ae4a-ec9f38c9a34f", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, if at location l0, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, what would be all of the properties of the state? Write None if there are none.", "answer": "cargo c0 is not located in vehicle v0, cargo c0 is not situated at location l1, cargo c0 is present at location l0, cargo c1 is at location l0, cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c1 is not in vehicle v0, cargo c2 is at location l0, cargo c2 is not at location l1cargo c2 is not present at location l1, cargo c2 is not in vehicle v0, cargo c3 is not at location l1cargo c3 is not present at location l1, cargo c3 is present at location l0, cargo c4 is at location l0, cargo c4 is not located in vehicle v0, cargo c4 is not situated at location l1, cargo c5 is at location l0, cargo c5 is not in vehicle v0, cargo c5 is not situated at location l1, cargo c6 is at location l0, cargo c6 is not located in vehicle v1, cargo c6 is not situated at location l1, cargo c7 is not at location l0cargo c7 is not present at location l0, cargo c7 is not in vehicle v0, cargo c7 is not in vehicle v1, cargo c7 is present at location l1, cargo c8 is not at location l1cargo c8 is not present at location l1, cargo c8 is not located in vehicle v1, cargo c8 is present at location l0, cargo v0 is at location l0, cargo v0 is not at location l1cargo v0 is not present at location l1, cargo v1 is not situated at location l0, cargo v1 is situated at location l1, fuel f1 does not exist in location l0, fuel f4 does not exist in location l0, fuel f6 does not exist in location l0, fuel f7 does not exist in location l1, fuel level f0 neighbors fuel level f1, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f3, fuel level f1 neighbors fuel level f2, fuel level f2 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f6, fuel level f2 neighbors fuel level f3, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f5, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f6, fuel level f4 does not neighbour fuel level f7, fuel level f4 neighbors fuel level f5, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f4, fuel level f6 does not neighbour fuel level f1, fuel level f6 does not neighbour fuel level f3, fuel level f6 does not neighbour fuel level f4, fuel level f6 neighbors fuel level f7, fuel level f7 does not neighbour fuel level f1, fuel level f7 does not neighbour fuel level f5, fuel level f7 does not neighbour fuel level f6, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f0 and f6 are not neighbors, fuel-levels f0 and f7 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f1 and f6 are not neighbors, fuel-levels f1 and f7 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f2 and f7 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f3 and f6 are not neighbors, fuel-levels f3 and f7 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f5 and f7 are not neighbors, fuel-levels f6 and f0 are not neighbors, fuel-levels f6 and f2 are not neighbors, fuel-levels f6 and f5 are not neighbors, fuel-levels f7 and f0 are not neighbors, fuel-levels f7 and f2 are not neighbors, fuel-levels f7 and f3 are not neighbors, fuel-levels f7 and f4 are not neighbors, location l0 does not have a fuel-level of f2, location l0 does not have a fuel-level of f5, location l0 does not have fuel f3, location l0 does not have fuel f7, location l0 has fuel f0, location l1 does not have a fuel-level of f0, location l1 does not have a fuel-level of f1, location l1 does not have a fuel-level of f4, location l1 does not have a fuel-level of f5, location l1 does not have a fuel-level of f6, location l1 does not have fuel f3, location l1 has fuel f2, location l1 is connected to location l0, spaces s0 and s1 are neighbors, spaces s1 and s0 are not neighbors, there is a connection between locations l0 and l1, vehicle v0 contains space s1, vehicle v0 does not contain cargo c3, vehicle v0 does not contain cargo c6, vehicle v0 does not contain cargo c8, vehicle v0 does not contain space s0, vehicle v1 does not contain cargo c0, vehicle v1 does not contain cargo c1, vehicle v1 does not contain cargo c2, vehicle v1 does not contain cargo c3, vehicle v1 does not contain cargo c4, vehicle v1 does not contain cargo c5, vehicle v1 does not have space s0 and vehicle v1 has space s1", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is present at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is situated at location l0, cargo c4 is present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l0, cargo v1 is at location l1, fuel level f1 neighbors fuel level f2, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "b378169e-64ff-4132-9ce8-0eef4cdeeb81", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, is the number of objects equal to 23? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "68a26e50-b76f-4fde-903e-65b50aeaedd7", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, is the number of objects equal to 28? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "334ad457-3654-4ee5-a6b2-fb1e0e396c25", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, is the number of executable actions equal to 14? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "b1903127-8275-4551-a8f2-49f1d20bcb1b", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, is the number of executable actions equal to 12? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "8969ed59-f76b-4ad5-a852-5e6c572e8653", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_5", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, is the number of inexecutable actions equal to 354? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "3f02ea77-0160-4224-a77d-2a7739e7b77f", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_6", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, is the number of inexecutable actions equal to 290? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "2ce4f67a-b9f2-445a-919d-6733033065ec", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_7", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, is the number of valid properties of the state equal to 25? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "c1d577b3-3938-410b-aa74-be74640ea0f1", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_8", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, is the number of valid properties of the state equal to 28? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "0d765426-dd40-47e3-bccd-fe90a7ebec1d", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_9", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 95? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "371417b6-c001-46fa-a5db-32716146ae7a", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_10", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 99? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "460ac0ba-d9bf-4ec7-9e86-00beeafe3a82", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, is the number of base properties of the state equal to 2? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "192ad3e0-5aee-4007-b6f5-00c5451a2f5c", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_12", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, is the number of base properties of the state equal to 3? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "8042ba99-ebe9-4321-8172-2d1208ea26a9", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_13", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, is the number of derived properties of the state equal to 2? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "59a301ed-a4ca-4f3d-80aa-bdd91bb8671a", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_14", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, is the number of derived properties of the state equal to 1? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "e889eb88-81ab-4d0f-adb5-39099bce3ce5", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_15", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, is the number of self constraint properties of the state equal to 2? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "b54d281d-56b8-4fe7-bf13-9979ac8061f3", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_16", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, is the number of self constraint properties of the state equal to 3? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "aee294fe-ff73-47f4-a0b4-2f11793b28c0", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_17", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, is the number of static properties of the state equal to 2? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "0448c659-a1e8-4fa7-a4a5-6b36d97a0ab0", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_18", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, is the number of static properties of the state equal to 1? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "e5f2881a-1aec-426d-bfa4-0d20d31f14c2", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, what is the total number of objects? Write as an integer. Write None if there are none.", "answer": "23", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "dfaf3784-7c3d-42fe-87ee-4995d340772e", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, what is the total number of executable actions? Write as an integer. Write None if there are none.", "answer": "14", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "81a31f8e-9de3-4d7d-8f41-47f753b50669", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, what is the total number of inexecutable actions? Write as an integer. Write None if there are none.", "answer": "354", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "31190549-4065-451a-acdc-5c081c6fbede", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, what is the total number of valid properties of the state? Write as an integer. Write None if there are none.", "answer": "25", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "6b899cf1-1cec-4004-9f3b-600245015dcf", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as an integer. Write None if there are none.", "answer": "95", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "fdb7c623-5844-44c6-aded-ec515bb52386", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_6", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, what is the total number of base properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "ecdf3a33-5333-4285-9245-f33abc242992", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, what is the total number of derived properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "311324c6-c1f7-4973-831d-53b8736bf8c3", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_8", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, what is the total number of self constraint properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "fb783772-371a-4bd3-a520-e2fd06ca1c30", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_9", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, what is the total number of static properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "b4291fcf-ddf9-476c-ae6e-10981250c7ae", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 1?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "adb392f1-dea9-4518-8843-2ebb23780e1a", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 2?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "545e0aa5-0501-40c2-8798-749cc4ccd029", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: vehicle v1 moves to location l1 from location l0 that has fuel level f3 and f7 to reach the current state. How many actions are there before the first inexecutable action? Write as an integer. Write None if there are none.", "answer": "0", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "8b47ba51-c942-4b41-97b7-fbbfbbf19555", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. In this state, is the number of objects equal to 23? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "61ad50dd-3e9c-40a2-985c-726ef258bdee", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. In this state, is the number of objects equal to 20? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "33609fe3-5b9d-43bb-93bd-36cd38d4988b", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, is the number of executable actions equal to 12? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "09456aa1-67a7-4a7f-88bd-327dc8e23fec", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, is the number of executable actions equal to 11? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "91902d8e-679b-4437-aa2d-cfb6fa14f275", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_5", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, is the number of inexecutable actions equal to 356? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "d58f5085-2671-4d84-999b-e0b483548191", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_6", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. In this state, is the number of inexecutable actions equal to 319? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "7962e231-dd64-4c45-83d0-23c4f7ce7475", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_7", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, is the number of valid properties of the state equal to 25? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "58e7143e-afa7-4ceb-9a1c-e33fb422ede5", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_8", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, is the number of valid properties of the state equal to 19? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "58412424-7524-436a-afeb-9881191fd1b4", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_9", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 95? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "3f1bd483-3622-4290-b0fd-9f4802a63564", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_10", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 107? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "2a098fc6-5a16-4f51-8f1c-c965bb5dbc30", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, is the number of base properties of the state equal to 2? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "ed1224f4-397a-40f3-b169-26dc2b0f8d80", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_12", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. In this state, is the number of base properties of the state equal to 3? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "855442a1-1674-4613-be41-e0d2237b75c8", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_13", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, is the number of derived properties of the state equal to 2? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "fde9f897-aae2-467a-9bb0-f43682f8b0b0", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_14", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, is the number of derived properties of the state equal to 1? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "2d6e6c57-e184-43d8-846d-b8e1a3630d7a", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_15", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, is the number of self constraint properties of the state equal to 2? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "b055d1a0-714e-4960-aba8-8837defb0ab1", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_16", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, is the number of self constraint properties of the state equal to 1? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "6f82a94f-8afd-43db-b41c-275513b5e1a2", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_17", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, is the number of static properties of the state equal to 2? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "d7a4e41d-6f1c-4686-8f01-5b68260f7827", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_18", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, is the number of static properties of the state equal to 3? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "916d6ca4-12cc-49f5-b124-84b279b8e2a7", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, what is the total number of objects? Write as an integer. Write None if there are none.", "answer": "23", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "7d0b6efe-6481-4b4f-a930-f22851af026b", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, what is the total number of executable actions? Write as an integer. Write None if there are none.", "answer": "12", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "519d52f4-43b2-453c-b271-cc7a0169eec5", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. In this state, what is the total number of inexecutable actions? Write as an integer. Write None if there are none.", "answer": "356", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "25c9858f-8e2d-4cda-8d54-e183475d7c18", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. In this state, what is the total number of valid properties of the state? Write as an integer. Write None if there are none.", "answer": "25", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "58870341-9b87-462a-81f6-60859db2d155", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as an integer. Write None if there are none.", "answer": "95", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "6ae563f9-5ea5-4cbf-b9a9-c4e56ff08e6f", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_6", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. In this state, what is the total number of base properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "0d41e8d1-12d3-4939-91fe-81c65bbcdcf0", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, what is the total number of derived properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "0995b561-d8a7-4c90-92e9-2038c5b8664a", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_8", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, what is the total number of self constraint properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "a67d7195-6ee6-447b-a913-514ee7a284a2", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_9", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, what is the total number of static properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "b0a37b2d-6401-465d-b039-79682708d1db", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 5?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "b1d0866d-c44e-4533-95de-eff125379d86", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 7?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "89130cb6-3c45-46e7-aaf1-bfb757ecd290", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c7 is loaded in vehicle v1 with space s0 and space s1 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. How many actions are there before the first inexecutable action? Write as an integer. Write None if there are none.", "answer": "3", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "411a96b8-e541-4067-aeca-037f57507f8b", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is the number of objects equal to 23? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "78011da9-8667-4197-8507-7b4f1941dc35", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, is the number of objects equal to 19? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "0cc2b3b2-8412-4a64-9fe2-3cca7f97680a", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is the number of executable actions equal to 6? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "5644b954-edcb-4e50-b934-537c5bdac640", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, is the number of executable actions equal to 8? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "ee43b088-d94b-425b-a3cc-cb6636ae1de0", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_5", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is the number of inexecutable actions equal to 362? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "323b03b5-5002-4ff8-b886-4448325a35cb", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_6", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, is the number of inexecutable actions equal to 403? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "187bfa53-32a7-4691-94e3-3192d988bde5", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_7", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, is the number of valid properties of the state equal to 25? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "3a7b676b-cdd4-4116-a1bc-f16442cf45e4", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_8", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is the number of valid properties of the state equal to 24? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "fb56d6e8-ac9b-4713-ba72-6a8c69e04eb2", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_9", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 95? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "fdaafc10-1dba-496e-9b58-920e9c55e4ae", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_10", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 114? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "12fd6aca-f665-4f99-8801-35ef0f45d08b", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is the number of base properties of the state equal to 2? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "3bde1091-7eb9-49ef-9126-2eeab6924e1d", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_12", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, is the number of base properties of the state equal to 1? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "48e35cd3-ed3e-4db5-a5bb-299621d55f0f", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_13", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, is the number of derived properties of the state equal to 2? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "3309d456-26bf-4a9c-8d42-9896bd4e9d66", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_14", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is the number of derived properties of the state equal to 1? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "5282e866-87ee-4d34-bfde-15d6f2f59cd6", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_15", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is the number of self constraint properties of the state equal to 2? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "af9cf966-534a-42a3-8901-51908ead3991", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_16", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is the number of self constraint properties of the state equal to 1? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "142491c6-7719-48b3-9044-59f18a5ebc6c", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_17", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is the number of static properties of the state equal to 2? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "95363d2f-085d-48bb-8aca-5a4e73379d9d", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_18", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, is the number of static properties of the state equal to 1? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "2b98ab02-b706-4a3a-947b-6e32e6bda5fa", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, what is the total number of objects? Write as an integer. Write None if there are none.", "answer": "23", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "448ffac1-59e2-4c2b-8525-d2bc03b86229", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, what is the total number of executable actions? Write as an integer. Write None if there are none.", "answer": "6", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "a2236fdb-104d-4a55-818b-0222429064b7", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, what is the total number of inexecutable actions? Write as an integer. Write None if there are none.", "answer": "362", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "c512a598-e285-4296-8d5c-f63fa2982b90", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, what is the total number of valid properties of the state? Write as an integer. Write None if there are none.", "answer": "25", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "44226fb1-3900-4b8d-9638-e7ccc7d10cc2", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as an integer. Write None if there are none.", "answer": "95", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "8978eda7-bc3b-421f-a7f7-0cd9baba7214", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_6", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, what is the total number of base properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "b1ca0998-cf24-44fa-9010-931bd8659e50", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, what is the total number of derived properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "a5643fd6-386d-4db8-8f53-504cbc191a27", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_8", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, what is the total number of self constraint properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "88876f88-9437-4575-a774-d644c3607390", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_9", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, what is the total number of static properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "7b5e5b7f-a15b-449f-970b-468395c4dd6b", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 10?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "2500d9fa-ff37-4a75-b2cc-240ca5fe3c5c", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 11?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "7b2d6aee-4da6-4d2d-8d05-3063233897ca", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c7 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. How many actions are there before the first inexecutable action? Write as an integer. Write None if there are none.", "answer": "3", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "ac77eedd-7918-4aba-9bed-54bd2978f5bc", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, is the number of objects equal to 23? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "915fa032-59a7-4f9a-9996-4831e637e271", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, is the number of objects equal to 19? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "0b6a1c98-6d57-42ba-8836-83700d3a98bb", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, is the number of executable actions equal to 5? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "fa4784e4-cf6c-453a-957a-9296edbfd49c", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, is the number of executable actions equal to 7? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "83c1cd4b-a5dc-48bc-9ecd-4ee2610ed13b", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_5", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, is the number of inexecutable actions equal to 363? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "4e1b7eaa-68a3-4be3-9781-ecba19ef6b46", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_6", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, is the number of inexecutable actions equal to 294? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "52966535-5190-4b2b-93a0-f7156eb3afe5", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_7", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, is the number of valid properties of the state equal to 25? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "5d368e93-81ac-42b6-9a79-913f92a842b6", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_8", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, is the number of valid properties of the state equal to 26? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "141bad3f-f1d4-4c38-b678-89219344f0b2", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_9", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 95? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "680f6748-6137-46b1-a9e4-cd34afd415e8", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_10", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 86? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "9d5c9242-d0de-46b3-b37a-caf63dd845f6", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, is the number of base properties of the state equal to 2? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "b6216598-ec87-4c99-87da-4a9fd867bb99", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_12", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, is the number of base properties of the state equal to 3? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "d2f3db5c-6182-4fe6-a1a0-26c5754ee29a", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_13", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, is the number of derived properties of the state equal to 2? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "ec7aca34-6aee-46bb-b6e9-b7447f54505f", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_14", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, is the number of derived properties of the state equal to 3? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "14a68606-e64b-4563-9d4e-cd0d2f24da58", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_15", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, is the number of self constraint properties of the state equal to 2? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "36436cc9-f6db-413d-b879-fb363997e7bd", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_16", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, is the number of self constraint properties of the state equal to 3? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "36abaf4c-8864-43fb-8646-71343741fb45", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_17", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, is the number of static properties of the state equal to 2? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "1766cfbc-2dae-4ea1-83e1-a264af91da30", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_18", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, is the number of static properties of the state equal to 3? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "6c8cf916-95a4-42fd-a3c6-4b2d37824c51", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, what is the total number of objects? Write as an integer. Write None if there are none.", "answer": "23", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "7f3f459c-4e49-47c4-8c69-37ad18a9ca03", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, what is the total number of executable actions? Write as an integer. Write None if there are none.", "answer": "5", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "2ec32204-0d8e-41fb-9aba-2235b47410a1", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, what is the total number of inexecutable actions? Write as an integer. Write None if there are none.", "answer": "363", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "d3dd981d-dfac-42f7-ba6b-476f2a116970", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, what is the total number of valid properties of the state? Write as an integer. Write None if there are none.", "answer": "25", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "9b05c701-b6a5-4dd5-beae-b34cd068e235", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as an integer. Write None if there are none.", "answer": "95", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "0d759a16-7d54-44b1-8b63-9ca86cb00864", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_6", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, what is the total number of base properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "131dbfa8-3f3f-4025-85ce-dbf8e86cc8da", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, what is the total number of derived properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "93be0f8b-7a7d-43b1-a5f2-371b268f198f", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_8", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, what is the total number of self constraint properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "172899a5-0058-47d2-8d23-49e1839974e8", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_9", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, what is the total number of static properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "256ac352-6333-4daa-8556-6691d2eebea6", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 15?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "d0a6244d-98a3-49c7-a094-be1f54f335b4", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 18?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "cc88266a-c8a9-4090-b3bd-5c2360c4707c", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, vehicle v1 moves from location l1 which has fuel-levels f3 and f7 to location l0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. How many actions are there before the first inexecutable action? Write as an integer. Write None if there are none.", "answer": "5", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "389319d3-2bc3-4546-8b84-3d76c2923c46", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, is the number of objects equal to 23? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "00b921f6-34ee-4aef-9eb8-d7f7246815ef", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, is the number of objects equal to 28? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "239cad87-fec7-4363-9b4d-0580a3347a91", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, is the number of executable actions equal to 3? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "ae40097f-dca8-4b9b-a3de-4e5525972cc1", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, is the number of executable actions equal to 2? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "21868083-26a0-45bc-ace8-4480c39e2a2b", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_5", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, is the number of inexecutable actions equal to 365? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "9f228e2c-08f1-4e6e-bf0a-20beb0b5b376", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_6", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, is the number of inexecutable actions equal to 368? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "e77f51de-98dc-4519-91a2-91b46302732d", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_7", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, is the number of valid properties of the state equal to 25? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "acac3df9-403f-4293-88bb-197ed5262271", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_8", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, is the number of valid properties of the state equal to 27? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "5378dca6-4d25-49bc-954f-fa599db0d12a", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_9", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 95? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "2d8e80ea-7e73-44f0-ac66-6a9f6ebf4985", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_10", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 91? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "3e427d80-a58c-478c-b1fa-835e17ce5f97", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, is the number of base properties of the state equal to 2? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "e158dd49-845f-487d-bcee-e6c792433aba", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_12", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, is the number of base properties of the state equal to 3? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "49dbf2b0-8203-41cc-8665-0ac7ca390b2e", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_13", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, is the number of derived properties of the state equal to 2? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "1c34f7cb-b5e8-4dee-abc3-46e9d403affa", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_14", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, is the number of derived properties of the state equal to 3? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "e83bb4e4-5b11-4db1-8bda-74d928ec88ec", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_15", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, is the number of self constraint properties of the state equal to 2? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "ad0823d7-1604-4b72-b127-a8612e52ec37", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_16", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, is the number of self constraint properties of the state equal to 3? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "feb8f1fc-60ca-4d28-8745-2dbeb75c4795", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_17", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, is the number of static properties of the state equal to 2? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "51eac592-a413-4c8d-a476-29d7f02f4c5d", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_18", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, is the number of static properties of the state equal to 3? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "8fb24673-6d4f-4d28-83c6-301640467b68", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, what is the total number of objects? Write as an integer. Write None if there are none.", "answer": "23", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "7af73667-e0f5-4375-8c56-cbe871812942", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, what is the total number of executable actions? Write as an integer. Write None if there are none.", "answer": "3", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "67ddebc8-7375-4d0b-b368-0e90f70b80db", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, what is the total number of inexecutable actions? Write as an integer. Write None if there are none.", "answer": "365", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "9f49c0ca-41b9-491c-8208-2fefd6cbf4fd", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, what is the total number of valid properties of the state? Write as an integer. Write None if there are none.", "answer": "25", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "0f977568-1ae1-4cfa-878c-35737feb0786", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as an integer. Write None if there are none.", "answer": "95", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "4605f663-4d30-4694-a9b9-fbb822434011", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_6", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, what is the total number of base properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "322e9e64-d643-4888-935b-8da8267f5af5", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, what is the total number of derived properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "76986e96-b998-4f50-8d35-a70dd68cd56e", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_8", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, what is the total number of self constraint properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "d6c9a12f-fbd3-4f2a-b378-c9971f5fabe2", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_9", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, what is the total number of static properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "85a57db7-685a-46b7-9759-eac3d883a092", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 19?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "cc47dfbf-0cb6-47e7-b6ae-0e0d49d8e406", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 18?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "3eabaf09-d945-401c-ad5c-fe4999853e9b", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, vehicle v0 moves from location l0 which has fuel-levels f6 and f4 to location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. How many actions are there before the first inexecutable action? Write as an integer. Write None if there are none.", "answer": "5", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is situated at location l1, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo c7 is present at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l0, cargo v1 is at location l1, fuel level f0 neighbors fuel level f1, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel-levels f3 and f4 are neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 has fuel f5, location l1 has fuel f7, space s0 neighbors space s1, there is a connection between locations l0 and l1, there is a connection between locations l1 and l0, vehicle v0 has space s1 and vehicle v1 contains space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "0b177674-f223-4e0d-9685-3f6b67091eba", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, some objects may or may not be defined. Is f3 part of the domain? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "5b2e9891-eaab-41a2-a6bb-92632ec29778", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, some objects may or may not be defined. Is v2 part of the domain? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "e65fc588-bd39-48a5-87ac-878fcc7b769c", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, some properties of the state may or may not be defined. Is cargo c3 is at location l0 part of the state? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "081c9377-fc2c-4c71-a5d8-b40abbf6a623", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, some properties of the state may or may not be defined. Is fuel-levels f0 and f1 are neighbors part of the state? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "c582f223-5ee0-4d13-884d-38fa65e4e3e7", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, some properties of the state may or may not be defined. Is cargo c8 is inspected at location l0 part of the state? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "5761e1a3-8bc3-45dc-a7be-c39ebfd34e8e", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_12", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, some properties of the state may or may not be defined. Is fuel-level at gas station is increased from f6 to f5 part of the state? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "6249e519-cc8a-458d-8d10-a3c51a778654", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, is action, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, part of the domain? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "847c40f5-144e-461a-a35c-7d18598db6d0", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, is action, cargo c7 present in vehicle v1 breaks at location l1, part of the domain? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "30506853-eaf5-4355-ab47-f72d4902a845", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_3_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, is action, vehicle v1 moves to location l1 from location l0 that has fuel level f6 and f3, part of the domain? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "8f1bdf55-f326-44a5-aca6-32df20eda881", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_3_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, is action, at location l1, vehicle v0 is pulled over, part of the domain? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "73d717c8-c305-48df-ade3-d31980b33c1d", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_4_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, c0, c2, c3, c6, f0, f5, f6, l0, l1, s0, s1, v0 and v1, is not part of the domain? Write None if all are defined.", "answer": "c0", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "62c076e8-5ae4-4373-8b3f-338c2f4e2a4c", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_4_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, c8, f1, f3, f5, f7 and s2, is not part of the domain? Write None if all are defined.", "answer": "s2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "31915153-7c1a-445c-987a-a0e1d956448e", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, cargo c0 is at location l1, cargo c1 is situated at location l1, cargo c2 is situated at location l1, cargo c5 is situated at location l0, cargo c6 is present at location l1, cargo v0 is at location l1, cargo v1 is situated at location l1, location l0 has a fuel-level of f4 and location l1 has fuel f7, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "4475946f-10a8-42a6-9eef-c3fc3eff4c46", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f5 and f6 are neighbors, spaces s0 and s1 are neighbors and there is a connection between locations l0 and l1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "b7ff6479-b099-4888-ab37-ee84c0959fc7", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, cargo c1 is situated at location l1, cargo c2 is situated at location l1, cargo c3 is at location l0, cargo c5 is present at location l0, cargo c6 is situated at location l1, cargo v0 is present at location l1, cargo v1 is at location l1, fuel f7 exists in location l1, location l0 has a fuel-level of f4, vehicle v0 has space s1 and vehicle v1 contains space s1, is not defined? Write None if all are defined.", "answer": "at location l0, cargo c5 is inspected", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "6a6a3e18-a1a6-470a-8070-1c084ca31cd9", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_8", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, fuel level f3 neighbors fuel level f4, fuel-levels f4 and f5 are neighbors, location l1 and location l0 are connected and space s0 neighbors space s1, is not defined? Write None if all are defined.", "answer": "space s0 is in the same city as space s1", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "ae77bc20-db21-4172-a6ed-a9b69736f957", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_11", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, cargo c0 is not at location l0cargo c0 is not present at location l0, cargo c0 is not in vehicle v0, cargo c0 is not located in vehicle v1, cargo c1 is not in vehicle v0, cargo c1 is not located in vehicle v1, cargo c2 is not in vehicle v1, cargo c4 is not located in vehicle v1, cargo c4 is not situated at location l0, cargo c5 is not situated at location l1, cargo c6 is not located in vehicle v1, cargo c7 is not in vehicle v1, cargo c8 is not at location l1cargo c8 is not present at location l1, cargo v0 is not at location l0cargo v0 is not present at location l0, fuel f1 does not exist in location l1, fuel f6 does not exist in location l1, fuel f7 does not exist in location l0, location l0 does not have a fuel-level of f0, location l0 does not have a fuel-level of f5, location l0 does not have a fuel-level of f6, location l1 does not have a fuel-level of f3, location l1 does not have a fuel-level of f4, location l1 does not have fuel f0, location l1 does not have fuel f2, vehicle v0 does not contain cargo c4, vehicle v0 does not contain cargo c8 and vehicle v1 does not contain space s0, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "b35da365-bce6-45eb-a7aa-774ec5a30e81", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_12", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, fuel level f0 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f7, fuel level f2 does not neighbour fuel level f1, fuel level f2 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f6, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f6, fuel level f3 does not neighbour fuel level f7, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f3, fuel level f4 does not neighbour fuel level f6, fuel level f4 does not neighbour fuel level f7, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f4, fuel level f5 does not neighbour fuel level f7, fuel level f6 does not neighbour fuel level f1, fuel level f7 does not neighbour fuel level f0, fuel level f7 does not neighbour fuel level f4, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f6 are not neighbors, fuel-levels f0 and f7 are not neighbors, fuel-levels f1 and f6 are not neighbors, fuel-levels f2 and f7 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f6 and f0 are not neighbors, fuel-levels f6 and f3 are not neighbors, fuel-levels f6 and f4 are not neighbors, fuel-levels f7 and f2 are not neighbors, fuel-levels f7 and f3 are not neighbors and fuel-levels f7 and f5 are not neighbors, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "b0fc31ca-7d4e-4aeb-b9d8-431edba876eb", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_15", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, cargo c0 is not in vehicle v0, cargo c0 is not situated at location l0, cargo c2 is not in vehicle v1, cargo c2 is not situated at location l0, cargo c3 is not located in vehicle v1, cargo c3 is not situated at location l1, at location l1, cargo c5 is not inspected, cargo c5 is not located in vehicle v1, cargo c6 is not situated at location l0, cargo c7 is not at location l0cargo c7 is not present at location l0, cargo c7 is not in vehicle v1, cargo c7 is not located in vehicle v0, cargo c8 is not at location l1cargo c8 is not present at location l1, cargo v0 is not at location l0cargo v0 is not present at location l0, cargo v1 is not situated at location l0, location l0 does not have a fuel-level of f0, location l0 does not have a fuel-level of f3, location l0 does not have a fuel-level of f5, location l0 does not have a fuel-level of f7, location l0 does not have fuel f2, location l1 does not have a fuel-level of f5, location l1 does not have fuel f1, location l1 does not have fuel f2, location l1 does not have fuel f3, vehicle v0 does not contain cargo c1, vehicle v0 does not contain cargo c2, vehicle v0 does not contain cargo c3, vehicle v0 does not contain cargo c4, vehicle v0 does not contain cargo c6, vehicle v0 does not have space s0, vehicle v1 does not contain cargo c0, vehicle v1 does not contain cargo c1, vehicle v1 does not contain cargo c6, vehicle v1 does not contain cargo c8 and vehicle v1 does not contain space s0, is not defined? Write None if all are defined.", "answer": "at location l1, cargo c5 is not inspected", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "c57990d8-b243-4f14-8e97-52fe4eb2e694", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_16", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, fuel level f4 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f1, fuel-levels f7 and f1 are not neighbors and fuel-level at gas station is not raised from f2 to f7, is not defined? Write None if all are defined.", "answer": "fuel-level at gas station is not raised from f2 to f7", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "d448e1ae-ed1e-47d6-b971-dd54c2724ac3", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_19", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, cargo c0 is not located in vehicle v0, cargo c0 is not located in vehicle v1, cargo c0 is not situated at location l0, cargo c1 is not located in vehicle v0, cargo c1 is not located in vehicle v1, cargo c1 is not situated at location l0, cargo c1 is situated at location l1, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c2 is not in vehicle v0, cargo c2 is not located in vehicle v1, cargo c2 is present at location l1, cargo c3 is not at location l1cargo c3 is not present at location l1, cargo c3 is not located in vehicle v1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c4 is not in vehicle v0, cargo c4 is not situated at location l0, cargo c5 is not in vehicle v0, cargo c5 is not situated at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not located in vehicle v1, cargo c7 is not at location l0cargo c7 is not present at location l0, cargo c7 is not in vehicle v1, cargo c7 is not located in vehicle v0, cargo c7 is situated at location l1, cargo c8 is not at location l1cargo c8 is not present at location l1, cargo c8 is situated at location l0, cargo v0 is at location l1, cargo v0 is not situated at location l0, cargo v1 is not situated at location l0, cargo v1 is situated at location l1, fuel f0 does not exist in location l0, fuel f1 does not exist in location l1, fuel f2 does not exist in location l0, fuel f2 does not exist in location l1, fuel f4 exists in location l0, fuel f6 does not exist in location l1, location l0 does not have a fuel-level of f5, location l0 does not have fuel f1, location l0 does not have fuel f7, location l1 does not have a fuel-level of f0, location l1 does not have a fuel-level of f3, location l1 does not have fuel f4, location l1 does not have fuel f5, location l1 has a fuel-level of f7, vehicle v0 does not contain cargo c3, vehicle v0 does not contain cargo c6, vehicle v0 does not contain space s0, vehicle v1 does not contain cargo c4, vehicle v1 does not contain space s0 and vehicle v1 has space s1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "9f1d6cf5-5af4-4ac8-9f78-95d84e5358de", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_20", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, fuel level f0 does not neighbour fuel level f7, fuel level f0 neighbors fuel level f1, fuel level f1 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f7, fuel level f3 does not neighbour fuel level f0, fuel level f3 neighbors fuel level f4, fuel level f4 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f0, fuel level f5 neighbors fuel level f6, fuel level f6 does not neighbour fuel level f0, fuel level f6 does not neighbour fuel level f3, fuel-levels f1 and f2 are neighbors, fuel-levels f1 and f7 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f5 and f7 are not neighbors, fuel-levels f7 and f0 are not neighbors, fuel-levels f7 and f2 are not neighbors, fuel-levels f7 and f3 are not neighbors, fuel-levels f7 and f4 are not neighbors, location l1 is connected to location l0 and there is a connection between locations l0 and l1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "58670aa4-8dcf-4831-b535-d00bf8a10d59", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_23", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, cargo c0 is not in vehicle v0, cargo c0 is not situated at location l0, cargo c1 is not at location l0cargo c1 is not present at location l0, cargo c1 is not in vehicle v0, cargo c1 is not located in vehicle v1, cargo c1 is present at location l1, cargo c2 is at location l1, cargo c2 is not at location l0cargo c2 is not present at location l0, vehicle v1 does not have cargo c3 secured, cargo c3 is not situated at location l1, cargo c3 is present at location l0, cargo c4 is not in vehicle v0, cargo c4 is not in vehicle v1, cargo c4 is not situated at location l0, cargo c4 is present at location l1, cargo c5 is at location l0, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c5 is not located in vehicle v0, cargo c6 is not located in vehicle v0, cargo c6 is not situated at location l0, cargo c6 is situated at location l1, cargo c7 is not located in vehicle v1, cargo c7 is not situated at location l0, cargo c7 is situated at location l1, cargo c8 is at location l0, cargo c8 is not in vehicle v0, cargo c8 is not in vehicle v1, cargo v0 is at location l1, cargo v1 is not situated at location l0, cargo v1 is present at location l1, fuel f4 does not exist in location l1, fuel f5 does not exist in location l1, fuel f6 does not exist in location l1, location l0 does not have a fuel-level of f5, location l0 does not have fuel f0, location l0 does not have fuel f2, location l0 does not have fuel f6, location l0 does not have fuel f7, location l0 has a fuel-level of f4, location l1 does not have fuel f0, location l1 does not have fuel f1, location l1 does not have fuel f2, location l1 does not have fuel f3, location l1 has fuel f7, vehicle v0 does not contain cargo c3, vehicle v0 does not contain cargo c7, vehicle v0 does not contain space s0, vehicle v0 has space s1, vehicle v1 does not contain cargo c0, vehicle v1 does not contain cargo c2, vehicle v1 does not contain cargo c5, vehicle v1 does not contain cargo c6, vehicle v1 does not have space s0 and vehicle v1 has space s1, is not defined? Write None if all are defined.", "answer": "vehicle v1 does not have cargo c3 secured", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "b3bf4f44-33a7-4a3e-826f-4add851a8483", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_24", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, fuel level f0 neighbors fuel level f1, fuel level f1 does not neighbour fuel level f0, fuel level f2 neighbors fuel level f3, fuel level f3 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f6, fuel level f5 does not neighbour fuel level f1, fuel level f6 does not neighbour fuel level f0, fuel level f7 does not neighbour fuel level f6, fuel-levels f0 and f3 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f1 and f7 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f7 and f4 are not neighbors, location l0 is connected to location l1 and space s0 neighbors space s1, is not defined? Write None if all are defined.", "answer": "gas station does not increase the fuel-level from f0 to f6", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "d042c8c0-9522-4934-9094-64ceb369509e", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_6_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "8a100135-729c-44e2-a96e-8ed66b992b02", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_6_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed:  and at location l0, vehicle v0 is pulled over to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "at location l0, vehicle v0 is pulled over", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "fd021c72-9240-487b-b0e4-139e3f42a5ee", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, some objects may or may not be defined. Is c4 part of the domain? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "6a40c942-52d9-4a8f-a88e-87769b6da057", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. In this state, some objects may or may not be defined. Is f8 part of the domain? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "cb50c43f-6ad5-47ba-af23-6bb112413603", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. In this state, some properties of the state may or may not be defined. Is cargo c6 is at location l1 part of the state? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "911aa43f-b49b-4f70-ab43-772391effcc0", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. In this state, some properties of the state may or may not be defined. Is location l1 is connected to location l0 part of the state? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "51d8caa9-001a-4ae6-913c-e96aa8fd16de", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, some properties of the state may or may not be defined. Is location l1 sells fuel f6 part of the state? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "9ef9f416-cf4d-4957-9709-5399e4991635", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_12", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, some properties of the state may or may not be defined. Is fuel-level at gas station is increased from f1 to f0 part of the state? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "7df3e5f1-b674-473e-ab29-2c25840fad69", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, is action, at location l1, cargo c2 is loaded in vehicle v1 with spaces s1 and s0, part of the domain? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "61ffc59e-69b4-47f0-8121-2174a2eb83bf", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, is action, cargo c6 present in vehicle v1 breaks at location l1, part of the domain? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "92f3ae84-cbb9-4152-9b9e-f10acac69250", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_3_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, is action, vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f1, part of the domain? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "cba6c8ff-7be8-4bec-90b5-cc496e2cce32", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_3_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. In this state, is action, cargo c0 breaks at location l0 in vehicle v1, part of the domain? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "bb0efe53-2f0f-465e-8bb6-fdf8509c6350", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_4_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, c0, c1, c3, c4, c5, c6, c7, c8, f0, f1, f2, f3, f4, f5, f6, f7, l0, s0, s1, v0 and v1, is not part of the domain? Write None if all are defined.", "answer": "f4", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "ef09658f-fcc5-490f-a294-48fc49d80abd", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_4_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, c0, c1, c2, c7, f0, f2, f3, f4, f6, f8, l1, s0 and s1, is not part of the domain? Write None if all are defined.", "answer": "f8", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "881fc4aa-7da9-4d89-92f3-3ec631404890", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, cargo c0 is present at location l0, cargo c2 is situated at location l1, cargo c3 is present at location l0, cargo c4 is situated at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is situated at location l1, cargo c8 is situated at location l0, cargo v0 is situated at location l1, cargo v1 is at location l1, vehicle v0 has space s1 and vehicle v1 contains space s1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "6e79e450-09c6-40e2-9535-dd3a04e23d90", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel level f3 neighbors fuel level f4, fuel level f5 neighbors fuel level f6, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f4 and f5 are neighbors, location l1 is connected to location l0, space s0 neighbors space s1 and there is a connection between locations l0 and l1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "f93f8b46-f0f3-4245-babc-35827902e3bf", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, cargo c0 is at location l0, cargo c1 is situated at location l1, cargo c2 is present at location l1, cargo c3 is at location l0, cargo c4 is present at location l1, cargo c6 is inspected at location l1, cargo v0 is at location l1, cargo v1 is at location l1, vehicle v0 contains space s1 and vehicle v1 contains space s1, is not defined? Write None if all are defined.", "answer": "cargo c6 is inspected at location l1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "90fc6514-37eb-4e87-801b-1a032837c9dc", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_8", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, fuel level f0 neighbors fuel level f1, fuel level f2 neighbors fuel level f3, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f1 and f2 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected and space s0 neighbors space s1, is not defined? Write None if all are defined.", "answer": "fuel-level at gas station is increased from f1 to f0", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "082c9d7c-45c0-4ae8-bde0-b795dcdefca5", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_11", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, cargo c0 is not located in vehicle v1, cargo c0 is not situated at location l1, cargo c1 is not situated at location l0, cargo c2 is not at location l0cargo c2 is not present at location l0, cargo c2 is not located in vehicle v0, cargo c2 is not located in vehicle v1, cargo c3 is not in vehicle v0, cargo c3 is not situated at location l1, cargo c4 is not located in vehicle v0, cargo c4 is not situated at location l0, cargo c5 is not located in vehicle v0, cargo c5 is not situated at location l1, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c7 is not at location l0cargo c7 is not present at location l0, cargo c7 is not located in vehicle v1, cargo c8 is not in vehicle v0, cargo c8 is not situated at location l1, cargo v0 is not at location l0cargo v0 is not present at location l0, cargo v1 is not at location l0cargo v1 is not present at location l0, fuel f4 does not exist in location l0, fuel f5 does not exist in location l1, fuel f6 does not exist in location l0, location l0 does not have a fuel-level of f1, location l0 does not have a fuel-level of f5, location l1 does not have a fuel-level of f2, location l1 does not have a fuel-level of f3, location l1 does not have a fuel-level of f4, location l1 does not have fuel f0, vehicle v0 does not contain cargo c1, vehicle v0 does not contain cargo c6 and vehicle v0 does not contain cargo c7, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "0d0a8710-c67c-4c3c-a239-76296902c626", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_12", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, fuel level f1 does not neighbour fuel level f7, fuel level f2 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f7, fuel level f4 does not neighbour fuel level f7, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f4, fuel level f7 does not neighbour fuel level f3, fuel-levels f1 and f6 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f5 and f7 are not neighbors and fuel-levels f6 and f3 are not neighbors, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "81ad24e6-53d8-4c50-a4bf-d6820b7cef9d", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_15", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, cargo c0 is not at location l1cargo c0 is not present at location l1, cargo c0 is not in vehicle v0, cargo c0 is not in vehicle v1, cargo c1 is not at location l0cargo c1 is not present at location l0, cargo c1 is not located in vehicle v0, cargo c2 is not located in vehicle v0, cargo c2 is not located in vehicle v1, cargo c2 is not situated at location l0, cargo c3 is not in vehicle v1, cargo c3 is not located in vehicle v0, cargo c4 is not at location l0cargo c4 is not present at location l0, cargo c4 is not located in vehicle v0, cargo c5 is not located in vehicle v0, cargo c6 is not situated at location l0, cargo c7 is not in vehicle v0, cargo c7 is not situated at location l0, cargo c8 is not located in vehicle v0, cargo c8 is not located in vehicle v1, cargo c8 is not situated at location l1, cargo v0 is not situated at location l0, cargo v1 is not situated at location l0, fuel f1 does not exist in location l1, fuel f3 does not exist in location l1, fuel f5 does not exist in location l0, fuel f7 does not exist in location l1, location l0 does not have a fuel-level of f1, location l0 does not have a fuel-level of f6, location l0 does not have a fuel-level of f7, location l0 does not have fuel f0, location l0 does not have fuel f2, location l0 does not have fuel f4, location l1 does not have a fuel-level of f0, location l1 does not have a fuel-level of f2, location l1 does not have fuel f4, location l1 does not have fuel f5, vehicle v0 does not contain cargo c6, vehicle v0 does not have space s0, vehicle v1 does not contain cargo c1, vehicle v1 does not contain cargo c4, vehicle v1 does not contain cargo c6, vehicle v1 does not contain cargo c7 and vehicle v1 does not have space s0, is not defined? Write None if all are defined.", "answer": "fuel f1 is not sold at location l0", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "57c3590d-e931-4d67-8fc4-61187e41def2", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_16", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, fuel level f2 does not neighbour fuel level f6, fuel level f3 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f3, fuel-levels f1 and f4 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f6 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f3 are not neighbors and fuel-levels f7 and f3 are not neighbors, is not defined? Write None if all are defined.", "answer": "gas station does not increase the fuel-level from f3 to f7", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "b1bd850e-46bc-47c3-8369-ea257cc7262e", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_19", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, cargo c7 is not situated at location l0 and vehicle v1 does not contain cargo c8, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "89d743a8-1bea-4c50-ba3e-a263bc045201", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_20", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, fuel level f2 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f5, fuel level f2 neighbors fuel level f3, fuel level f3 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f4, fuel level f6 does not neighbour fuel level f0, fuel level f6 does not neighbour fuel level f3, fuel level f7 does not neighbour fuel level f5, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f6 are not neighbors, fuel-levels f1 and f6 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f3 and f7 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f6 and f7 are neighbors, fuel-levels f7 and f3 are not neighbors and location l1 is connected to location l0, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "31f6ea31-5f7c-4ff7-a639-45368bbcd9bb", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_23", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, cargo c0 is not situated at location l1, cargo c0 is present at location l0, cargo c1 is at location l1, cargo c1 is not in vehicle v0, cargo c1 is not in vehicle v1, cargo c2 is not located in vehicle v0, cargo c3 is at location l0, cargo c3 is not situated at location l1, cargo c4 is at location l1, cargo c4 is not situated at location l0, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c5 is present at location l0, cargo c6 is at location l1, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c7 is at location l1, cargo c7 is not at location l0cargo c7 is not present at location l0, cargo c7 is not in vehicle v1, cargo c8 is at location l0, cargo c8 is not located in vehicle v0, cargo c8 is not situated at location l1, cargo v0 is at location l1, cargo v0 is not at location l0cargo v0 is not present at location l0, cargo v1 is present at location l1, fuel f0 does not exist in location l1, fuel f1 does not exist in location l0, fuel f1 does not exist in location l1, fuel f3 does not exist in location l1, fuel f3 exists in location l0, fuel f4 does not exist in location l0, fuel f7 does not exist in location l1, location l0 does not have a fuel-level of f7, location l0 does not have fuel f0, location l0 does not have fuel f2, location l0 does not have fuel f6, location l1 does not have a fuel-level of f2, location l1 does not have fuel f5, location l1 has a fuel-level of f6, vehicle v0 does not contain cargo c0, vehicle v0 does not contain cargo c3, vehicle v0 does not contain cargo c4, vehicle v0 does not contain cargo c5, vehicle v0 has space s1, vehicle v1 does not contain cargo c2, vehicle v1 does not contain cargo c5, vehicle v1 does not contain cargo c6, vehicle v1 does not have space s0 and vehicle v1 parks in space s1, is not defined? Write None if all are defined.", "answer": "vehicle v1 parks in space s1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "53c7840b-2bbe-4c78-8e69-616819ec70dd", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_24", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, fuel level f0 does not neighbour fuel level f2, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f7, fuel level f1 neighbors fuel level f2, fuel level f2 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f6, fuel level f3 neighbors fuel level f4, fuel level f4 does not neighbour fuel level f0, fuel level f4 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f4, fuel level f5 does not neighbour fuel level f7, fuel level f6 does not neighbour fuel level f1, fuel level f6 neighbors fuel level f7, fuel level f7 does not neighbour fuel level f1, fuel level f7 does not neighbour fuel level f5, fuel level f7 does not neighbour fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f6 are not neighbors, fuel-levels f0 and f7 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f3 and f7 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f4 and f6 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f6 and f0 are not neighbors, fuel-levels f6 and f2 are not neighbors, fuel-levels f6 and f3 are not neighbors, fuel-levels f6 and f4 are not neighbors, fuel-levels f6 and f5 are not neighbors, fuel-levels f7 and f0 are not neighbors, fuel-levels f7 and f3 are not neighbors, fuel-levels f7 and f4 are not neighbors, location l1 and location l0 are connected, space s0 neighbors space s1 and there is a connection between locations l0 and l1, is not defined? Write None if all are defined.", "answer": "gas station does not increase the fuel-level from f5 to f2", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "06954728-322f-46c1-adc0-f9cff64c5823", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_6_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "4f5499b1-2999-4b7d-8c3d-16d31f616cca", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_6_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, vehicle v0 is pulled over, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0 and vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "at location l1, vehicle v0 is pulled over", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "c8b97fb5-dfeb-467e-a419-29ae2bca3c3c", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, some objects may or may not be defined. Is c8 part of the domain? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "a9884e39-8cf9-405c-a466-b6659c5b250a", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, some objects may or may not be defined. Is c9 part of the domain? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "9e92e0e2-df11-482f-a586-c475aea5f012", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, some properties of the state may or may not be defined. Is location l1 has fuel f5 part of the state? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "5c6a1b02-7dfa-4f55-a45f-6058b9a0aa31", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, some properties of the state may or may not be defined. Is location l0 is connected to location l1 part of the state? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "f51fe621-7ad7-42cd-b2a0-f92104504f6e", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, some properties of the state may or may not be defined. Is cargo c4 is inspected at location l1 part of the state? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "0c70ee8f-3d0c-47de-a94c-31a8d095ddbb", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_12", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, some properties of the state may or may not be defined. Is gas station increases the fuel-level from f3 to f2 part of the state? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "1b731047-fa9a-4b34-879b-c96785f932c3", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, is action, at location l1, cargo c4 is loaded in vehicle v1 with spaces s1 and s0, part of the domain? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "5e4df401-dfea-4f33-a669-43932f8c16fb", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, is action, at location l1, cargo c4 in vehicle v1 breaks, part of the domain? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "be93fba7-5592-4872-a45d-98195dfda4f1", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_3_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, is action, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, part of the domain? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "0be79a86-a37e-4b9e-940c-515b50cc37e8", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_3_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, is action, at location l0, vehicle v1 is pulled over, part of the domain? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "2bcd0f2e-1849-4709-a4dc-1df1333f31dd", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_4_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, c1, c4, c8, f7, s0 and v0, is not part of the domain? Write None if all are defined.", "answer": "c4", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "a77d0dcd-9894-48cd-afbb-e0a842a6cbaf", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_4_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, c4, c6, c7, f2, f4, f5, f8, l0, s0, s1 and v1, is not part of the domain? Write None if all are defined.", "answer": "f8", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "6f699edb-8f9f-4e1d-b3ca-b701e798b852", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, cargo c0 is at location l0, cargo c1 is situated at location l0, cargo c5 is at location l0, cargo c7 is at location l1, cargo c8 is present at location l0, cargo v0 is situated at location l1 and vehicle v0 contains cargo c2, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "a10b52cb-0816-47a1-92f5-1e13c1b8ce7b", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, fuel level f1 neighbors fuel level f2, fuel level f2 neighbors fuel level f3, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors and there is a connection between locations l1 and l0, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "5e979d4d-3d97-4d79-af19-b49afe846273", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, cargo c0 is at location l0, cargo c1 is present at location l0, cargo c2 is located in vehicle v0, cargo c3 is situated at location l0, cargo c4 is situated at location l1, cargo c6 is at location l1, cargo c7 is at location l1, cargo c8 is situated at location l0, cargo v0 is situated at location l1, inspection of cargo v1 occurs at location l1, location l0 has fuel f2, location l1 has fuel f5 and vehicle v0 has space s0, is not defined? Write None if all are defined.", "answer": "inspection of cargo v1 occurs at location l1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "5a831dfc-3013-4272-ba1f-2539ee8aad5d", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_8", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f6 are neighbors, location l0 is connected to location l1, space s0 neighbors space s1 and there is a connection between locations l1 and l0, is not defined? Write None if all are defined.", "answer": "locations l1 and l0 are far from each other", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "81853de8-6736-492f-a6da-d359a1e3c65c", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_11", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, cargo c1 is not situated at location l1, cargo c2 is not at location l1cargo c2 is not present at location l1, cargo c5 is not located in vehicle v0, cargo c8 is not at location l1cargo c8 is not present at location l1, location l1 does not have fuel f0, location l1 does not have fuel f6 and location l1 does not have fuel f7, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "96b38a7d-a27d-4952-8b09-300dd10560b5", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_12", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, fuel level f0 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f6, fuel level f3 does not neighbour fuel level f1, fuel level f3 does not neighbour fuel level f5, fuel level f4 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f4, fuel level f6 does not neighbour fuel level f1, fuel level f6 does not neighbour fuel level f5, fuel level f7 does not neighbour fuel level f2, fuel-levels f1 and f7 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f7 and f0 are not neighbors and fuel-levels f7 and f3 are not neighbors, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "29e7afee-8b47-4254-9c76-3548b5c39d91", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_15", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, cargo c0 is not in vehicle v1, cargo c3 is not located in vehicle v1, cargo c4 is not located in vehicle v1, cargo c7 is not at location l0cargo c7 is not present at location l0, cargo c8 is not in vehicle v1, cargo v1 is not at location l0cargo v1 is not present at location l0 and location l0 does not have a fuel-level of f0, is not defined? Write None if all are defined.", "answer": "cargo c4 is not secured in vehicle v1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "6928494b-0f75-4d92-b9d1-496b576ee67d", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_16", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, fuel level f1 does not neighbour fuel level f0, fuel level f7 does not neighbour fuel level f1, fuel-levels f1 and f4 are not neighbors, fuel-levels f1 and f7 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f2 and f6 are not neighbors, fuel-levels f6 and f0 are not neighbors and fuel-level at gas station is not increased from f4 to f6, is not defined? Write None if all are defined.", "answer": "fuel-level at gas station is not increased from f4 to f6", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "1e974740-8223-4028-b31e-72b136de53f1", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_19", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, cargo c1 is not situated at location l1, cargo c3 is not in vehicle v0, cargo c4 is not at location l0cargo c4 is not present at location l0, cargo c5 is not situated at location l1, cargo c6 is not in vehicle v1, cargo c8 is present at location l0, cargo v1 is situated at location l1, location l0 does not have a fuel-level of f4, location l0 does not have fuel f1, location l0 does not have fuel f3, location l0 does not have fuel f5, location l0 does not have fuel f7, location l1 does not have fuel f0, location l1 does not have fuel f1, vehicle v0 does not contain cargo c7 and vehicle v0 does not contain cargo c8, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "85d05431-c7e7-4580-89ff-65568bdec7d7", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_20", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f4, fuel level f0 does not neighbour fuel level f7, fuel level f1 neighbors fuel level f2, fuel level f2 does not neighbour fuel level f4, fuel level f3 does not neighbour fuel level f6, fuel level f3 does not neighbour fuel level f7, fuel level f4 neighbors fuel level f5, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f4, fuel level f5 does not neighbour fuel level f7, fuel level f6 does not neighbour fuel level f0, fuel level f6 does not neighbour fuel level f5, fuel level f7 does not neighbour fuel level f0, fuel level f7 does not neighbour fuel level f2, fuel level f7 does not neighbour fuel level f3, fuel level f7 does not neighbour fuel level f4, fuel level f7 does not neighbour fuel level f5, fuel level f7 does not neighbour fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f2 and f6 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f7 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f2 are not neighbors, fuel-levels f6 and f3 are not neighbors, fuel-levels f6 and f7 are neighbors, location l0 is connected to location l1 and space s1 does not neighbour space s0, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "2972bcce-f528-476d-b90a-28095bc912f6", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_23", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, cargo c1 is not located in vehicle v1, at location l1, cargo c1 is not inspected, cargo c1 is situated at location l0, cargo c2 is not located in vehicle v1, cargo c2 is not situated at location l0, cargo c2 is not situated at location l1, cargo c3 is not in vehicle v0, cargo c4 is not in vehicle v0, cargo c4 is not in vehicle v1, cargo c4 is not situated at location l0, cargo c5 is not located in vehicle v1, cargo c5 is present at location l0, cargo c8 is not in vehicle v0, cargo c8 is not situated at location l1, cargo v1 is at location l1, cargo v1 is not situated at location l0, fuel f7 does not exist in location l0, location l0 does not have a fuel-level of f1, location l0 has fuel f2, location l1 does not have a fuel-level of f4, location l1 does not have fuel f7, location l1 has a fuel-level of f5, vehicle v0 does not have space s1 and vehicle v1 does not contain cargo c7, is not defined? Write None if all are defined.", "answer": "at location l1, cargo c1 is not inspected", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "ca1222c7-1b4a-4f68-9e03-eff0b5a8858d", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_24", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f5, fuel level f0 does not neighbour fuel level f6, fuel level f0 does not neighbour fuel level f7, fuel level f0 neighbors fuel level f1, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f6, fuel-level at gas station is not raised from f7 to f2, fuel level f3 neighbors fuel level f4, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f6, fuel level f5 does not neighbour fuel level f7, fuel level f6 does not neighbour fuel level f0, fuel level f6 does not neighbour fuel level f1, fuel level f6 does not neighbour fuel level f4, fuel level f7 does not neighbour fuel level f1, fuel level f7 does not neighbour fuel level f2, fuel level f7 does not neighbour fuel level f4, fuel level f7 does not neighbour fuel level f5, fuel level f7 does not neighbour fuel level f6, fuel-levels f0 and f4 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f3 and f6 are not neighbors, fuel-levels f3 and f7 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f4 and f7 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f5 and f4 are not neighbors, fuel-levels f5 and f6 are neighbors, fuel-levels f6 and f3 are not neighbors, fuel-levels f6 and f7 are neighbors, fuel-levels f7 and f0 are not neighbors, fuel-levels f7 and f3 are not neighbors, location l1 and location l0 are connected and space s1 does not neighbour space s0, is not defined? Write None if all are defined.", "answer": "fuel-level at gas station is not raised from f7 to f2", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "e9bea572-8d90-401b-a349-40d68243bd3b", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_6_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1 and cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "d8b092ee-9951-4149-a615-f3f8d5c06e90", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_6_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 gets pulled over at l0, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2 and at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "vehicle v0 gets pulled over at l0", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "88a33574-5afd-4217-a2fd-18998bfb3664", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, some objects may or may not be defined. Is v0 part of the domain? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "04b772c4-6e60-43da-8549-33602b683aee", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, some objects may or may not be defined. Is c9 part of the domain? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "11cbc6c4-88fa-4a0c-b707-65ff0ff12a5a", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, some properties of the state may or may not be defined. Is vehicle v0 has space s0 part of the state? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "59211145-6e31-426a-a6e9-706477f5976e", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, some properties of the state may or may not be defined. Is fuel-levels f6 and f7 are neighbors part of the state? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "fdb8eac5-b5f6-42bd-89e1-1bde5e00ba94", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, some properties of the state may or may not be defined. Is cargo c8 is inspected at location l0 part of the state? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "56706017-240d-4411-b042-b8128c05c01e", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_12", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, some properties of the state may or may not be defined. Is locations l0 and l1 are far from each other part of the state? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "8c2f59cb-cc28-43af-a6ab-2bd2b2a55f80", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, is action, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, part of the domain? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "bc8853e0-9b05-4d0f-8ad2-cc2acd47fc08", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, is action, at location l0, vehicle v0 is pulled over, part of the domain? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "57d71710-02a7-4514-babc-fda6364be924", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_3_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, is action, vehicle v0 moves from location l1 which has fuel-levels f7 and f4 to location l0, part of the domain? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "0e0952fd-6f6b-4256-89f5-30aec1f3d428", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_3_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, is action, at location l0, vehicle v1 is pulled over, part of the domain? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "f886a193-a967-4cc1-8ec0-5887cea5bf1a", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_4_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, c5, f0, f1, f4, f7, l0, l1, v0 and v1, is not part of the domain? Write None if all are defined.", "answer": "f1", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "213bbe89-37ff-422b-ac43-6a2bccdbc3bc", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_4_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, c3, c9, f6, l0, v0 and v1, is not part of the domain? Write None if all are defined.", "answer": "c9", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "fe348185-f00f-4e32-b5a1-03ef7fd5c86c", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, cargo c1 is present at location l0, cargo c2 is present at location l0, cargo c3 is present at location l0, cargo c6 is at location l1, cargo v1 is present at location l1, vehicle v0 has space s0 and vehicle v1 has space s1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "ff85cc52-c611-47c3-9c70-45eb27d8f200", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, fuel level f2 neighbors fuel level f3, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, location l0 is connected to location l1, space s0 neighbors space s1 and there is a connection between locations l1 and l0, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "c78db358-108a-4692-91ce-f33a7eae739f", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, cargo c3 is at location l0 and cargo c6 is situated at location l1, is not defined? Write None if all are defined.", "answer": "cargo c6 is inspected at location l1", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "7d90d65d-de0c-4b46-9e70-12b48c0f9a6b", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_8", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, fuel-level at gas station is increased from f2 to f1 and location l0 is connected to location l1, is not defined? Write None if all are defined.", "answer": "fuel-level at gas station is increased from f2 to f1", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "41bcc8a5-a01a-4f79-8768-f51b7a4428e8", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_11", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, cargo c1 is not situated at location l1, cargo c2 is not at location l1cargo c2 is not present at location l1, cargo c3 is not situated at location l1, cargo c4 is not at location l0cargo c4 is not present at location l0, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c6 is not located in vehicle v0, cargo c6 is not located in vehicle v1, cargo c7 is not in vehicle v1, cargo c8 is not in vehicle v0, cargo c8 is not situated at location l1, fuel f6 does not exist in location l0, fuel f6 does not exist in location l1, fuel f7 does not exist in location l1, location l0 does not have a fuel-level of f4, location l0 does not have fuel f2, location l0 does not have fuel f5, location l1 does not have a fuel-level of f1, location l1 does not have a fuel-level of f2, vehicle v0 does not contain cargo c5, vehicle v0 does not contain space s1, vehicle v1 does not contain cargo c0 and vehicle v1 does not have space s0, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "93695174-fcc7-48b0-bcea-a2120d1ae686", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_12", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, fuel level f0 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f7, fuel level f2 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f6, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f3, fuel level f6 does not neighbour fuel level f0, fuel level f6 does not neighbour fuel level f2, fuel level f6 does not neighbour fuel level f5, fuel level f7 does not neighbour fuel level f1, fuel level f7 does not neighbour fuel level f3, fuel level f7 does not neighbour fuel level f4, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f7 are not neighbors, fuel-levels f3 and f6 are not neighbors, fuel-levels f3 and f7 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f4 and f6 are not neighbors, fuel-levels f4 and f7 are not neighbors, fuel-levels f5 and f4 are not neighbors and fuel-levels f7 and f5 are not neighbors, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "d9b64782-b9c6-4420-ae3f-bc8e5508a41f", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_15", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, cargo c0 is not in vehicle v0, cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c1 is not in vehicle v0, cargo c1 is not in vehicle v1, cargo c3 is not located in vehicle v0, cargo c3 is not situated at location l1, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c8 is not at location l1cargo c8 is not present at location l1, cargo c8 is not in vehicle v0, cargo v1 is not situated at location l0, fuel f0 does not exist in location l0, fuel f3 does not exist in location l0, location l0 does not have fuel f2, location l1 does not have a fuel-level of f0, vehicle v0 does not contain cargo c2, vehicle v0 does not contain cargo c5, vehicle v0 does not contain cargo c6, vehicle v0 does not contain cargo c7, vehicle v0 does not have space s1, vehicle v1 does not contain cargo c0, vehicle v1 does not contain cargo c2, vehicle v1 does not contain cargo c3, vehicle v1 does not contain cargo c4 and vehicle v1 does not have space s0, is not defined? Write None if all are defined.", "answer": "vehicle v0 does not have cargo c1 secured", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "96c051f6-4d43-4085-a38b-019d20338441", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_16", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, fuel level f0 does not neighbour fuel level f3, fuel level f0 does not neighbour fuel level f4, fuel level f0 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f7, fuel level f2 does not neighbour fuel level f0, fuel level f2 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f7, gas station does not increase the fuel-level from f1 to f3, fuel level f3 does not neighbour fuel level f2, fuel level f3 does not neighbour fuel level f7, fuel level f4 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f3, fuel level f5 does not neighbour fuel level f4, fuel level f5 does not neighbour fuel level f7, fuel level f6 does not neighbour fuel level f0, fuel level f6 does not neighbour fuel level f2, fuel level f6 does not neighbour fuel level f3, fuel level f7 does not neighbour fuel level f0, fuel level f7 does not neighbour fuel level f2, fuel level f7 does not neighbour fuel level f3, fuel level f7 does not neighbour fuel level f6, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f7 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f2 and f6 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f4 and f6 are not neighbors, fuel-levels f5 and f0 are not neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f6 and f4 are not neighbors, fuel-levels f7 and f1 are not neighbors and fuel-levels f7 and f4 are not neighbors, is not defined? Write None if all are defined.", "answer": "gas station does not increase the fuel-level from f1 to f3", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "36302d70-2dcf-4db1-b725-641d3f5143a9", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_19", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, cargo c0 is not located in vehicle v1, cargo c1 is not in vehicle v0, cargo c5 is at location l0, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c5 is not located in vehicle v0, cargo c7 is situated at location l1, cargo c8 is not situated at location l1, cargo v1 is present at location l1, fuel f4 does not exist in location l0, location l0 does not have a fuel-level of f7, location l1 does not have fuel f2, location l1 does not have fuel f4, vehicle v0 does not contain space s1, vehicle v1 does not contain cargo c6 and vehicle v1 does not contain cargo c8, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "547fa382-da9d-42f1-aac1-5d272dffc159", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_20", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, fuel level f0 does not neighbour fuel level f6, fuel level f0 does not neighbour fuel level f7, fuel level f0 neighbors fuel level f1, fuel level f2 does not neighbour fuel level f1, fuel level f2 neighbors fuel level f3, fuel level f4 does not neighbour fuel level f3, fuel-levels f0 and f5 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f6 and f4 are not neighbors, fuel-levels f6 and f7 are neighbors, fuel-levels f7 and f0 are not neighbors, fuel-levels f7 and f5 are not neighbors, location l0 is connected to location l1 and space s1 does not neighbour space s0, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "54ffc8e8-931b-4187-9843-fd8d19eb0819", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_23", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, cargo c0 is not at location l1cargo c0 is not present at location l1, cargo c1 is not in vehicle v1, cargo c2 is not at location l1cargo c2 is not present at location l1, cargo c2 is not located in vehicle v1, cargo c2 is situated at location l0, cargo c3 is at location l0, cargo c3 is not located in vehicle v1, cargo c4 is in vehicle v0, cargo c4 is not at location l0cargo c4 is not present at location l0, cargo c4 is not at location l1cargo c4 is not present at location l1, cargo c4 is not in vehicle v1, cargo c5 is not situated at location l1, cargo c6 is not in vehicle v1, cargo c6 is situated at location l1, cargo c7 is not at location l0cargo c7 is not present at location l0, cargo c7 is not in vehicle v0, cargo c7 is not in vehicle v1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo c8 is not in vehicle v1, location l0 does not have a fuel-level of f2, location l0 does not have fuel f0, location l0 does not have fuel f3, location l1 does not have a fuel-level of f4, location l1 does not have a fuel-level of f5, location l1 does not have fuel f0, vehicle v0 has space s0 and vehicle v1 has space s1, is not defined? Write None if all are defined.", "answer": "vehicle v0 parks in space s0", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "5eae9500-b209-4ddf-988c-3477f0c87057", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_24", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, fuel level f0 does not neighbour fuel level f5, fuel-level at gas station is raised from f2 to f1, fuel level f2 neighbors fuel level f3, fuel level f3 does not neighbour fuel level f7, fuel level f4 does not neighbour fuel level f2, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f4 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f3 and f4 are neighbors and fuel-levels f7 and f5 are not neighbors, is not defined? Write None if all are defined.", "answer": "fuel-level at gas station is raised from f2 to f1", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "27bc5d9f-53a4-4d9c-ae3d-7f3e6ac25fee", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_6_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "d8de341d-c63e-483d-a38d-f7a81a2823ee", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_6_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 gets pulled over at l0, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "vehicle v0 gets pulled over at l0", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "cd7c8932-1e43-466f-9ac0-0f6e556dd02b", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, some objects may or may not be defined. Is l0 part of the domain? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "041d175c-4839-4626-b95b-46826489c056", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, some objects may or may not be defined. Is f8 part of the domain? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "a0cbd1f7-8c3d-4a8e-8c91-883784caa82c", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, some properties of the state may or may not be defined. Is location l1 has fuel f2 part of the state? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "8b71795a-4229-46a6-9861-3e391141b6ec", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, some properties of the state may or may not be defined. Is fuel level f4 neighbors fuel level f5 part of the state? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "e7ea0cbc-e1ca-4346-b246-9d84dc9188aa", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, some properties of the state may or may not be defined. Is cargo v1 is inspected at location l1 part of the state? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "6594f965-6a5f-498b-b5e6-6b1cef4032b6", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_12", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, some properties of the state may or may not be defined. Is fuel-level at gas station is increased from f1 to f0 part of the state? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "15bf44e6-42b7-42cf-8418-1ae1bd66e6b8", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, is action, at location l0, cargo c6 is unloaded from vehicle v0 with spaces s0 and s1, part of the domain? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "002f6a36-681f-4cfb-94a6-d98ff79b2ff9", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, is action, at location l1, vehicle v1 is pulled over, part of the domain? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "134d0c5a-bb01-4efc-86c7-99dbd302d88b", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_3_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, is action, vehicle v1 moves from location l1 which has fuel-levels f4 and f7 to location l0, part of the domain? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "d48e0d6c-fc4c-4893-9dfb-63cc93d5d1dd", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_3_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, is action, at location l1, vehicle v0 is pulled over, part of the domain? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "44d0bb49-fafc-4398-ae5c-8f3dbd3e5708", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_4_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, c0, c1, c2, c3, c4, c5, c6, c7, f0, f1, f2, f4, f5, f6, f7, l0, s0 and v1, is not part of the domain? Write None if all are defined.", "answer": "c6", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "a4076bdc-d205-4c7b-84e4-aad0edff5dac", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_4_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, c9, f5, f6, l1, s0 and s1, is not part of the domain? Write None if all are defined.", "answer": "c9", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "22071ec1-89fe-428d-9506-203b87e6e031", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, cargo c0 is situated at location l0, cargo c2 is situated at location l0, cargo c3 is at location l0, cargo c4 is present at location l0, cargo c5 is situated at location l0, cargo c6 is located in vehicle v0, cargo c7 is situated at location l1, cargo c8 is present at location l0, cargo v0 is present at location l0, cargo v1 is situated at location l1, location l0 has a fuel-level of f0, location l1 has fuel f2, vehicle v0 contains space s0 and vehicle v1 has space s1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "ff4a395c-4c03-4db1-9c5b-206ddec9ad53", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, fuel level f2 neighbors fuel level f3, fuel level f3 neighbors fuel level f4, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f6 and f7 are neighbors, location l1 is connected to location l0 and there is a connection between locations l0 and l1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "e44e6b83-60f4-4137-8c1e-bb280fed6e09", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, cargo c0 is situated at location l0, cargo c2 is at location l0, cargo c4 is present at location l0, cargo c5 is at location l0, cargo c6 is located in vehicle v0, cargo c7 is situated at location l1, fuel f2 exists in location l1 and fuel f0 is sold at location l0, is not defined? Write None if all are defined.", "answer": "fuel f0 is sold at location l0", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "bff737cb-c85f-40e4-ac00-ce677026978b", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_8", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, fuel-level at gas station is raised from f3 to f2, fuel level f4 neighbors fuel level f5, fuel level f6 neighbors fuel level f7, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f5 and f6 are neighbors, location l1 and location l0 are connected and spaces s0 and s1 are neighbors, is not defined? Write None if all are defined.", "answer": "fuel-level at gas station is raised from f3 to f2", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": true}
{"id": "e54a98ec-346f-415f-aa70-3216bc4d0cb4", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_11", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, cargo c2 is not located in vehicle v1, cargo c3 is not in vehicle v0, cargo c5 is not at location l1cargo c5 is not present at location l1, cargo c7 is not located in vehicle v0, cargo c8 is not in vehicle v0, cargo c8 is not located in vehicle v1, cargo v0 is not at location l1cargo v0 is not present at location l1, location l1 does not have a fuel-level of f0, location l1 does not have fuel f6, vehicle v1 does not contain cargo c7 and vehicle v1 does not contain space s0, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "9bfe60f2-2e87-45a8-89c9-7e68ff01e6b1", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_12", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, fuel level f1 does not neighbour fuel level f0, fuel level f1 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f7, fuel level f2 does not neighbour fuel level f7, fuel level f3 does not neighbour fuel level f0, fuel level f3 does not neighbour fuel level f2, fuel level f4 does not neighbour fuel level f7, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f2, fuel level f5 does not neighbour fuel level f4, fuel level f6 does not neighbour fuel level f1, fuel level f7 does not neighbour fuel level f0, fuel level f7 does not neighbour fuel level f2, fuel level f7 does not neighbour fuel level f6, fuel-levels f0 and f2 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f7 are not neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f5 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f3 and f6 are not neighbors, fuel-levels f3 and f7 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f6 are not neighbors, fuel-levels f6 and f2 are not neighbors, fuel-levels f6 and f5 are not neighbors, fuel-levels f7 and f3 are not neighbors, fuel-levels f7 and f4 are not neighbors, fuel-levels f7 and f5 are not neighbors and spaces s1 and s0 are not neighbors, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "fcb237a9-4689-49a5-9d0e-7fe3be45b898", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_15", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, cargo c0 is not at location l1cargo c0 is not present at location l1, cargo c0 is not in vehicle v0, cargo c1 is not at location l1cargo c1 is not present at location l1, cargo c2 is not at location l1cargo c2 is not present at location l1, cargo c3 is not in vehicle v1, cargo c3 is not situated at location l1, cargo c4 is not located in vehicle v0, cargo c5 is not located in vehicle v1, cargo c5 is not situated at location l1, cargo c6 is not located in vehicle v1, cargo c6 is not situated at location l0, cargo c6 is not situated at location l1, cargo c8 is not in vehicle v1, cargo v0 is not at location l1cargo v0 is not present at location l1, cargo v1 is not at location l0cargo v1 is not present at location l0, fuel f0 does not exist in location l1, fuel f4 does not exist in location l0, fuel f5 does not exist in location l0, fuel f5 does not exist in location l1, fuel f6 does not exist in location l1, location l0 does not sell fuel f1, location l0 does not have fuel f3, location l1 does not have a fuel-level of f7, vehicle v0 does not contain cargo c1, vehicle v0 does not contain cargo c2 and vehicle v1 does not contain cargo c7, is not defined? Write None if all are defined.", "answer": "location l0 does not sell fuel f1", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "01e2d194-cf51-4013-9f58-118de6db982f", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_16", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, fuel level f0 does not neighbour fuel level f2, fuel level f0 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f4, fuel level f1 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f6, fuel level f1 does not neighbour fuel level f7, fuel level f2 does not neighbour fuel level f4, fuel level f2 does not neighbour fuel level f5, fuel level f2 does not neighbour fuel level f7, fuel level f3 does not neighbour fuel level f7, fuel level f5 does not neighbour fuel level f0, fuel level f5 does not neighbour fuel level f1, fuel level f5 does not neighbour fuel level f4, fuel level f6 does not neighbour fuel level f0, fuel level f6 does not neighbour fuel level f1, fuel level f6 does not neighbour fuel level f2, fuel level f6 does not neighbour fuel level f3, fuel level f7 does not neighbour fuel level f0, fuel level f7 does not neighbour fuel level f4, fuel level f7 does not neighbour fuel level f6, fuel-levels f0 and f3 are not neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f0 and f6 are not neighbors, fuel-levels f0 and f7 are not neighbors, fuel-levels f1 and f0 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f6 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f3 and f6 are not neighbors, fuel-levels f4 and f0 are not neighbors, fuel-levels f4 and f1 are not neighbors, fuel-levels f4 and f2 are not neighbors, fuel-levels f4 and f3 are not neighbors, fuel-levels f4 and f6 are not neighbors, fuel-levels f4 and f7 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f5 and f3 are not neighbors, fuel-levels f5 and f7 are not neighbors, fuel-levels f6 and f4 are not neighbors, fuel-levels f6 and f5 are not neighbors, fuel-levels f7 and f1 are not neighbors, fuel-levels f7 and f2 are not neighbors, fuel-levels f7 and f3 are not neighbors, fuel-levels f7 and f5 are not neighbors and space s1 does not neighbour space s0, is not defined? Write None if all are defined.", "answer": "fuel-level at gas station is not increased from f7 to f4", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": false}
{"id": "3a51294b-7462-4667-b767-18cc73b8cba0", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_19", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, cargo c3 is not in vehicle v1, cargo c3 is not situated at location l1, cargo c3 is situated at location l0, cargo c4 is not in vehicle v0, cargo c5 is present at location l0, cargo c6 is not located in vehicle v1, cargo c7 is at location l1, cargo c8 is not in vehicle v0, cargo c8 is not situated at location l1, cargo c8 is present at location l0, cargo v1 is situated at location l1, fuel f6 does not exist in location l0, fuel f7 does not exist in location l1, location l0 does not have a fuel-level of f2, location l0 does not have a fuel-level of f3, location l0 does not have a fuel-level of f5, location l0 does not have fuel f1, location l0 does not have fuel f4, location l0 does not have fuel f7, location l0 has a fuel-level of f0, location l1 does not have a fuel-level of f1, location l1 does not have fuel f6, location l1 has a fuel-level of f2, vehicle v0 contains space s0, vehicle v0 does not contain cargo c1, vehicle v0 does not have space s1, vehicle v1 does not contain cargo c0, vehicle v1 does not contain cargo c1, vehicle v1 does not contain cargo c2, vehicle v1 does not contain cargo c4, vehicle v1 does not contain cargo c5 and vehicle v1 does not have space s0, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "e995713c-0fbd-4408-b0fb-591e1e6aca00", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_20", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, fuel level f0 does not neighbour fuel level f3, fuel level f1 does not neighbour fuel level f7, fuel level f2 does not neighbour fuel level f1, fuel level f2 does not neighbour fuel level f5, fuel level f3 does not neighbour fuel level f6, fuel level f3 does not neighbour fuel level f7, fuel level f3 neighbors fuel level f4, fuel level f4 does not neighbour fuel level f7, fuel level f5 does not neighbour fuel level f7, fuel level f5 neighbors fuel level f6, fuel level f6 does not neighbour fuel level f2, fuel level f6 does not neighbour fuel level f5, fuel level f7 does not neighbour fuel level f0, fuel-levels f0 and f1 are neighbors, fuel-levels f0 and f5 are not neighbors, fuel-levels f1 and f3 are not neighbors, fuel-levels f1 and f4 are not neighbors, fuel-levels f2 and f0 are not neighbors, fuel-levels f2 and f4 are not neighbors, fuel-levels f2 and f6 are not neighbors, fuel-levels f2 and f7 are not neighbors, fuel-levels f3 and f1 are not neighbors, fuel-levels f4 and f5 are neighbors, fuel-levels f5 and f1 are not neighbors, fuel-levels f5 and f2 are not neighbors, fuel-levels f6 and f0 are not neighbors, fuel-levels f6 and f1 are not neighbors, fuel-levels f6 and f3 are not neighbors, fuel-levels f6 and f7 are neighbors, fuel-levels f7 and f1 are not neighbors, fuel-levels f7 and f6 are not neighbors, location l1 and location l0 are connected, space s0 neighbors space s1 and space s1 does not neighbour space s0, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "aed36dee-887e-400b-a77d-fd37c84cf431", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_23", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, at location l1, cargo c2 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, cargo c0 is at location l0, cargo c0 is not situated at location l1, cargo c1 is at location l0, cargo c1 is not situated at location l1, cargo c2 is not in vehicle v0, cargo c2 is not situated at location l1, cargo c3 is not at location l1cargo c3 is not present at location l1, cargo c3 is not in vehicle v0, cargo c3 is not in vehicle v1, cargo c4 is at location l0, cargo c4 is not in vehicle v0, cargo c4 is not located in vehicle v1, cargo c5 is not situated at location l1, cargo c6 is not at location l0cargo c6 is not present at location l0, cargo c7 is not at location l0cargo c7 is not present at location l0, cargo c7 is not in vehicle v0, cargo c7 is situated at location l1, cargo c8 is at location l0, cargo c8 is not situated at location l1, cargo v0 is not situated at location l1, cargo v1 is not at location l0cargo v1 is not present at location l0, cargo v1 is present at location l1, fuel f1 does not exist in location l0, fuel f2 does not exist in location l0, fuel f2 exists in location l1, location l0 does not have a fuel-level of f3, location l0 does not have fuel f6, location l1 does not have a fuel-level of f1, location l1 does not have a fuel-level of f5, location l1 does not have a fuel-level of f6, location l1 does not have fuel f4, location l1 does not have fuel f7, vehicle v0 does not contain cargo c0, vehicle v1 contains space s1 and vehicle v1 does not contain cargo c7, is not defined? Write None if all are defined.", "answer": "at location l1, cargo c5 is not inspected", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "d4d648a9-ced8-4499-ac1f-9b5ba711a1d8", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_24", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, cargo c0 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, cargo c0 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, cargo c1 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f5 and f4 to location l0, cargo c2 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, cargo c4 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f1 and f0 to location l1, cargo c6 is loaded in vehicle v0 with space s1 and space s0 at location l1 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, fuel level f0 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f5, fuel level f1 does not neighbour fuel level f6, fuel level f1 does not neighbour fuel level f7, fuel level f2 does not neighbour fuel level f7, gas station does not increase the fuel-level from f1 to f3, fuel level f4 does not neighbour fuel level f1, fuel level f4 does not neighbour fuel level f2, fuel level f4 neighbors fuel level f5, fuel level f5 does not neighbour fuel level f2, fuel level f7 does not neighbour fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f0 and f4 are not neighbors, fuel-levels f2 and f1 are not neighbors, fuel-levels f2 and f5 are not neighbors, fuel-levels f2 and f6 are not neighbors, fuel-levels f3 and f0 are not neighbors, fuel-levels f3 and f2 are not neighbors, fuel-levels f3 and f5 are not neighbors, fuel-levels f4 and f6 are not neighbors, fuel-levels f5 and f4 are not neighbors, fuel-levels f5 and f7 are not neighbors, location l0 and location l1 are connected, location l1 is connected to location l0 and spaces s1 and s0 are not neighbors, is not defined? Write None if all are defined.", "answer": "gas station does not increase the fuel-level from f1 to f3", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "b2a7bb8f-585a-41fd-be11-96e5e4ef60b8", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_6_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: vehicle v0 moves from location l0 which has fuel-levels f5 and f4 to location l1, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f7 and f6, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f4 and f3, cargo c1 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves from location l1 which has fuel-levels f6 and f5 to location l0, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f3 and f2 to location l1, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, vehicle v0 moves to location l0 from location l1 that has fuel level f5 and f4, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f2 and f1 to location l1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f4 and f3, cargo c4 is unloaded from vehicle v0 with space s0 and space s1 at location l0, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves from location l1 which has fuel-levels f3 and f2 to location l0 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
{"id": "ccc6268f-1763-4241-bbc4-813cb2cdcb34", "domain_name": "mystery", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_6_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: vehicle v0 moves to location l1 from location l0 that has fuel level f5 and f4, at location l1, cargo c0 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f7 and f6 to location l0, at location l0, cargo c0 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves from location l0 which has fuel-levels f4 and f3 to location l1, at location l1, cargo c1 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves to location l0 from location l1 that has fuel level f6 and f5, at location l0, cargo c1 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f3 and f2, cargo c2 is loaded in vehicle v0 with space s1 and space s0 at location l1, at location l1, vehicle v0 is pulled over, at location l0, cargo c2 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f2 and f1, at location l1, cargo c4 is loaded in vehicle v0 with spaces s1 and s0, vehicle v0 moves from location l1 which has fuel-levels f4 and f3 to location l0, at location l0, cargo c4 is unloaded from vehicle v0 with spaces s0 and s1, vehicle v0 moves to location l1 from location l0 that has fuel level f1 and f0, at location l1, cargo c6 is loaded in vehicle v0 with spaces s1 and s0 and vehicle v0 moves to location l0 from location l1 that has fuel level f3 and f2 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "at location l1, vehicle v0 is pulled over", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["fuel_neighbor(f6,f7)", "space_neighbor(s0,s1)", "at(c6,l1)", "at(c7,l1)", "at(c0,l1)", "has_fuel(l0,f5)", "at(c4,l1)", "has_space(v0,s1)", "fuel_neighbor(f2,f3)", "conn(l0,l1)", "at(c2,l1)", "has_space(v1,s1)", "has_fuel(l1,f7)", "at(c1,l1)", "fuel_neighbor(f4,f5)", "fuel_neighbor(f0,f1)", "fuel_neighbor(f5,f6)", "fuel_neighbor(f1,f2)", "fuel_neighbor(f3,f4)", "at(v0,l0)", "at(c8,l0)", "conn(l1,l0)", "at(v1,l1)", "at(c5,l0)", "at(c3,l0)"], "neg_fluents": ["-has_fuel(l1,f0)", "-at(c3,l1)", "-has_fuel(l0,f6)", "-fuel_neighbor(f6,f1)", "-has_fuel(l0,f4)", "-in(c1,v0)", "-fuel_neighbor(f5,f2)", "-has_fuel(l1,f1)", "-has_fuel(l0,f2)", "-in(c6,v0)", "-in(c4,v1)", "-fuel_neighbor(f2,f7)", "-in(c8,v1)", "-fuel_neighbor(f7,f0)", "-at(c5,l1)", "-has_fuel(l1,f5)", "-fuel_neighbor(f2,f4)", "-fuel_neighbor(f0,f2)", "-in(c0,v1)", "-in(c5,v0)", "-fuel_neighbor(f6,f3)", "-fuel_neighbor(f0,f3)", "-in(c3,v1)", "-fuel_neighbor(f2,f0)", "-in(c6,v1)", "-fuel_neighbor(f6,f4)", "-at(c7,l0)", "-fuel_neighbor(f1,f0)", "-fuel_neighbor(f2,f5)", "-fuel_neighbor(f4,f2)", "-fuel_neighbor(f0,f7)", "-in(c7,v0)", "-fuel_neighbor(f3,f7)", "-fuel_neighbor(f7,f2)", "-fuel_neighbor(f5,f7)", "-has_fuel(l1,f6)", "-fuel_neighbor(f7,f1)", "-fuel_neighbor(f4,f3)", "-space_neighbor(s1,s0)", "-fuel_neighbor(f4,f0)", "-has_space(v0,s0)", "-has_space(v1,s0)", "-fuel_neighbor(f0,f5)", "-has_fuel(l0,f0)", "-fuel_neighbor(f6,f0)", "-fuel_neighbor(f4,f6)", "-has_fuel(l1,f2)", "-fuel_neighbor(f1,f6)", "-at(c4,l0)", "-fuel_neighbor(f5,f1)", "-fuel_neighbor(f0,f4)", "-fuel_neighbor(f1,f7)", "-fuel_neighbor(f4,f1)", "-fuel_neighbor(f1,f3)", "-at(c0,l0)", "-fuel_neighbor(f3,f1)", "-at(v1,l0)", "-in(c4,v0)", "-fuel_neighbor(f5,f3)", "-fuel_neighbor(f7,f6)", "-in(c5,v1)", "-has_fuel(l1,f4)", "-in(c2,v0)", "-in(c1,v1)", "-fuel_neighbor(f3,f5)", "-in(c8,v0)", "-fuel_neighbor(f7,f5)", "-has_fuel(l0,f3)", "-has_fuel(l1,f3)", "-has_fuel(l0,f1)", "-fuel_neighbor(f3,f0)", "-has_fuel(l0,f7)", "-fuel_neighbor(f2,f1)", "-at(c2,l0)", "-in(c3,v0)", "-fuel_neighbor(f6,f5)", "-fuel_neighbor(f1,f5)", "-fuel_neighbor(f1,f4)", "-fuel_neighbor(f0,f6)", "-in(c2,v1)", "-fuel_neighbor(f3,f6)", "-in(c7,v1)", "-at(c8,l1)", "-fuel_neighbor(f7,f3)", "-fuel_neighbor(f7,f4)", "-fuel_neighbor(f5,f0)", "-fuel_neighbor(f2,f6)", "-fuel_neighbor(f4,f7)", "-at(c6,l0)", "-in(c0,v0)", "-fuel_neighbor(f5,f4)", "-fuel_neighbor(f3,f2)", "-at(c1,l0)", "-fuel_neighbor(f6,f2)", "-at(v0,l1)"], "objects": {"fuel": ["f7", "f1", "f5", "f6", "f4", "f2", "f3", "f0"], "space": ["s0", "s1"], "location": ["l0", "l1"], "vehicle": ["v1", "v0"], "cargo": ["c6", "c4", "c2", "c3", "c0", "c8", "c5", "c7", "c1"]}, "executable?": true}, "initial_state_nl": "Cargo c0 is at location l1, cargo c1 is present at location l1, cargo c2 is present at location l1, cargo c3 is present at location l0, cargo c4 is at location l1, cargo c5 is situated at location l0, cargo c6 is at location l1, cargo c7 is present at location l1, cargo c8 is at location l0, cargo v0 is situated at location l0, cargo v1 is present at location l1, fuel level f4 neighbors fuel level f5, fuel level f5 neighbors fuel level f6, fuel-levels f0 and f1 are neighbors, fuel-levels f1 and f2 are neighbors, fuel-levels f2 and f3 are neighbors, fuel-levels f3 and f4 are neighbors, fuel-levels f6 and f7 are neighbors, location l0 and location l1 are connected, location l0 has a fuel-level of f5, location l1 and location l0 are connected, location l1 has fuel f7, space s0 neighbors space s1, vehicle v0 contains space s1 and vehicle v1 has space s1.", "action_sequence": ["action_move(v0,l0,l1,f5,f4)", "action_load(c0,v0,l1,s1,s0)", "action_move(v0,l1,l0,f7,f6)", "action_unload(c0,v0,l0,s0,s1)", "action_move(v0,l0,l1,f4,f3)", "action_load(c1,v0,l1,s1,s0)", "action_move(v0,l1,l0,f6,f5)", "action_unload(c1,v0,l0,s0,s1)", "action_move(v0,l0,l1,f3,f2)", "action_load(c2,v0,l1,s1,s0)", "action_move(v0,l1,l0,f5,f4)", "action_unload(c2,v0,l0,s0,s1)", "action_move(v0,l0,l1,f2,f1)", "action_load(c4,v0,l1,s1,s0)", "action_move(v0,l1,l0,f4,f3)", "action_unload(c4,v0,l0,s0,s1)", "action_move(v0,l0,l1,f1,f0)", "action_load(c6,v0,l1,s1,s0)", "action_move(v0,l1,l0,f3,f2)", "action_unload(c6,v0,l0,s0,s1)", "action_load(c7,v1,l1,s1,s0)", "action_move(v1,l1,l0,f2,f1)", "action_unload(c7,v1,l0,s0,s1)"], "is_pos_fluent_question": null}
